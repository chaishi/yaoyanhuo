(function(t){function s(s){for(var a,p,i=s[0],v=s[1],_=s[2],r=0,l=[];r<i.length;r++)p=i[r],e[p]&&l.push(e[p][0]),e[p]=0;for(a in v)Object.prototype.hasOwnProperty.call(v,a)&&(t[a]=v[a]);c&&c(s);while(l.length)l.shift()();return o.push.apply(o,_||[]),n()}function n(){for(var t,s=0;s<o.length;s++){for(var n=o[s],a=!0,i=1;i<n.length;i++){var v=n[i];0!==e[v]&&(a=!1)}a&&(o.splice(s--,1),t=p(p.s=n[0]))}return t}var a={},e={app:0},o=[];function p(s){if(a[s])return a[s].exports;var n=a[s]={i:s,l:!1,exports:{}};return t[s].call(n.exports,n,n.exports,p),n.l=!0,n.exports}p.m=t,p.c=a,p.d=function(t,s,n){p.o(t,s)||Object.defineProperty(t,s,{enumerable:!0,get:n})},p.r=function(t){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},p.t=function(t,s){if(1&s&&(t=p(t)),8&s)return t;if(4&s&&"object"===typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(p.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&s&&"string"!=typeof t)for(var a in t)p.d(n,a,function(s){return t[s]}.bind(null,a));return n},p.n=function(t){var s=t&&t.__esModule?function(){return t["default"]}:function(){return t};return p.d(s,"a",s),s},p.o=function(t,s){return Object.prototype.hasOwnProperty.call(t,s)},p.p="/";var i=window["webpackJsonp"]=window["webpackJsonp"]||[],v=i.push.bind(i);i.push=s,i=i.slice();for(var _=0;_<i.length;_++)s(i[_]);var c=v;o.push([0,"chunk-vendors"]),n()})({0:function(t,s,n){t.exports=n("56d7")},"183f":function(t,s,n){"use strict";var a=n("c1f0"),e=n.n(a);e.a},"56d7":function(t,s,n){"use strict";n.r(s);n("cadf"),n("551c"),n("f751"),n("097d");var a=n("2b0e"),e=function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{attrs:{id:"app"}},[n("n-header"),n("router-view"),n("n-footer")],1)},o=[],p=function(){var t=this,s=t.$createElement;t._self._c;return t._m(0)},i=[function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("footer",[t._v("\n  .沪ICP备19007658号. "),n("a",{attrs:{href:"http://www.yaoyanhuo.com"}},[t._v("www.yaoyanhuo.com")]),t._v("  . Connect me by email yaoyanhuoyi@qq.com\n")])}],v={name:"Footer"},_=v,c=(n("ea59"),n("2877")),r=Object(c["a"])(_,p,i,!1,null,null,null),l=r.exports,u=function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"head"},[n("div",{staticClass:"head-inner g_page-container"},[n("router-link",{attrs:{to:{path:"/"}}},[n("img",{attrs:{src:"/img/head.jpg"}})]),t._m(0)],1)])},d=[function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"info"},[n("h1",{staticClass:"name"},[t._v("Yaoyanhuo 妖艳货")]),n("span",[t._v("Be a simple programmer. ")])])}],m={name:"Header"},C=m,k=(n("5e2f"),Object(c["a"])(C,u,d,!1,null,null,null)),h=k.exports,g={name:"app",components:{NHeader:h,NFooter:l}},f=g,b=Object(c["a"])(f,e,o,!1,null,null,null),y=b.exports,w=n("8c4f"),x=function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"page-home"},[n("div",{staticClass:"g_page-container home"},[n("div",{staticClass:"blog-list"},t._l(t.blogList,function(s,a){return n("div",{key:a,staticClass:"blog"},[n("h2",{staticClass:"title"},[n("a",{attrs:{href:s.url}},[t._v(t._s(s.title))])]),n("div",{staticClass:"subinfo"},[n("span",{staticClass:"post-date"},[t._v(t._s(s.date))])]),n("div",{staticClass:"content"},[t._v(t._s(s.content)+"...")])])}),0)])])},M=[],P=[{title:"Nginx Error List",date:"posted by yaoyanhuo on 2019-06-26",url:"/blog/nginx_error",content:"本文将记录 nginx 使用过程中遇到的各类问题"},{title:"如何使用 Axios 实现跨域 ？",date:"posted by yaoyanhuo on 2019-04-02",url:"/blog/axios_cross_origin",content:"不同的框架，不同的语言，跨域方法不一样，但其本质终是实现 CORS 跨站资源共享，设置 `Access-Control-Allow-Origin`"},{title:"站点隔离技术中的进程实现（Site Isolation）",date:"posted by yaoyanhuo on 2019-04-02",url:"/blog/site_isolate_process",content:"Site Isolation 是 Chrome 67 之后默认开启的一项技术实现，采用了“一个站点一个进程”的实现模式。没有使用这项技术的浏览器依旧是一个标签页一个进程的方式。本文将以问答实验的形式对进程表现进行详细的探讨，属于实验性内容，图片较多，注意在 WI-FI 环境下浏览，土豪流量随意。"},{title:"JS 如何判断一个元素是否在可视区域",date:"posted by yaoyanhuo on 2019-03-27",url:"/blog/element_in_vision",content:"最近做的项目，需要上报广告的曝光和点击数据，理解下来本质是检测某个元素是否在可视区域内。由于一个元素有很多位置信息，相对于页面，相对于窗口，相对于父元素，client /offset /top /bottom /right /left /scroll /pageXOffset/... 基本上已经把自己搞晕了。每次使用的时候都要进行一波查询，费时，特此记录。"},{title:"Cross-Origin Read Blocking (CORB)",date:"posted by yaoyanhuo on 2019-03-23,  last updated on 2019-04-18",url:"/blog/corb",content:"从 v67 开始，Chrome 会默认启用一个新的功能叫 Site Isolation。CORB 是其中一项很重要的功能 ，属于一种新的网络平台安全策略，能够降低旁道攻击（ side-channel attacks）的风险。设计之初是为了防止浏览器把跨域网站信息发送到当前网站，这些信息可能是跨域网站的敏感信息，却又不是当前网站需要的。比如：使用 img 标签请求了 json/html/xml 等数据，这时，该请求的响应结果会变成空，且请求头和响应头会被隐藏。"},{title:"Vue 项目中使用 JSX 出现的语法冲突，导致 props 传入失效",date:"posted by yaoyanhuo on 2019-03-22",url:"/blog/vue_jsx_on_syntax_conflict",content:"有这样一个场景，switch 组件需要两个 props 参数：onText 和 offText，用于表述开关状态。在 JSX 使用 switch 组件时，在控制台发现 offText 传入 props 很正常，但 onText 却怎么也没有数据，无论传值是什么。这是为何呢？一起来看看吧。"},{title:"PM2 高级的进程管理工具（Node）",date:"posted by yaoyanhuo on 2019-03-04, last updated on 2019-03-06",url:"/blog/pm2",content:"管理 Node 服务的一把手，支持代码变化监听，进程集群，负载平衡，日志管理，统一管理进程服务等功能。本文除开 pm2 基本描述，主要会对常用命令进行详细分析，看看各个命令到底是如何工作。还有 pm2 使用过程中经常遇到的问题进行剖析，比如：CPU 只有一个，只能启动的进程集群只能是 1 个，那还能实现 0 秒重载吗？答案是：能。赶紧来领略一下pm2的强大吧。"},{title:"中断和异常（操作系统）",date:"posted by yaoyanhuo on 2019-02-20",url:"/blog/interrupt",content:"中断（interrupt）指在程序执行过程中遇到急需处理的事件时，暂时中止现行程序在 CPU 上的运行，转而执行响应的事件处理程序，待处理完成后再返回断点或调度其他程序。本文主要对中断和异常的区别、中断优先级、中断处理程序和中断服务例程关系和常见几类中断进行描述。并以 Linux 系统作为中断例子，进一步了解中断机制和中断处理过程。"},{title:"处理器状态（操作系统）",date:"posted by yaoyanhuo on 2019-02-12",url:"/blog/processor_status",content:"处理器状态至少有两种：内核态（管态）和用户态（目态）。有些操作系统会设置三种或三种以上的状态。内核状态可以执行所有指令，用户态只能执行非特权指令。程序状态字会记录程序运行的各种状态，以便保存和恢复程序现场。"},{title:"Node Verion Manager (NVM)",date:"posted by yaoyanhuo on 2019-02-02, laste updated on 2019-04-17",url:"/blog/nvm20190201",content:"Different projects have different environment, and we need to use different node version sometimes. but how ? NVM is just for that."},{title:"HTTP 概述",date:"posted by yaoyanhuo on 2018-03-06",url:"/blog/http20180306",content:"学无止尽，HTTP 相关知识有很多，本文将从资源、事物、报文和连接几个方面进行概述。可以在短时间内对 HTTP 有一个初步的认识"}],T=P,I={name:"BlogHome",layout:"home",data:function(){return{blogList:T,tabModel:"code",categories:[{text:"代码",value:"code"},{text:"摄影",value:"photograph"},{text:"英语",value:"english"},{text:"电影",value:"movie"},{text:"音乐",value:"music"},{text:"历史",value:"history"},{text:"花艺",value:"flower_arrangement"},{text:"阅读",value:"reading"}]}},computed:{},watch:{},created:function(){},mounted:function(){},methods:{}},E=I,j=(n("183f"),Object(c["a"])(E,x,M,!1,null,null,null)),S=j.exports,O=function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",[n("div",{staticClass:"blog-detail g_page-container"},[n("div",{staticClass:"markdown-body"},[n("keep-alive",[n(t.currentTabComponent,{tag:"component"})],1)],1)])])},B=[],U=(n("7f7f"),function(){var t=this,s=t.$createElement;t._self._c;return t._m(0)}),A=[function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"markdown-to-vue-loader"},[n("h1",{attrs:{id:"nginx-error-list"}},[t._v("Nginx Error List")]),n("p",[n("em",[t._v("posted by yaoyanhuo on 2019-06-26")])]),n("blockquote",[n("p",[t._v("本文将记录 nginx 使用过程中遇到的各类问题")])]),n("h2",{attrs:{id:"nginx-error-open-runnginxpid-failed-2-no-such-file-or-directory"}},[t._v('nginx: [error] open() "/run/nginx.pid" failed (2: No such file or directory)')]),n("p",[t._v("安装好 nginx 后，执行 "),n("code",[t._v("nginx -s reload")]),t._v(" 便会出现如下错误提示，")]),n("pre",[n("code",[t._v('nginx: [error] open() "/run/nginx.pid" failed (2: No such file or directory)')])]),n("p",[t._v("这是因为刚安装好的 nginx 还未启动，自然找不到对应的进程，无法重新载入。")]),n("p",[t._v("解决办法也简单，直接到 nginx 目录下，运行一下 nginx 即可，如下")]),n("pre",[n("code",[t._v("cd /usr/sbin\n./nginx")])])])}],R={},N=Object(c["a"])(R,U,A,!1,null,null,null),q=N.exports,H=function(){var t=this,s=t.$createElement;t._self._c;return t._m(0)},L=[function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"markdown-to-vue-loader"},[n("h1",{attrs:{id:"站点隔离技术中的进程实现（site-isolation）"}},[t._v("站点隔离技术中的进程实现（Site Isolation）")]),n("p",[n("em",[t._v("posted by yaoyanhuo on 2019-04-02")])]),n("blockquote",[n("p",[t._v("Site Isolation 是 Chrome 67 之后默认开启的一项技术实现，采用了“一个站点一个进程”的实现模式。没有使用这项技术的浏览器依旧是一个标签页一个进程的方式。本文将以问答实验的形式对进程表现进行详细的探讨，属于实验性内容，图片较多，注意在 WI-FI 环境下浏览，土豪流量随意。")])]),n("h2",{attrs:{id:"总述"}},[t._v("总述")]),n("p",[t._v("实现了 Site Isolation 的浏览器根据站点分配进程，一个站点一个进程；而普通浏览器是根据标签页进行分配，多一个标签多一个进程，无论是否是同一站点同一URL。")]),n("h2",{attrs:{id:"探索目录"}},[t._v("探索目录")]),n("h4",{attrs:{id:"1-两个-url-一模一样的标签页运行在两个不同的进程中吗？"}},[t._v("1. 两个 URL 一模一样的标签页运行在两个不同的进程中吗？")]),n("p",[t._v("  普通浏览器会产生两个进程，支持 Site Isolation 的浏览器只会产生一个。")]),n("h4",{attrs:{id:"2-支持-site-isolation-的浏览器中，不同的域名、子域名、端口号会对进程有什么影响？"}},[t._v("2. 支持 Site Isolation 的浏览器中，不同的域名、子域名、端口号会对进程有什么影响？")]),n("p",[t._v("  只要一级域名相同就共享同一个进程，一级域名不同，则不共享进程。")]),n("h4",{attrs:{id:"3-源站点页面中嵌入跨域站点的-iframe-会产生新的进程吗？"}},[t._v("3. 源站点页面中嵌入跨域站点的 iframe 会产生新的进程吗？")]),n("p",[t._v("  普通浏览器跨域站点和源站共享内存; 支持 Site Isolation 的浏览器会产生新的进程。")]),n("h4",{attrs:{id:"4-源站点页面中嵌入-一级域名相同-而子域名和端口号不同-站点的-iframe-时，会产生新的进程吗？"}},[t._v("4. 源站点页面中嵌入 一级域名相同 而子域名和端口号不同 站点的 iframe 时，会产生新的进程吗？")]),n("p",[t._v("  不会。")]),n("h2",{attrs:{id:"环境准备"}},[t._v("环境准备")]),n("p",[t._v("host 配置")]),n("pre",[n("code",[t._v("127.0.0.1 a.dd.com\n127.0.0.1 c.dd.com\n127.0.0.1 test.pp.com\n127.0.0.1 bcc.qq.com\n127.0.0.1 sheepluo.cap.qq.com")])]),n("p",[t._v("浏览器：Chrome 73、Firefox 66、IE11")]),n("p",[t._v("服务端代码片段示例，")]),n("pre",[n("code",[n("span",{staticClass:"token keyword"},[t._v("const")]),t._v(" express "),n("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),n("span",{staticClass:"token function"},[t._v("require")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token string"},[t._v("'express'")]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n"),n("span",{staticClass:"token keyword"},[t._v("const")]),t._v(" app "),n("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),n("span",{staticClass:"token function"},[t._v("express")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n"),n("span",{staticClass:"token keyword"},[t._v("const")]),t._v(" port "),n("span",{staticClass:"token operator"},[t._v("=")]),t._v(" process"),n("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("argv"),n("span",{staticClass:"token punctuation"},[t._v("[")]),n("span",{staticClass:"token number"},[t._v("2")]),n("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),n("span",{staticClass:"token operator"},[t._v("||")]),t._v(" "),n("span",{staticClass:"token number"},[t._v("3002")]),t._v("\n\napp"),n("span",{staticClass:"token punctuation"},[t._v(".")]),n("span",{staticClass:"token function"},[t._v("get")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token string"},[t._v("'/'")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token keyword"},[t._v("function")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token parameter"},[t._v("req"),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" res")]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n  res"),n("span",{staticClass:"token punctuation"},[t._v(".")]),n("span",{staticClass:"token function"},[t._v("json")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("greeting"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("'hello chrome!'")]),n("span",{staticClass:"token punctuation"},[t._v("}")]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n"),n("span",{staticClass:"token punctuation"},[t._v("}")]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n\napp"),n("span",{staticClass:"token punctuation"},[t._v(".")]),n("span",{staticClass:"token function"},[t._v("listen")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("port"),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),n("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" console"),n("span",{staticClass:"token punctuation"},[t._v(".")]),n("span",{staticClass:"token function"},[t._v("log")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token template-string"},[n("span",{staticClass:"token string"},[t._v("`app is listening at localhost:")]),n("span",{staticClass:"token interpolation"},[n("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("${")]),t._v("port"),n("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("}")])]),n("span",{staticClass:"token string"},[t._v("`")])]),n("span",{staticClass:"token punctuation"},[t._v(")")]),n("span",{staticClass:"token punctuation"},[t._v(")")])])]),n("h2",{attrs:{id:"1-两个-url-一模一样的标签页运行在两个不同的进程中吗？-1"}},[t._v("1 两个 URL 一模一样的标签页运行在两个不同的进程中吗？")]),n("p",[n("strong",[t._v("测试案例")]),t._v("：在各个浏览器打开两个一模一样的标签页，"),n("code",[t._v("localhost:8000/blog/corb")])]),n("p",[n("strong",[t._v("测试结果")]),t._v("：Firefox 和 IE 这类普通浏览器会生成两个进程（因为开了两个标签页）；应用了 "),n("code",[t._v("Site Isolation")]),t._v(" 的 Chrome 高版本浏览器（Chrome 67 以后）只会生成一个进程。如下图所示，")]),n("p",[n("strong",[t._v("【Tooltip】"),n("code",[t._v("shift + ~ + ESC")]),t._v(" 会自动打开 Chrome 的任务管理器；IE 没有自身的任务管理器，只能查看系统的任务管理器观察。")])]),n("p",[n("img",{attrs:{src:"http://img.yaoyanhuo.com/blog/chrome_process_detail.png",alt:"chrome 相同标签页的进程表现"}})]),n("p",[n("img",{attrs:{src:"http://img.yaoyanhuo.com/blog/firefox_process.png",alt:"Firefox 相同标签页的进程表现"}})]),n("p",[n("img",{attrs:{src:"http://img.yaoyanhuo.com/blog/IE_process.png",alt:"IE 相同标签页的进程表现"}})]),n("h2",{attrs:{id:"2-支持-site-isolation-的浏览器中，不同的子域名、端口号会对进程有什么影响？"}},[t._v("2 支持 Site Isolation 的浏览器中，不同的子域名、端口号会对进程有什么影响？")]),n("p",[n("strong",[t._v("测试案例")]),t._v("：在浏览器中访问 "),n("code",[t._v("a.dd.com:3001")]),n("code",[t._v("a.dd.com:3002")]),n("code",[t._v("c.dd.com:3002")]),t._v(" 和 "),n("code",[t._v("sheepluo.cap.qq.com:3002")])]),n("p",[n("strong",[t._v("测试结果")]),t._v("：如下图所示，一级域名相同、子域名和端口号不同的的三个标签页共享一个进程；域名完全不同的 "),n("code",[t._v("sheepluo.cap.qq.com:3002")]),t._v(" 独占一个进程。")]),n("p",[t._v("对于普通浏览器，进程开启的一般标准是有几个标签页，由此，当前测试结果毫无疑问，开启了 4 个进程。")]),n("p",[n("img",{attrs:{src:"http://img.yaoyanhuo.com/blog/different_domain_port_process.png",alt:"不同域名端口的进程情况"}})]),n("h2",{attrs:{id:"3-源站点页面中嵌入跨域站点的-iframe-会产生新的进程吗？-1"}},[t._v("3 源站点页面中嵌入跨域站点的 iframe 会产生新的进程吗？")]),n("p",[n("strong",[t._v("案例")]),t._v("：在 "),n("code",[t._v("test.pp.com:3002")]),t._v(" 中嵌入 "),n("code",[t._v("v.qq.com")]),n("strong",[t._v("结果")]),t._v("：Crome 73 产生了新进程，分配了新内存；Firefox 没有产生新进程，跨域站点和源站点共享进程。")]),n("p",[t._v("代码片段如下，")]),n("pre",[n("code",[n("span",{staticClass:"token doctype"},[t._v("<!DOCTYPE html>")]),t._v("\n"),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("html")]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("\n"),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("head")]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("\n  "),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("meta")]),t._v(" "),n("span",{staticClass:"token attr-name"},[t._v("charset")]),n("span",{staticClass:"token attr-value"},[n("span",{staticClass:"token punctuation"},[t._v("=")]),n("span",{staticClass:"token punctuation"},[t._v('"')]),t._v("utf-8"),n("span",{staticClass:"token punctuation"},[t._v('"')])]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("\n  "),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("meta")]),t._v(" "),n("span",{staticClass:"token attr-name"},[t._v("http-equiv")]),n("span",{staticClass:"token attr-value"},[n("span",{staticClass:"token punctuation"},[t._v("=")]),n("span",{staticClass:"token punctuation"},[t._v('"')]),t._v("X-UA-Compatible"),n("span",{staticClass:"token punctuation"},[t._v('"')])]),t._v(" "),n("span",{staticClass:"token attr-name"},[t._v("content")]),n("span",{staticClass:"token attr-value"},[n("span",{staticClass:"token punctuation"},[t._v("=")]),n("span",{staticClass:"token punctuation"},[t._v('"')]),t._v("IE=edge"),n("span",{staticClass:"token punctuation"},[t._v('"')])]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("\n  "),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("title")]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("跨域测试"),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("</")]),t._v("title")]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("\n"),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("</")]),t._v("head")]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("\n"),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("body")]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("\n  "),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("h1")]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("Home Page"),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("</")]),t._v("h1")]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("\n  "),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("p")]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("This is a test project!"),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("</")]),t._v("p")]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("\n\n  "),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("div")]),n("span",{staticClass:"token style-attr language-css"},[n("span",{staticClass:"token attr-name"},[t._v(" "),n("span",{staticClass:"token attr-name"},[t._v("style")])]),n("span",{staticClass:"token punctuation"},[t._v('="')]),n("span",{staticClass:"token attr-value"},[n("span",{staticClass:"token property"},[t._v("position")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" absolute"),n("span",{staticClass:"token punctuation"},[t._v(";")]),n("span",{staticClass:"token property"},[t._v("width")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("100%"),n("span",{staticClass:"token punctuation"},[t._v(";")]),n("span",{staticClass:"token property"},[t._v("height")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("100%"),n("span",{staticClass:"token punctuation"},[t._v(";")]),n("span",{staticClass:"token property"},[t._v("top")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("0"),n("span",{staticClass:"token punctuation"},[t._v(";")])]),n("span",{staticClass:"token punctuation"},[t._v('"')])]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("\n    "),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("iframe")]),t._v(" "),n("span",{staticClass:"token attr-name"},[t._v("src")]),n("span",{staticClass:"token attr-value"},[n("span",{staticClass:"token punctuation"},[t._v("=")]),n("span",{staticClass:"token punctuation"},[t._v('"')]),t._v("https://v.qq.com"),n("span",{staticClass:"token punctuation"},[t._v('"')])]),t._v(" "),n("span",{staticClass:"token attr-name"},[t._v("frameborder")]),n("span",{staticClass:"token attr-value"},[n("span",{staticClass:"token punctuation"},[t._v("=")]),n("span",{staticClass:"token punctuation"},[t._v('"')]),t._v("0"),n("span",{staticClass:"token punctuation"},[t._v('"')])]),t._v(" "),n("span",{staticClass:"token attr-name"},[t._v("width")]),n("span",{staticClass:"token attr-value"},[n("span",{staticClass:"token punctuation"},[t._v("=")]),n("span",{staticClass:"token punctuation"},[t._v('"')]),t._v("100%"),n("span",{staticClass:"token punctuation"},[t._v('"')])]),t._v(" "),n("span",{staticClass:"token attr-name"},[t._v("height")]),n("span",{staticClass:"token attr-value"},[n("span",{staticClass:"token punctuation"},[t._v("=")]),n("span",{staticClass:"token punctuation"},[t._v('"')]),t._v("100%"),n("span",{staticClass:"token punctuation"},[t._v('"')])]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("</")]),t._v("iframe")]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("\n  "),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("</")]),t._v("div")]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("\n"),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("</")]),t._v("body")]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("\n"),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("</")]),t._v("html")]),n("span",{staticClass:"token punctuation"},[t._v(">")])])])]),n("p",[n("img",{attrs:{src:"http://img.yaoyanhuo.com/blog/process_01.png",alt:"chrome 嵌入跨站 iframe"}})]),n("p",[n("img",{attrs:{src:"http://img.yaoyanhuo.com/blog/firefox_iframe_process.png",alt:"Firefox 相同标签页的进程表现"}})]),n("h2",{attrs:{id:"4-源站点页面中嵌入-一级域名相同-而子域名和端口号不同-站点的-iframe-时，会产生新的进程吗？-1"}},[t._v("4 源站点页面中嵌入 一级域名相同 而子域名和端口号不同 站点的 iframe 时，会产生新的进程吗？")]),n("p",[n("strong",[t._v("测试案例")]),t._v("："),n("code",[t._v("http://a.dd.com:3002/")]),t._v(" 中嵌入 "),n("code",[t._v("http://c.dd.com:3001/")])]),n("p",[n("strong",[t._v("测试结果")]),t._v("：所有浏览器都不会产生新的进程，甚至子进程，直接使用原进程。")]),n("p",[t._v("代码片段如下，")]),n("pre",[n("code",[n("span",{staticClass:"token doctype"},[t._v("<!DOCTYPE html>")]),t._v("\n"),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("html")]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("\n"),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("head")]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("\n  "),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("meta")]),t._v(" "),n("span",{staticClass:"token attr-name"},[t._v("charset")]),n("span",{staticClass:"token attr-value"},[n("span",{staticClass:"token punctuation"},[t._v("=")]),n("span",{staticClass:"token punctuation"},[t._v('"')]),t._v("utf-8"),n("span",{staticClass:"token punctuation"},[t._v('"')])]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("\n  "),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("meta")]),t._v(" "),n("span",{staticClass:"token attr-name"},[t._v("http-equiv")]),n("span",{staticClass:"token attr-value"},[n("span",{staticClass:"token punctuation"},[t._v("=")]),n("span",{staticClass:"token punctuation"},[t._v('"')]),t._v("X-UA-Compatible"),n("span",{staticClass:"token punctuation"},[t._v('"')])]),t._v(" "),n("span",{staticClass:"token attr-name"},[t._v("content")]),n("span",{staticClass:"token attr-value"},[n("span",{staticClass:"token punctuation"},[t._v("=")]),n("span",{staticClass:"token punctuation"},[t._v('"')]),t._v("IE=edge"),n("span",{staticClass:"token punctuation"},[t._v('"')])]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("\n  "),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("title")]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("跨域测试"),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("</")]),t._v("title")]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("\n"),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("</")]),t._v("head")]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("\n"),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("body")]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("\n  "),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("h1")]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("Home Page"),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("</")]),t._v("h1")]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("\n  "),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("p")]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("This is a test project!"),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("</")]),t._v("p")]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("\n\n  "),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("div")]),n("span",{staticClass:"token style-attr language-css"},[n("span",{staticClass:"token attr-name"},[t._v(" "),n("span",{staticClass:"token attr-name"},[t._v("style")])]),n("span",{staticClass:"token punctuation"},[t._v('="')]),n("span",{staticClass:"token attr-value"},[n("span",{staticClass:"token property"},[t._v("position")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" absolute"),n("span",{staticClass:"token punctuation"},[t._v(";")]),n("span",{staticClass:"token property"},[t._v("width")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("100%"),n("span",{staticClass:"token punctuation"},[t._v(";")]),n("span",{staticClass:"token property"},[t._v("height")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("100%"),n("span",{staticClass:"token punctuation"},[t._v(";")]),n("span",{staticClass:"token property"},[t._v("top")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("0"),n("span",{staticClass:"token punctuation"},[t._v(";")])]),n("span",{staticClass:"token punctuation"},[t._v('"')])]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("\n    "),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("iframe")]),t._v(" "),n("span",{staticClass:"token attr-name"},[t._v("src")]),n("span",{staticClass:"token attr-value"},[n("span",{staticClass:"token punctuation"},[t._v("=")]),n("span",{staticClass:"token punctuation"},[t._v('"')]),t._v("https://c.dd.com:3001"),n("span",{staticClass:"token punctuation"},[t._v('"')])]),t._v(" "),n("span",{staticClass:"token attr-name"},[t._v("frameborder")]),n("span",{staticClass:"token attr-value"},[n("span",{staticClass:"token punctuation"},[t._v("=")]),n("span",{staticClass:"token punctuation"},[t._v('"')]),t._v("0"),n("span",{staticClass:"token punctuation"},[t._v('"')])]),t._v(" "),n("span",{staticClass:"token attr-name"},[t._v("width")]),n("span",{staticClass:"token attr-value"},[n("span",{staticClass:"token punctuation"},[t._v("=")]),n("span",{staticClass:"token punctuation"},[t._v('"')]),t._v("100%"),n("span",{staticClass:"token punctuation"},[t._v('"')])]),t._v(" "),n("span",{staticClass:"token attr-name"},[t._v("height")]),n("span",{staticClass:"token attr-value"},[n("span",{staticClass:"token punctuation"},[t._v("=")]),n("span",{staticClass:"token punctuation"},[t._v('"')]),t._v("100%"),n("span",{staticClass:"token punctuation"},[t._v('"')])]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("</")]),t._v("iframe")]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("\n  "),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("</")]),t._v("div")]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("\n"),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("</")]),t._v("body")]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("\n"),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("</")]),t._v("html")]),n("span",{staticClass:"token punctuation"},[t._v(">")])])])]),n("p",[n("img",{attrs:{src:"http://img.yaoyanhuo.com/blog/chrome_iframe_same_domain.png",alt:"chrome 嵌入同域名 iframe"}}),n("img",{attrs:{src:"http://img.yaoyanhuo.com/blog/fire_fox_iframe_same_domain.png",alt:"firefox 嵌入同域名 iframe"}})])])}],X={},D=Object(c["a"])(X,H,L,!1,null,null,null),$=D.exports,W=function(){var t=this,s=t.$createElement;t._self._c;return t._m(0)},V=[function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"markdown-to-vue-loader"},[n("h1",{attrs:{id:"如何使用-axios-实现跨域-？"}},[t._v("如何使用 Axios 实现跨域 ？")]),n("p",[n("em",[t._v("posted by yaoyanhuo on 2019-04-02")])]),n("blockquote",[n("p",[t._v("不同的框架，不同的语言，跨域方法不一样，但其本质终是实现 CORS 跨站资源共享，设置 "),n("code",[t._v("Access-Control-Allow-Origin")])])]),n("p",[t._v("前端代码，")]),n("pre",[n("code",[n("span",{staticClass:"token operator"},[t._v("<")]),t._v("script src"),n("span",{staticClass:"token operator"},[t._v("=")]),n("span",{staticClass:"token string"},[t._v('"https://unpkg.com/axios/dist/axios.min.js"')]),n("span",{staticClass:"token operator"},[t._v(">")]),n("span",{staticClass:"token operator"},[t._v("<")]),n("span",{staticClass:"token operator"},[t._v("/")]),t._v("script"),n("span",{staticClass:"token operator"},[t._v(">")]),t._v("\n"),n("span",{staticClass:"token operator"},[t._v("<")]),t._v("script"),n("span",{staticClass:"token operator"},[t._v(">")]),t._v("\n  "),n("span",{staticClass:"token function"},[t._v("axios")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    url"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("'http://c.dd.com:3002/data'")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n    method"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("'get'")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n    withCredentials"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token boolean"},[t._v("true")]),t._v("\n  "),n("span",{staticClass:"token punctuation"},[t._v("}")]),n("span",{staticClass:"token punctuation"},[t._v(")")]),n("span",{staticClass:"token punctuation"},[t._v(".")]),n("span",{staticClass:"token function"},[t._v("then")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token parameter"},[t._v("res")]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),n("span",{staticClass:"token operator"},[t._v("=>")]),t._v("  "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    console"),n("span",{staticClass:"token punctuation"},[t._v(".")]),n("span",{staticClass:"token function"},[t._v("log")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("res"),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n  "),n("span",{staticClass:"token punctuation"},[t._v("}")]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n"),n("span",{staticClass:"token operator"},[t._v("<")]),n("span",{staticClass:"token operator"},[t._v("/")]),t._v("script"),n("span",{staticClass:"token operator"},[t._v(">")])])]),n("p",[t._v("服务端代码，")]),n("pre",[n("code",[n("span",{staticClass:"token keyword"},[t._v("const")]),t._v(" express "),n("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),n("span",{staticClass:"token function"},[t._v("require")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token string"},[t._v("'express'")]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n"),n("span",{staticClass:"token keyword"},[t._v("const")]),t._v(" app "),n("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),n("span",{staticClass:"token function"},[t._v("express")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n"),n("span",{staticClass:"token keyword"},[t._v("const")]),t._v(" port "),n("span",{staticClass:"token operator"},[t._v("=")]),t._v(" process"),n("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("argv"),n("span",{staticClass:"token punctuation"},[t._v("[")]),n("span",{staticClass:"token number"},[t._v("2")]),n("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),n("span",{staticClass:"token operator"},[t._v("||")]),t._v(" "),n("span",{staticClass:"token number"},[t._v("3002")]),t._v("\n\napp"),n("span",{staticClass:"token punctuation"},[t._v(".")]),n("span",{staticClass:"token function"},[t._v("get")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token string"},[t._v("'/data'")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token keyword"},[t._v("function")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token parameter"},[t._v("req"),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" res")]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n  res"),n("span",{staticClass:"token punctuation"},[t._v(".")]),n("span",{staticClass:"token function"},[t._v("set")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    "),n("span",{staticClass:"token string"},[t._v("'Access-Control-Allow-Origin'")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("'http://test.pp.com:3002'")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n    "),n("span",{staticClass:"token string"},[t._v("'Access-Control-Allow-Credentials'")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token boolean"},[t._v("true")]),t._v("\n  "),n("span",{staticClass:"token punctuation"},[t._v("}")]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n  res"),n("span",{staticClass:"token punctuation"},[t._v(".")]),n("span",{staticClass:"token function"},[t._v("json")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("greeting"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("'hello server1...'")]),n("span",{staticClass:"token punctuation"},[t._v("}")]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n"),n("span",{staticClass:"token punctuation"},[t._v("}")]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n\napp"),n("span",{staticClass:"token punctuation"},[t._v(".")]),n("span",{staticClass:"token function"},[t._v("listen")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("port"),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),n("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" console"),n("span",{staticClass:"token punctuation"},[t._v(".")]),n("span",{staticClass:"token function"},[t._v("log")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token template-string"},[n("span",{staticClass:"token string"},[t._v("`app is listening at localhost:")]),n("span",{staticClass:"token interpolation"},[n("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("${")]),t._v("port"),n("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("}")])]),n("span",{staticClass:"token string"},[t._v("`")])]),n("span",{staticClass:"token punctuation"},[t._v(")")]),n("span",{staticClass:"token punctuation"},[t._v(")")])])]),n("p",[t._v("Chrome 浏览器会隐藏请求头，出现 "),n("code",[t._v("Provisional headers are shown")]),t._v("，其它浏览器不会出现。下图为 Chrome 浏览器请求头呈现，响应头和相应内容正常。")]),n("p",[n("img",{attrs:{src:"http://img.yaoyanhuo.com/blog/cross.png",alt:"Chrome 跨域实现结果"}})])])}],F={},z=Object(c["a"])(F,W,V,!1,null,null,null),G=z.exports,Y=function(){var t=this,s=t.$createElement;t._self._c;return t._m(0)},J=[function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"markdown-to-vue-loader"},[n("h1",{attrs:{id:"js-如何判断一个元素是否在可视区域"}},[t._v("JS 如何判断一个元素是否在可视区域")]),n("p",[n("em",[t._v("posted by yaoyanhuo on 2019-03-27")])]),n("blockquote",[n("p",[t._v("最近做的项目，需要上报广告的曝光和点击数据，理解下来本质是检测某个元素是否在可视区域内。由于一个元素有很多位置信息，相对于页面，相对于窗口，相对于父元素，client /offset /top /bottom /right /left /scroll /pageXOffset/... 基本上已经把自己搞晕了。每次使用的时候都要进行一波查询，费时，特此记录。")])]),n("h2",{attrs:{id:"认识-getboundingclientrect"}},[t._v("认识 getBoundingClientRect")]),n("p",[n("strong",[t._v("兼容性")]),t._v("：现代浏览器基本上都已支持，详细兼容性查看："),n("a",{attrs:{href:"https://caniuse.com/#search=getBoundingClientRect%E3%80%82"}},[t._v("https://caniuse.com/#search=getBoundingClientRect。")])]),n("p",[n("strong",[t._v("使用方法")]),t._v("："),n("code",[t._v("$0.getBoundingClientRect()")]),t._v("，"),n("code",[t._v("$0")]),t._v(" 是通过 "),n("code",[t._v("Elements")]),t._v(" 面板选中的元素，方法返回值是 "),n("code",[t._v("DOMRect")]),t._v(" 对象，其属性均为只读，如下，")]),n("pre",[n("code",[t._v("domRect"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n  top"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token number"},[t._v("123.0")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("  "),n("span",{staticClass:"token comment"},[t._v("// Y 轴，相对于视口原点（viewport origin）矩形盒子的顶部。")]),t._v("\n  bottom"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token number"},[t._v("123")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token comment"},[t._v("// Y 轴，相对于视口原点（viewport origin）矩形盒子的底部")]),t._v("\n  left"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token number"},[t._v("123")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token comment"},[t._v("// X 轴，相对于视口原点（viewport origin）矩形盒子的左侧")]),t._v("\n  right"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token number"},[t._v("123")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token comment"},[t._v("// X 轴，相对于视口原点（viewport origin）矩形盒子的右侧")]),t._v("\n  height"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token number"},[t._v("123")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token comment"},[t._v("// 矩形盒子的高度（等同于 bottom 减 top）")]),t._v("\n  width"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token number"},[t._v("123.1")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token comment"},[t._v("// 矩形盒子的宽度（等同于 right 减 left）")]),t._v("\n  x"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token number"},[t._v("123")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token comment"},[t._v("// X 轴，相对于视口原点（viewport origin）矩形盒子的左侧")]),t._v("\n  y"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token number"},[t._v("123.0")]),t._v(" "),n("span",{staticClass:"token comment"},[t._v("// Y 轴，相对于视口原点（viewport origin）矩形盒子的顶部")]),t._v("\n"),n("span",{staticClass:"token punctuation"},[t._v("}")])])]),n("p",[t._v("视口原点指窗口可视区域左上角，如下图。当元素滚出视口时，除了 "),n("code",[t._v("width")]),t._v(" 和 "),n("code",[t._v("height")]),t._v("，其它属性值可能为负。")]),n("p",[n("img",{attrs:{src:"https://mdn.mozillademos.org/files/15087/rect.png",alt:"相对位置"}})]),n("p",[t._v("从官方描述来看，"),n("code",[t._v("top === y")]),t._v("， "),n("code",[t._v("left === x")]),t._v("， "),n("code",[t._v("height = bottom - top")]),t._v("， "),n("code",[t._v("width = right - left")]),t._v("。")]),n("p",[t._v("该对象本身只有 "),n("code",[t._v("left")]),n("code",[t._v("top")]),n("code",[t._v("bottom")]),n("code",[t._v("right")]),t._v("，至于 "),n("code",[t._v("x")]),n("code",[t._v("y")]),n("code",[t._v("width")]),n("code",[t._v("height")]),t._v(" 是后来加上的。因此，为保证更好的兼容性，可以优先使用前 4 个属性。比如  IE8 就只支持 "),n("code",[t._v("left")]),t._v(" 和 "),n("code",[t._v("top")]),t._v("，不支持 "),n("code",[t._v("x")]),t._v(" 和 "),n("code",[t._v("y")]),t._v("。")]),n("p",[t._v("如果你想问，为什么已经有了 "),n("code",[t._v("left")]),t._v(" 和 "),n("code",[t._v("top")]),t._v("，还要添加 "),n("code",[t._v("x")]),t._v(" 和  "),n("code",[t._v("y")]),t._v("，这不是重复多事儿么？嗯... 好巧... 我也正在思考这个问题，如果您知道答案，欢迎通过邮件 "),n("a",{attrs:{href:"mailto:yaoyanhuoyi@qq.com"}},[t._v("yaoyanhuoyi@qq.com")]),t._v(" 告诉我。")]),n("h2",{attrs:{id:"元素盒模型宽度和距离信息"}},[t._v("元素盒模型宽度和距离信息")]),n("pre",[n("code",[t._v("$"),n("span",{staticClass:"token number"},[t._v("0.")]),t._v("clientHeight "),n("span",{staticClass:"token comment"},[t._v("// clientHeight = CSS height + CSS padding - 水平滚动条高度 (如果存在)，如下图示范")]),t._v("\n$"),n("span",{staticClass:"token number"},[t._v("0.")]),t._v("clientWidth  "),n("span",{staticClass:"token comment"},[t._v("// clientWidth = CSS width + CSS padding - 垂直滚动条高度 (如果存在)，如下图示范")]),t._v("\n$"),n("span",{staticClass:"token number"},[t._v("0.")]),t._v("clientTop  "),n("span",{staticClass:"token comment"},[t._v("// 元素顶部边框的宽度，单位 px")]),t._v("\n$"),n("span",{staticClass:"token number"},[t._v("0.")]),t._v("clientLeft  "),n("span",{staticClass:"token comment"},[t._v("// 元素左侧边框的宽度，单位 px")]),t._v("\n\n$"),n("span",{staticClass:"token number"},[t._v("0.")]),t._v("offsetHeight  "),n("span",{staticClass:"token comment"},[t._v("// offsetHeight = CSS height + CSS padding + 水平滚动条高度 (如果存在) + css border，如下图示范")]),t._v("\n$"),n("span",{staticClass:"token number"},[t._v("0.")]),t._v("offsetWidth  "),n("span",{staticClass:"token comment"},[t._v("// offsetWidth = CSS height + CSS padding + 垂直滚动条高度 (如果存在) + css border，如下图示范")]),t._v("\n$"),n("span",{staticClass:"token number"},[t._v("0.")]),t._v("offsetParent  "),n("span",{staticClass:"token comment"},[t._v("// 返回距离 $0 最近的定位祖先元素，即在定位过程中，可知当前元素是依据哪个元素定位的")]),t._v("\n$"),n("span",{staticClass:"token number"},[t._v("0.")]),t._v("offsetTop  "),n("span",{staticClass:"token comment"},[t._v("// 返回当前元素相对于其 offsetParent 元素的顶部的距离")]),t._v("\n$"),n("span",{staticClass:"token number"},[t._v("0.")]),t._v("offsetLeft  "),n("span",{staticClass:"token comment"},[t._v("// 返回当前元素相对于其 offsetParent 元素的左侧的距离")]),t._v("\n\n$"),n("span",{staticClass:"token number"},[t._v("0.")]),t._v("scrollHeight "),n("span",{staticClass:"token comment"},[t._v("// 测量方式同 clientHeight，只是还包括因滚动被未显示出来的内容。如果没有滚动条，scrollHeight = clientHeight")]),t._v("\n$"),n("span",{staticClass:"token number"},[t._v("0.")]),t._v("scrollWidth "),n("span",{staticClass:"token comment"},[t._v("// 测量方式同 clientWidth，只是还包括因滚动被未显示出来的内容。如果没有滚动条，scrollWidth = clientWidth")]),t._v("\n$"),n("span",{staticClass:"token number"},[t._v("0.")]),t._v("scrollTop "),n("span",{staticClass:"token comment"},[t._v("// 可滚动元素 已滚动顶部距离")]),t._v("\n$"),n("span",{staticClass:"token number"},[t._v("0.")]),t._v("scrollLeft "),n("span",{staticClass:"token comment"},[t._v("// 可滚动元素 已滚动左侧距离 ")])])]),n("p",[n("img",{attrs:{src:"https://mdn.mozillademos.org/files/346/Dimensions-client.png",alt:"clientHeight"}}),n("img",{attrs:{src:"https://mdn.mozillademos.org/files/347/Dimensions-offset.png",alt:"offsetHeight"}})]),n("h2",{attrs:{id:"窗口位置信息"}},[t._v("窗口位置信息")]),n("pre",[n("code",[t._v("window"),n("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("innerHeight "),n("span",{staticClass:"token comment"},[t._v("// 浏览器窗口的视口（viewport）高度（单位：px），如果有水平滚动条，也包括滚动条高度")]),t._v("\nwindow"),n("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("innerWidth "),n("span",{staticClass:"token comment"},[t._v("// 浏览器窗口的视口（viewport）宽度（单位：px），如果有垂直滚动条，也包括滚动条高度")]),t._v("\n\nwindow"),n("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("pageXOffset  "),n("span",{staticClass:"token comment"},[t._v("// 是 window.scrollX 别名，为了更好的兼容性和方便性，使用 pageXOffset，而 scrollX 存在元素位置种类多，写起来麻烦")]),t._v("\nwindow"),n("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("pageYOffset "),n("span",{staticClass:"token comment"},[t._v("// 是 window.scrollY 别名，为了更好的兼容性和方便性，使用 pageXOffset，而 scrollY 存在元素位置种类多，写起来麻烦")])])]),n("p",[t._v("IE9 以前的老浏览器就需要按照如下方式兼容处理窗口滚动距离，如果是现代浏览器直接使用 pageXOffset 即可。")]),n("pre",[n("code",[n("span",{staticClass:"token keyword"},[t._v("var")]),t._v(" x "),n("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("window"),n("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("pageXOffset "),n("span",{staticClass:"token operator"},[t._v("!==")]),t._v(" "),n("span",{staticClass:"token keyword"},[t._v("undefined")]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n  "),n("span",{staticClass:"token operator"},[t._v("?")]),t._v(" window"),n("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("pageXOffset\n  "),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("document"),n("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("documentElement "),n("span",{staticClass:"token operator"},[t._v("||")]),t._v(" document"),n("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("body"),n("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("parentNode "),n("span",{staticClass:"token operator"},[t._v("||")]),t._v(" document"),n("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("body"),n("span",{staticClass:"token punctuation"},[t._v(")")]),n("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("scrollLeft"),n("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n"),n("span",{staticClass:"token keyword"},[t._v("var")]),t._v(" y "),n("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("window"),n("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("pageYOffset "),n("span",{staticClass:"token operator"},[t._v("!==")]),t._v(" "),n("span",{staticClass:"token keyword"},[t._v("undefined")]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n  "),n("span",{staticClass:"token operator"},[t._v("?")]),t._v(" window"),n("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("pageYOffset\n  "),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("document"),n("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("documentElement "),n("span",{staticClass:"token operator"},[t._v("||")]),t._v(" document"),n("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("body"),n("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("parentNode "),n("span",{staticClass:"token operator"},[t._v("||")]),t._v(" document"),n("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("body"),n("span",{staticClass:"token punctuation"},[t._v(")")]),n("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("scrollTop"),n("span",{staticClass:"token punctuation"},[t._v(";")])])]),n("h2",{attrs:{id:"如何获取元素相对于整个页面的位置？"}},[t._v("如何获取元素相对于整个页面的位置？")]),n("p",[t._v("元素绝对位置 = 滚动距离 + 元素到可视窗口的距离")]),n("pre",[n("code",[n("span",{staticClass:"token keyword"},[t._v("function")]),t._v(" "),n("span",{staticClass:"token function"},[t._v("getElementPos")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n  "),n("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("left"),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" top"),n("span",{staticClass:"token punctuation"},[t._v("}")]),t._v(" "),n("span",{staticClass:"token operator"},[t._v("=")]),t._v(" $"),n("span",{staticClass:"token number"},[t._v("0.")]),n("span",{staticClass:"token function"},[t._v("getBoundingClientRect")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n  x "),n("span",{staticClass:"token operator"},[t._v("=")]),t._v(" window"),n("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("pageXOffset "),n("span",{staticClass:"token operator"},[t._v("+")]),t._v(" left\n  y "),n("span",{staticClass:"token operator"},[t._v("=")]),t._v(" window"),n("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("pageYOffset "),n("span",{staticClass:"token operator"},[t._v("+")]),t._v(" top\n  "),n("span",{staticClass:"token keyword"},[t._v("return")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("x"),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" y"),n("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n"),n("span",{staticClass:"token punctuation"},[t._v("}")])])]),n("h2",{attrs:{id:"如何判断一个元素是否在可视区域内？"}},[t._v("如何判断一个元素是否在可视区域内？")]),n("p",[t._v("先判断垂直方向在可视区域内，再判断水平方向在可视区域内。")]),n("p",[n("img",{attrs:{src:"http://img.yaoyanhuo.com/element_4.png",alt:"元素位置"}})]),n("pre",[n("code",[n("span",{staticClass:"token keyword"},[t._v("function")]),t._v(" "),n("span",{staticClass:"token function"},[t._v("isElementVisible")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n  "),n("span",{staticClass:"token keyword"},[t._v("let")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("top"),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" left"),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" width"),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" height"),n("span",{staticClass:"token punctuation"},[t._v("}")]),t._v(" "),n("span",{staticClass:"token operator"},[t._v("=")]),t._v(" $"),n("span",{staticClass:"token number"},[t._v("0.")]),n("span",{staticClass:"token function"},[t._v("getBoundingClientRect")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n  "),n("span",{staticClass:"token comment"},[t._v("// 水平和垂直两个方向同时在可视区域")]),t._v("\n  "),n("span",{staticClass:"token keyword"},[t._v("return")]),t._v(" top "),n("span",{staticClass:"token operator"},[t._v("<")]),t._v(" window"),n("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("innerHeight "),n("span",{staticClass:"token operator"},[t._v("&&")]),t._v(" top "),n("span",{staticClass:"token operator"},[t._v("*")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token operator"},[t._v("-")]),n("span",{staticClass:"token number"},[t._v("1")]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),n("span",{staticClass:"token operator"},[t._v("<")]),t._v(" height "),n("span",{staticClass:"token operator"},[t._v("&&")]),t._v(" left "),n("span",{staticClass:"token operator"},[t._v("<")]),t._v(" window"),n("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("innerWidth "),n("span",{staticClass:"token operator"},[t._v("&&")]),t._v(" left "),n("span",{staticClass:"token operator"},[t._v("*")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token operator"},[t._v("-")]),n("span",{staticClass:"token number"},[t._v("1")]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),n("span",{staticClass:"token operator"},[t._v("<")]),t._v(" width\n"),n("span",{staticClass:"token punctuation"},[t._v("}")])])]),n("h2",{attrs:{id:"参考资料"}},[t._v("参考资料")]),n("ul",[n("li",[t._v("MDN："),n("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs"}},[t._v("https://developer.mozilla.org/zh-CN/docs")])])])])}],Q={},Z=Object(c["a"])(Q,Y,J,!1,null,null,null),K=Z.exports,tt=function(){var t=this,s=t.$createElement;t._self._c;return t._m(0)},st=[function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"markdown-to-vue-loader"},[n("h1",{attrs:{id:"cross-origin-read-blocking-corb"}},[t._v("Cross-Origin Read Blocking (CORB)")]),n("p",[n("em",[t._v("posted by yaoyanhuo on 2019-03-23,  last updated on 2019-04-18")])]),n("blockquote",[n("p",[t._v("从 v67 开始，Chrome 会默认启用一个新的功能叫 Site Isolation。CORB 是其中一项很重要的功能 ，属于一种新的网络平台安全策略，能够降低旁道攻击（ side-channel attacks）的风险。设计之初是为了防止浏览器把跨域网站信息发送到当前网站，这些信息可能是跨域网站的敏感信息，却又不是当前网站需要的。比如：使用 img 标签请求了 json/html/xml 等数据，这时，该请求的响应结果会变成空，且请求头和响应头会被隐藏。")])]),n("p",[t._v("除非特殊说明，否则本文中的浏览器均指 "),n("strong",[t._v("Chrome Browser")]),t._v("。")]),n("h2",{attrs:{id:"前言"}},[t._v("前言")]),n("p",[t._v("本文将从以下几个方面对 CORB 进行探讨，")]),n("ul",[n("li",[t._v("什么是 CORB")]),n("li",[t._v("为什么会产生 CORB")]),n("li",[t._v("什么情况下会出现 CORB")]),n("li",[t._v("出现 CORB 时，应如何应对")])]),n("h2",{attrs:{id:"corb-发生时浏览器表现"}},[t._v("CORB 发生时浏览器表现")]),n("p",[t._v("CORB 是一种判断是否要在跨站资源数据到达页面之前阻断其到达当前站点进程中的算法，降低了敏感数据暴露的风险。")]),n("h3",{attrs:{id:"--chrome--浏览器提示"}},[t._v("- Chrome  浏览器提示")]),n("p",[t._v("当请求发生 CORB 时，浏览器控制台会打印如下警告内容，")]),n("p",[n("img",{attrs:{src:"http://img.yaoyanhuo.com/crob_6.png",alt:"Content-Type: MIME"}})]),n("pre",[n("code",[t._v("Cross-Origin Read Blocking (CORB) blocked cross-origin response https://www.example.com/example.html with MIME type text/html. See https://www.chromestatus.com/feature/5629709824032768 for more details")])]),n("p",[t._v("在 "),n("code",[t._v("chrome 66")]),t._v("或这个版本之前，提示信息有细微不同，")]),n("pre",[n("code",[t._v("Blocked current origin from receiving cross-site document at https://www.example.com/example.html with MIME type text/html")])]),n("p",{staticStyle:{color:"#2c74bd"}},[t._v("当请求的响应结果本身就出错或为空时，早期版本 Chrome 依旧会出现上述提示，但 Chrome 69 之后的版本不再出现上述提示。下文"),n("b",[t._v("实验一和实验二")]),t._v("验证了该描述。")]),n("h3",{attrs:{id:"--chrome-浏览器行为"}},[t._v("- Chrome 浏览器行为")]),n("pre",[n("code",[t._v("The response body is replaced with an empty body. // 响应数据置为空\nThe response headers are removed. // 移除响应请求头")])]),n("p",{staticStyle:{color:"#2c74bd"}},[t._v("\n  CORB 启动时，虽然响应结果会被置空，但是请求的服务仍然成功，`status: 200`。比如：使用 `img` 标签上报页面监控数据，尽管响应结果为空，但请求依旧发送成功，服务器亦正常响应。下文"),n("b",[t._v("实验一")]),t._v("已验证。\n")]),n("h2",{attrs:{id:"为什么会有-corb-的出现？"}},[t._v("为什么会有 CORB 的出现？")]),n("p",[t._v("简单来说，就是出现了一些网络安全漏洞，为防止漏洞肆虐，便出现了站点隔离（Site Isolation），CORB 则是其中的一种实现策略。")]),n("h3",{attrs:{id:"spectre-和-meltdown-漏洞"}},[t._v("Spectre 和 Meltdown 漏洞")]),n("p",[t._v("当恶意代码和正常站点存在于同一个进程时，恶意代码便可以访问进程内的内存，进行一系列访问攻击，此时，恶意代码窃取数据的唯一难点在于不知道敏感数据的具体存储位置，但通过 CPU 预执行 和 SCA 可以一步步 试探 出来。详细了解可参看:  "),n("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/32784852"}},[t._v("https://zhuanlan.zhihu.com/p/32784852")])]),n("h4",{attrs:{id:"什么是-cpu-预执行？"}},[t._v("什么是 CPU 预执行？")]),n("pre",[n("code",[t._v("if(condition)\n   do_sth();")])]),n("p",[t._v("CPU 执行速度大于内存读取速度，为了提升 CPU 使用率，在从内存中读取 "),n("code",[t._v("condition")]),t._v(" 完成之前，CPU 就已经开始执行下文内容。即不管 "),n("code",[t._v("if")]),t._v(" 条件是否返回 "),n("code",[t._v("true")]),t._v("，CPU 都会提前执行里面的语句"),n("code",[t._v("do_sth()")]),t._v("。 CPU 预执行是芯片制造者决定的，为了提升 CPU 使用速度和效率而建的，预执行红利不是轻易就能放弃的，因此，目前或短期来看基本没可能改变。")]),n("h4",{attrs:{id:"普通浏览器中，不同的站点可能共享同一个进程"}},[t._v("普通浏览器中，不同的站点可能共享同一个进程")]),n("p",[t._v("在某些情况下，没有实现 Site Isolution 的普通浏览器会出现一个进程里面同时运行多个站点的代码，这就让恶意站点有机可乘。比如恶意站点 "),n("code",[t._v("a.dd.com")]),t._v(" 在自己的代码中嵌入 "),n("code",[t._v('<iframe src="https://v.qq.com" frameborder="0"></iframe>')]),t._v("，这时，普通浏览器就会把带有恶意站点 "),n("code",[t._v("a.dd.com")]),t._v(" 的恶意代码 和 "),n("code",[t._v("v.qq.com")]),t._v(" 放在同一个内存中运行。")]),n("p",[n("img",{attrs:{src:"http://img.yaoyanhuo.com/blog/share_process.png",alt:"共享进程"}})]),n("h3",{attrs:{id:"scaside-channel-attacks-旁道攻击"}},[t._v("SCA(Side-Channel Attacks) 旁道攻击")]),n("p",[t._v("简单来说，就是利用程序运行时，系统产生的一些物理特征（如：时延，能耗，电磁，错误消息，频率等）进行推测型攻击。看起来有点不可思议，但早在 1956 年，英国已经利用 SCA 获取了埃及驻伦敦的加密机。")]),n("p",[t._v("缓冲时延（Cache Timing）旁路是通过内存访问时间的不同来产生的旁路。假设访问一个变量，这个变量在内存中，这需要上百个时钟周期才能完成，但如果变量访问过一次，这个变量被加载到缓冲（Cache）中了，下次再访问，可能几个时钟周期就可以完成了，可根据这种访问速度窃取特定数据。Spectre 和 Meltdown 漏洞便是利用了这种特性。")]),n("h3",{attrs:{id:"如何预防-spectre-和-meltdown-漏洞呢？"}},[t._v("如何预防 Spectre 和 Meltdown 漏洞呢？")]),n("p",[t._v("漏洞三大关键点是 CPU 预执行、SCA 和 共享进程。预防就得从这三个方面着手。先看 SCA，算法运行时间的变化本质就是源于数据处理，根据时间变化推测运算操作和数据存储位置，因此 SCA 可预防性极低。再看 CPU 预执行，性能至少提高 10%，一片可观的红利，芯片厂商如何舍得放弃。如此，只能针对共享进程下手了，Site Isolation 便是剥离共享进程的一项技术，采用独立站点独立进程的方式实现，降低漏洞的威胁。")]),n("h2",{attrs:{id:"site-isolation"}},[t._v("Site Isolation")]),n("p",[t._v("站点隔离保证了不同站点页面始终被放入不同的进程，每个进程运行在一个有限制的沙箱环境中，在该环境中可能会阻止进程接收其它站点返回的某些特殊类型敏感信息，恶意站点不再和正常站点共享进程，这就让恶意站点窃取其它站点的信息变得更加困难。从 Chrome 67 开始，已默认启用 Site Isolation。")]),n("p",[n("img",{attrs:{src:"http://img.yaoyanhuo.com/chrome_process.png",alt:"Site Isolation"}})]),n("p",[t._v("经验证，"),n("code",[t._v("Site Isolation")]),t._v(" 关于进程独立的原则是 只要一级域名一样，站点实例就共享一个进程，无论子域名是否一样。如果使用 iframe 嵌入了一级域名不一样的跨域站点，则会生成一个新的进程维护该跨域站点运行，这一点同前文介绍的普通浏览器共享进程不同。更详细的内容参看 "),n("a",{attrs:{href:"http://www.yaoyanhuo.com/blog/site_isolate_process"}},[t._v("http://www.yaoyanhuo.com/blog/site_isolate_process")])]),n("h4",{attrs:{id:"这是-site-isolation-的进程设计，那么其中的-corb-扮演了什么角色呢？"}},[t._v("这是 Site Isolation 的进程设计，那么其中的 CORB 扮演了什么角色呢？")]),n("p",[t._v("在同源策略下，Site Isolation 已经很好地隔离了站点，只是还有跨域标签这样的东西存在，敏感数据依旧会暴露，依旧会进驻恶意站点内存空间。\n有这样一个场景，用户登录某站点 "),n("code",[t._v("some.qq.com")]),t._v("后，又访问了 "),n("code",[t._v("bad.dd.com")]),t._v(" 恶意站点，恶意站点有如下代码，"),n("code",[t._v('<script src="some.qq.com/login">')]),t._v("，跨域请求了原站点的登录请求，此时，普通浏览器会正常返回登录后的敏感信息，且敏感信息会进驻 "),n("code",[t._v("bad.dd.com")]),t._v(" 内存空间。好不容易站点隔离把各个站点信息分开了，这因为跨域又在一起了。咋整？CORB 来了。CORB 会在敏感信息到达 web apge 之前，将其拦截掉，如此，敏感信息既不会暴露于浏览器，也不会进驻内存空间，得到了很好的保护。")]),n("hr"),n("h2",{attrs:{id:"corb-发生时机"}},[t._v("CORB 发生时机")]),n("p",[t._v("当跨域请求回来的数据 MIME type 同跨域标签应有的 MIME 类型不匹配时，浏览器会启动 CORB 保护数据不被泄漏，被保护的数据类型只有 "),n("code",[t._v("html")]),n("code",[t._v("xml")]),t._v(" 和 "),n("code",[t._v("json")]),t._v("。很明显 "),n("code",[t._v("<script>")]),t._v(" 和 "),n("code",[t._v("<img>")]),t._v(" 等跨域标签应有的 MIME type 和 "),n("code",[t._v("html")]),t._v("、"),n("code",[t._v("xml")]),t._v("、"),n("code",[t._v("json")]),t._v(" 不一样。")]),n("h4",{attrs:{id:"mime-type-multipurpose-internet-mail-extensions"}},[t._v("MIME type (Multipurpose Internet Mail Extensions)")]),n("p",[t._v("MIME type 同 CORB 有着相当紧密的关系，可以说 CORB 的产生直接依附 MIME 类型。因此，阅读本文前，有必要先理解一下什么是 MIME type。")]),n("p",[t._v("MIME 是一个互联网标准，扩展了电子邮件标准，使其可以支持更多的消息类型。常见 "),n("code",[t._v("MIME")]),t._v(" 类型如："),n("code",[t._v("text/html")]),n("code",[t._v("text/plain")]),n("code",[t._v("image/png")]),n("code",[t._v("application/javascript")]),t._v(" ，用于标识返回消息属于哪一种文档类型。写法为 "),n("code",[t._v("type/subtype")]),t._v("。\n在 HTTP 请求的响应头中，以 "),n("code",[t._v("Content-Type: application/javascript; charset=UTF-8")]),t._v(" 的形式出现，"),n("code",[t._v("MIME type")]),t._v(" 是 "),n("code",[t._v("Content-Type")]),t._v(" 值的一部分。如下图，")]),n("p",[n("img",{attrs:{src:"http://img.yaoyanhuo.com/crob_01.png",alt:"Content-Type: MIME"}})]),n("h4",{attrs:{id:"内容嗅探技术（mime-sniffing）"}},[t._v("内容嗅探技术（MIME sniffing）")]),n("p",[t._v("内容嗅探技术是指 当响应头没有指明 "),n("code",[t._v("MIME type")]),t._v(" 或 浏览器认为指定类型有误时，浏览器会对内容资源进行检查并执行，来猜测内容的正确"),n("code",[t._v("MIME")]),t._v("类型。嗅探技术的实现细节，不同的浏览器在不同的场景下有不同的方式，本文不做详述。详细内容参见："),n("a",{attrs:{href:"https://www.keycdn.com/support/what-is-mime-sniffing"}},[t._v("https://www.keycdn.com/support/what-is-mime-sniffing")])]),n("h5",{attrs:{id:"如何禁用-mime-sniffing-呢？"}},[t._v("如何禁用 "),n("code",[t._v("MIME sniffing")]),t._v(" 呢？")]),n("p",[t._v("服务器在响应首部添加 "),n("code",[t._v("X-Content-Type-Options: nosniff")]),t._v("，用来告诉浏览器一定要相信 "),n("code",[t._v("Content-Type")]),t._v(" 中指定的 "),n("code",[t._v("MIME")]),t._v(" 类型，不要再使用内容嗅探技术探测响应内容类型。该方法仅对 "),n("code",[t._v("<script>")]),t._v(" 和 "),n("code",[t._v("<style>")]),t._v(" 有效。")]),n("p",[t._v("官方解释："),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#MIME_sniffing"}},[t._v("https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#MIME_sniffing")])]),n("h4",{attrs:{id:"浏览器如何判断响应内容是否需要-corb-保护？"}},[t._v("浏览器如何判断响应内容是否需要 CORB 保护？")]),n("p",[t._v("这可能是本文最需要关心的内容了，到底什么情况下会出现 CORB 。在满足跨域标签（如："),n("code",[t._v("<script>")]),t._v("，"),n("code",[t._v("<img>")]),t._v("）请求的响应内容的 "),n("code",[t._v("MIME type")]),t._v(" 是 "),n("code",[t._v("HTML MIME type")]),t._v(" 、 "),n("code",[t._v("XML MIME type")]),t._v("、"),n("code",[t._v("JSON MIME type")]),t._v(" 和 "),n("code",[t._v("text/plain")]),t._v(" 时，以下三个条件任何一个满足，就享受 CORB 保护。（"),n("code",[t._v("image/svg+xml")]),t._v(" 不在内，属图片类型） ")]),n("ul",[n("li",[t._v("响应头包含 "),n("code",[t._v("X-Content-Type-Options: nosniff")])]),n("li",[t._v("响应结果状态码是 "),n("code",[t._v("206 Partial Content")]),t._v(" （"),n("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/206%EF%BC%89"}},[t._v("https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/206）")])]),n("li",[t._v("浏览器嗅探响应内容的 MIME 类型结果就是 json/xml/html")])]),n("p",[t._v("这种嗅探用于防止某些内容因被错误标记 MIME 类型 而被 CORB 阻断不能正常响应返回，且该嗅探基于 "),n("code",[t._v("Content-Type")]),t._v(" 进行，比如类型是 "),n("code",[t._v("text/json")]),t._v("，便只会对内容进行 json 类型检查，而不会进行 xml 或 html 的检查。")]),n("h4",{attrs:{id:"html-mime-type-、-xml-mime-type、json-mime-type-的出现能理解，为什么-textplain-类型也会在保护范围内？"}},[n("code",[t._v("HTML MIME type")]),t._v(" 、 "),n("code",[t._v("XML MIME type")]),t._v("、"),n("code",[t._v("JSON MIME type")]),t._v(" 的出现能理解，为什么 "),n("code",[t._v("text/plain")]),t._v(" 类型也会在保护范围内？")]),n("p",[t._v("因为 当 "),n("code",[t._v("Content-Type")]),t._v(" 缺失的时候，响应内容 "),n("code",[t._v("MIME type")]),t._v(" 有可能就是 "),n("code",[t._v("text/plain")]),t._v("；且据可靠数据显示， HTML, JSON, or XML 有时候也会被标记为 "),n("code",[t._v("text/palin")]),t._v("。如，")]),n("p",[t._v("data.txt")]),n("pre",[n("code",[t._v('{\n  "ret_code": 0,\n  "msg": "请求成功！",\n  "data": [1, 2, 3, 4, 5]\n}')])]),n("p",[t._v("server.js")]),n("pre",[n("code",[t._v("app"),n("span",{staticClass:"token punctuation"},[t._v(".")]),n("span",{staticClass:"token function"},[t._v("get")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token string"},[t._v("'/file'")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token keyword"},[t._v("function")]),t._v(" "),n("span",{staticClass:"token function"},[t._v("getState")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token parameter"},[t._v("req"),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("res"),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("next")]),n("span",{staticClass:"token punctuation"},[t._v(")")]),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n  "),n("span",{staticClass:"token comment"},[t._v("// res.type('json')")]),t._v("\n  res"),n("span",{staticClass:"token punctuation"},[t._v(".")]),n("span",{staticClass:"token function"},[t._v("sendfile")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token template-string"},[n("span",{staticClass:"token string"},[t._v("`")]),n("span",{staticClass:"token interpolation"},[n("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("${")]),t._v("__dirname"),n("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("}")])]),n("span",{staticClass:"token string"},[t._v("/public/data.txt`")])]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n"),n("span",{staticClass:"token punctuation"},[t._v("}")]),n("span",{staticClass:"token punctuation"},[t._v(")")])])]),n("p",[t._v("如上代码，启动 server.js ，Chrome 浏览器访问 "),n("code",[t._v("/file")]),t._v(" 时服务返回 "),n("code",[t._v("data.txt")]),t._v(" 内容，尽管响应头是 "),n("code",[t._v("Content-Type: text/plain; charset=UTF-8")]),t._v("，响应内容依旧能被识别为 "),n("code",[t._v("json")]),t._v("。由此， "),n("code",[t._v("text/plain")]),t._v(" 会作为 "),n("code",[t._v("json")]),t._v(" 的标记也是一种常见现象。如果跨域访问 "),n("code",[t._v("/file")]),t._v(" 就会出现 CORB，验证结果如下图，")]),n("p",[n("img",{attrs:{src:"http://img.yaoyanhuo.com/blog/corb_text_plain.png",alt:"跨域访问"}})]),n("h4",{attrs:{id:"如果使用-script-跨域请求本就是-js-资源，但该资源却被打上了错误的-content-type，还添加了-nosiniff，会发生什么？"}},[t._v("如果使用 script 跨域请求本就是 js 资源，但该资源却被打上了错误的 Content-Type，还添加了 nosiniff，会发生什么？")]),n("p",[t._v("很多时候 "),n("code",[t._v("script")]),t._v(" 文件被会打上 "),n("code",[t._v("html")]),n("code",[t._v("xml")]),n("code",[t._v("json")]),t._v(" 这些 MIME 类型，如果 Chrome 浏览器直接 block，将相应内容置空，当前域下的网站便会 因为缺少 js 执行内容而不能正常运行。为避免这种情况出现，Chrome 浏览器在决定是否保护响应内容前，会先判断 script 的响应内容是否是受保护的 MIME 类型（"),n("code",[t._v("html")]),n("code",[t._v("xml")]),n("code",[t._v("json")]),t._v(" ）。如果检测结果是，则启动 CORB，如果无法检测会直接返回，不启用 CORB。")]),n("p",[t._v("对于跨域请求 js 资源，如果已经存在 nosniff 的情况下，还把 js 资源设置成了其它类型（如：json），那么必定触发 CORB 保护机制，无法返回 js 资源内容，如果此时本域站点刚好需要这个 js 资源，就 GG 了。相当于 错误的 MIME type 加上 "),n("code",[t._v("X-Content-Type-Options: nosniff")]),t._v(" 会触发 CORB ，即使资源真正的类型同跨域标签一致。")]),n("hr"),n("h2",{attrs:{id:"为了最佳安全策略，建议开发者"}},[t._v("为了最佳安全策略，建议开发者")]),n("ol",[n("li",[t._v("为响应内容标记正确的 "),n("code",[t._v("Content-Type")]),t._v("；")]),n("li",[t._v("使用 "),n("code",[t._v("X-Content-Type-Options: nosniff")]),t._v(" 禁止 "),n("code",[t._v("MIME sniffing")]),t._v("，如此，可以让浏览器不进行内容 MIME 类型嗅探，从而更简单快速地保护资源或响应返回。")])]),n("p",[t._v("控制台出现 CORB 提示时，不用担心，一般不会对页面产生本质性的影响，可以直接忽略。")]),n("hr"),n("h2",{attrs:{id:"chrome-发生-corb-保护时的提示和行为验证"}},[t._v("Chrome 发生 CORB 保护时的提示和行为验证")]),n("p",[t._v("虽然该部分内容属于验证类，但想了解一项知识点，仅仅简单地阅读是不够的，实际操作试验后才能获得更深的印象和理解。")]),n("h3",{attrs:{id:"环境准备"}},[t._v("环境准备")]),n("p",[t._v("Chrome 版本： "),n("strong",[t._v("Chrome 73")]),t._v("。")]),n("p",[t._v("Node 服务代码 "),n("code",[t._v("index.js")]),t._v("，")]),n("pre",[n("code",[n("span",{staticClass:"token keyword"},[t._v("const")]),t._v(" express "),n("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),n("span",{staticClass:"token function"},[t._v("require")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token string"},[t._v("'express'")]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n"),n("span",{staticClass:"token keyword"},[t._v("const")]),t._v(" path "),n("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),n("span",{staticClass:"token function"},[t._v("require")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token string"},[t._v("'path'")]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n"),n("span",{staticClass:"token keyword"},[t._v("const")]),t._v(" app "),n("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),n("span",{staticClass:"token function"},[t._v("express")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n"),n("span",{staticClass:"token keyword"},[t._v("const")]),t._v(" port "),n("span",{staticClass:"token operator"},[t._v("=")]),t._v(" process"),n("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("argv"),n("span",{staticClass:"token punctuation"},[t._v("[")]),n("span",{staticClass:"token number"},[t._v("2")]),n("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),n("span",{staticClass:"token operator"},[t._v("||")]),t._v(" "),n("span",{staticClass:"token number"},[t._v("3002")]),t._v("\n\napp"),n("span",{staticClass:"token punctuation"},[t._v(".")]),n("span",{staticClass:"token function"},[t._v("get")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token string"},[t._v("'/'")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token keyword"},[t._v("function")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token parameter"},[t._v("req"),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" res")]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n  res"),n("span",{staticClass:"token punctuation"},[t._v(".")]),n("span",{staticClass:"token function"},[t._v("send")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token string"},[t._v("'<p>hello world!</p>'")]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n"),n("span",{staticClass:"token punctuation"},[t._v("}")]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n\napp"),n("span",{staticClass:"token punctuation"},[t._v(".")]),n("span",{staticClass:"token function"},[t._v("get")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token string"},[t._v("'/data'")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token keyword"},[t._v("function")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token parameter"},[t._v("req"),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" res")]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n  console"),n("span",{staticClass:"token punctuation"},[t._v(".")]),n("span",{staticClass:"token function"},[t._v("log")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token string"},[t._v("'请求正常，只是浏览器将响应数据置空'")]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n  res"),n("span",{staticClass:"token punctuation"},[t._v(".")]),n("span",{staticClass:"token function"},[t._v("json")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("greeting"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("'hello chrome!'")]),n("span",{staticClass:"token punctuation"},[t._v("}")]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n"),n("span",{staticClass:"token punctuation"},[t._v("}")]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n\napp"),n("span",{staticClass:"token punctuation"},[t._v(".")]),n("span",{staticClass:"token function"},[t._v("listen")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("port"),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),n("span",{staticClass:"token operator"},[t._v("=>")]),t._v(" console"),n("span",{staticClass:"token punctuation"},[t._v(".")]),n("span",{staticClass:"token function"},[t._v("log")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token template-string"},[n("span",{staticClass:"token string"},[t._v("`app is listening at localhost:")]),n("span",{staticClass:"token interpolation"},[n("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("${")]),t._v("port"),n("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("}")])]),n("span",{staticClass:"token string"},[t._v("`")])]),n("span",{staticClass:"token punctuation"},[t._v(")")]),n("span",{staticClass:"token punctuation"},[t._v(")")])])]),n("p",[t._v("配置 host")]),n("pre",[n("code",[t._v("127.0.0.1 a.dd.com\n127.0.0.1 c.dd.com\n127.0.0.1 test.pp.com")])]),n("h3",{attrs:{id:"实验一：在testppcom中使用-img-标签跨域请求-cddcom-的数据，数据-mime-类型为-json"}},[t._v("实验一：在"),n("code",[t._v("test.pp.com")]),t._v("中使用 "),n("code",[t._v("img")]),t._v(" 标签跨域请求 "),n("code",[t._v("c.dd.com")]),t._v(" 的数据，数据 MIME 类型为 json")]),n("ol",[n("li",[t._v("执行 "),n("code",[t._v("npm init")]),t._v(" 和 "),n("code",[t._v("npm install")]),t._v(" 安装服务依赖包")]),n("li",[t._v("执行 "),n("code",[t._v("node index.js")]),t._v(" 启动服务")]),n("li",[t._v("浏览器中访问 "),n("code",[t._v("test.pp.com:3002")]),t._v(" 并打开 开发者工具")]),n("li",[t._v("开发者工具 "),n("code",[t._v("Elements")]),t._v(" 中插入 "),n("code",[t._v('<img src="http://c.dd.com:3002/data"/>')]),t._v(" （选中 body 元素，再按 F2 即可进入 html 编辑模式）")])]),n("p",[n("img",{attrs:{src:"http://img.yaoyanhuo.com/crob_7.png",alt:"Elements 插入 img 标签"}})]),n("ol",{attrs:{start:"6"}},[n("li",[t._v("查看控制台 "),n("code",[t._v("console")]),t._v(" 即可见，CORB 提示。")])]),n("p",[n("img",{attrs:{src:"http://img.yaoyanhuo.com/crob_6.png",alt:"控制台结果"}})]),n("ol",{attrs:{start:"7"}},[n("li",[t._v("删掉 "),n("code",[t._v("app.get('/data')")]),t._v(" 方法返回的数据 "),n("code",[t._v("{greeting: 'hello chrome!'}")]),t._v("，即 将服务本身返回的数据本身置空，CORB 提示消失，但依旧看不到请求头 和 响应结果。")])]),n("p",{staticStyle:{color:"red"}},[t._v("\n实验结果：1. 使用 `img` 跨域请求 json 类型的数据确实会出现 CORB；2. 当服务本身返回数据为空时，CORB 提示会消失，但其行为依然保持。\n")]),n("h3",{attrs:{id:"实验二：在testppcom-中使用-script-跨域请求-cddcom-的数据，数据-mime-类型为-json"}},[t._v("实验二：在"),n("code",[t._v("test.pp.com")]),t._v(" 中使用 "),n("code",[t._v("script")]),t._v(" 跨域请求 "),n("code",[t._v("c.dd.com")]),t._v(" 的数据，数据 MIME 类型为 json")]),n("ol",[n("li",[t._v("补回实验一删掉的代码 "),n("code",[t._v("{greeting: 'hello chrome!'}")]),t._v("，浏览器中访问 test.pp.com 并 打开开发者工具。")]),n("li",[t._v("在开发者工具 "),n("code",[t._v("console")]),t._v(" 栏中执行下方代码，即可插入 js 标签并发送跨域请求。"),n("pre",[n("code",[t._v("s "),n("span",{staticClass:"token operator"},[t._v("=")]),t._v(" document"),n("span",{staticClass:"token punctuation"},[t._v(".")]),n("span",{staticClass:"token function"},[t._v("createElement")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token string"},[t._v("'script'")]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\ns"),n("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("src "),n("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("'http://c.dd.com:3002/data'")]),t._v("\ndocument"),n("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("head"),n("span",{staticClass:"token punctuation"},[t._v(".")]),n("span",{staticClass:"token function"},[t._v("appendChild")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("s"),n("span",{staticClass:"token punctuation"},[t._v(")")])])])])]),n("p",[t._v("效果如图，")]),n("p",[n("img",{attrs:{src:"http://img.yaoyanhuo.com/crob_9.png",alt:"控制台结果"}})]),n("p",[t._v("同 "),n("code",[t._v("img")]),t._v(" 表现一致，出现了 CORB 提示。清除"),n("code",[t._v("{greeting: 'hello chrome!'}")]),t._v("，将服务返回数据置空，效果同 "),n("code",[t._v("img")]),t._v(" 方式表现一致，CROB 提示消失。其它行为也同 "),n("code",[t._v("img")]),t._v(" 。")]),n("p",{staticStyle:{color:"red"}},[t._v("\n实验结果：同 `img` 行为效果一模一样。\n")]),n("p",[t._v("看了浏览器中 请求的响应 情况，现在看看，两次实验的 请求执行 情况，")]),n("p",[n("img",{attrs:{src:"http://img.yaoyanhuo.com/crob_10.png",alt:"实验结果"}})]),n("p",{staticStyle:{color:"red"}},[t._v("\n可以看到尽管产生了 CORB 保护，让响应结果变为空，也隐藏了请求头，但服务请求本身始终正常接收请求并进行处理。由此，看到 CORB 后，一般可以直接忽略该提示。\n")]),n("p",[t._v("如果跨域请求 "),n("code",[t._v("http://a.dd.com:3002/data")]),t._v(" 本身发生错误，则完全无需 CORB 的保护，本身就已经不能正常返回了。因此，更不需要 CORB 的提示和行为。")]),n("h3",{attrs:{id:"实验三：在-testppcom-中跨域请求-cddcom-服务的-serverjs-文件"}},[t._v("实验三：在 "),n("code",[t._v("test.pp.com")]),t._v(" 中跨域请求 "),n("code",[t._v("c.dd.com")]),t._v(" 服务的 server.js 文件")]),n("p",[t._v("本实验旨在验证 在某站点跨域请求 js 文件，而该 js 文件被设置了不同的 MIME 类型 和 "),n("code",[t._v("nosniff")]),t._v(" 时，Chrome 是否会出现 CORB 。")]),n("p",[n("strong",[t._v("第一步")]),t._v("，server.js 文件 MIME 类型为默认，不设置 "),n("code",[t._v("nosniff")]),t._v("。"),n("code",[t._v("c.dd.com")]),t._v("服务代码 index.js 中添加如下代码，")]),n("p",[t._v("代码片段一，")]),n("pre",[n("code",[t._v("app"),n("span",{staticClass:"token punctuation"},[t._v(".")]),n("span",{staticClass:"token function"},[t._v("get")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token string"},[t._v("'/file'")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token keyword"},[t._v("function")]),t._v(" "),n("span",{staticClass:"token function"},[t._v("getState")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token parameter"},[t._v("req"),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("res"),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("next")]),n("span",{staticClass:"token punctuation"},[t._v(")")]),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n  res"),n("span",{staticClass:"token punctuation"},[t._v(".")]),n("span",{staticClass:"token function"},[t._v("sendfile")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token template-string"},[n("span",{staticClass:"token string"},[t._v("`")]),n("span",{staticClass:"token interpolation"},[n("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("${")]),t._v("__dirname"),n("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("}")])]),n("span",{staticClass:"token string"},[t._v("/public/js/server.js`")])]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n"),n("span",{staticClass:"token punctuation"},[t._v("}")]),n("span",{staticClass:"token punctuation"},[t._v(")")])])]),n("p",[t._v("打开 Chrome "),n("code",[t._v("test.pp.com")]),t._v(" 的开发者工具，并在开发者工具中执行如下代码，跨域请求 server.js")]),n("p",[t._v("代码片段二，")]),n("pre",[n("code",[t._v("s "),n("span",{staticClass:"token operator"},[t._v("=")]),t._v(" document"),n("span",{staticClass:"token punctuation"},[t._v(".")]),n("span",{staticClass:"token function"},[t._v("createElement")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token string"},[t._v("'script'")]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\ns"),n("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("src "),n("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("'http://c.dd.com:3002/file'")]),t._v("\ndocument"),n("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("head"),n("span",{staticClass:"token punctuation"},[t._v(".")]),n("span",{staticClass:"token function"},[t._v("appendChild")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("s"),n("span",{staticClass:"token punctuation"},[t._v(")")])])]),n("p",[t._v("运行结果如下图，")]),n("p",[n("img",{attrs:{src:"http://img.yaoyanhuo.com/crob_13.png",alt:"请求头和响应头"}}),n("img",{attrs:{src:"http://img.yaoyanhuo.com/crob_14.png",alt:"响应结果"}})]),n("p",[t._v("如图所示："),n("strong",[t._v("真实请求头被隐藏，"),n("code",[t._v("Provisional headers are shown")]),t._v("；响应头可见；响应结果可见")]),t._v("。")]),n("p",[n("strong",[t._v("第二步")]),t._v("，设置 MIME 类型为 "),n("code",[t._v("json")]),t._v("，即 "),n("code",[t._v("Content-Type: application/json; charset=utf-8")]),t._v("，不设置 "),n("code",[t._v("nosniff")]),t._v("。修改 index.js "),n("code",[t._v("/file")]),t._v(" 部分代码如下，")]),n("p",[t._v("代码片段三，")]),n("pre",[n("code",[t._v("app"),n("span",{staticClass:"token punctuation"},[t._v(".")]),n("span",{staticClass:"token function"},[t._v("get")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token string"},[t._v("'/file'")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token keyword"},[t._v("function")]),t._v(" "),n("span",{staticClass:"token function"},[t._v("getState")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token parameter"},[t._v("req"),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("res"),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("next")]),n("span",{staticClass:"token punctuation"},[t._v(")")]),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n  res"),n("span",{staticClass:"token punctuation"},[t._v(".")]),n("span",{staticClass:"token function"},[t._v("type")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token string"},[t._v("'json'")]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n  res"),n("span",{staticClass:"token punctuation"},[t._v(".")]),n("span",{staticClass:"token function"},[t._v("sendfile")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token template-string"},[n("span",{staticClass:"token string"},[t._v("`")]),n("span",{staticClass:"token interpolation"},[n("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("${")]),t._v("__dirname"),n("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("}")])]),n("span",{staticClass:"token string"},[t._v("/public/js/server.js`")])]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n"),n("span",{staticClass:"token punctuation"},[t._v("}")]),n("span",{staticClass:"token punctuation"},[t._v(")")])])]),n("p",[t._v("再次执行本实验 代码片段二，发现运行结果同第一步（即默认 MIME 类型）完全一样："),n("strong",[t._v("真实请求头被隐藏，Provisional headers are shown；响应头可见；响应结果可见。")])]),n("p",[n("strong",[t._v("第三步")]),t._v("，设置 MIME 类型为 json，即 "),n("code",[t._v("Content-Type: application/json; charset=utf-8")]),t._v("，并添加 \n"),n("code",[t._v("'X-Content-Type-Options': 'nosniff'")]),t._v(" 响应头。（如果不理解该响应头的含义，请再次阅读文顶内容嗅探相关描述）\n两个响应头加在一起的意思是，明明自己是 js ，却告诉浏览器 MIME 类型是 json，还非不让浏览器使用嗅探技术修正 MIME 类型。\n修改 index.js "),n("code",[t._v("/file")]),t._v("部分代码如下。")]),n("p",[t._v("代码片段四，")]),n("pre",[n("code",[t._v("app"),n("span",{staticClass:"token punctuation"},[t._v(".")]),n("span",{staticClass:"token function"},[t._v("get")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token string"},[t._v("'/file'")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token keyword"},[t._v("function")]),t._v(" "),n("span",{staticClass:"token function"},[t._v("getState")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token parameter"},[t._v("req"),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("res"),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("next")]),n("span",{staticClass:"token punctuation"},[t._v(")")]),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n  res"),n("span",{staticClass:"token punctuation"},[t._v(".")]),n("span",{staticClass:"token function"},[t._v("type")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token string"},[t._v("'json'")]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n  res"),n("span",{staticClass:"token punctuation"},[t._v(".")]),n("span",{staticClass:"token function"},[t._v("set")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    "),n("span",{staticClass:"token string"},[t._v("'X-Content-Type-Options'")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("'nosniff'")]),t._v("\n  "),n("span",{staticClass:"token punctuation"},[t._v("}")]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n  res"),n("span",{staticClass:"token punctuation"},[t._v(".")]),n("span",{staticClass:"token function"},[t._v("sendfile")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token template-string"},[n("span",{staticClass:"token string"},[t._v("`")]),n("span",{staticClass:"token interpolation"},[n("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("${")]),t._v("__dirname"),n("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("}")])]),n("span",{staticClass:"token string"},[t._v("/public/js/server.js`")])]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n"),n("span",{staticClass:"token punctuation"},[t._v("}")]),n("span",{staticClass:"token punctuation"},[t._v(")")])])]),n("p",[t._v("再次执行本实验 代码片段二，运行结果如下图，\n"),n("img",{attrs:{src:"http://img.yaoyanhuo.com/crob_11.png",alt:"控制台提示"}}),n("img",{attrs:{src:"http://img.yaoyanhuo.com/crob_12.png",alt:"请求头"}}),n("img",{attrs:{src:"http://img.yaoyanhuo.com/crob_16.png",alt:"响应结果 "}})]),n("p",{staticStyle:{color:"red"}},[t._v("\n如图所示： 跨域请求 js 文件时，如果没有设置 nosniff，甭管 MIME 类型设置了什么，都只是请求头不显示，响应头和响应结果正常显示。如果设置了 nosniff 且 MIME 类型不是 js，则会触发 CORB 保护，跨域 js 无法正常加载。\n")]),n("p",[t._v("因此，如果作为跨域站点 `c.dd.com` 和 本域站点 `test.pp.com` 合作时，如果为了 减少 MIME 类型嗅探时间 加上了 `nosniff` 请求头，同时，需务必保证设置的 MIME 类型同 js 文件一致！否则 本域站点 无法拿到 跨域站点 的 js 资源数据！")]),n("p",[t._v("----------------- 关于 CORB ， Chrome 表现和行为验证结束 -------------------")]),n("p",[n("strong",[t._v("特别说明：本文讨论的 CORB 保护机制均是 chrome 浏览器的特性，其它浏览器暂时没有这项机制。")])]),n("h2",{attrs:{id:"参考内容"}},[t._v("参考内容")]),n("ul",[n("li",[t._v("CORB 行为官方说明："),n("a",{attrs:{href:"https://www.chromium.org/Home/chromium-security/corb-for-developers"}},[t._v("https://www.chromium.org/Home/chromium-security/corb-for-developers")])]),n("li",[t._v("CORB Explainer："),n("a",{attrs:{href:"https://chromium.googlesource.com/chromium/src/+/master/services/network/cross_origin_read_blocking_explainer.md"}},[t._v("https://chromium.googlesource.com/chromium/src/+/master/services/network/cross_origin_read_blocking_explainer.md")])]),n("li",[t._v("speculative side-channel attack techniques: "),n("a",{attrs:{href:"https://security.googleblog.com/2018/01/todays-cpu-vulnerability-what-you-need.html"}},[t._v("https://security.googleblog.com/2018/01/todays-cpu-vulnerability-what-you-need.html")])]),n("li",[t._v("Chrome浏览器安全新功能 网站隔离："),n("a",{attrs:{href:"https://www.trustauth.cn/wiki/26052.html"}},[t._v("https://www.trustauth.cn/wiki/26052.html")])]),n("li",[t._v("30 分钟理解 CORB 是什么："),n("a",{attrs:{href:"https://www.cnblogs.com/oneasdf/p/9525490.html"}},[t._v("https://www.cnblogs.com/oneasdf/p/9525490.html")])]),n("li",[t._v("X-Content-Type-Options："),n("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/X-Content-Type-Options"}},[t._v("https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/X-Content-Type-Options")])]),n("li",[t._v("浏览器 MIME 类型嗅探："),n("a",{attrs:{href:"https://www.keycdn.com/support/what-is-mime-sniffing"}},[t._v("https://www.keycdn.com/support/what-is-mime-sniffing")])]),n("li",[t._v("延伸阅读，曾经 IE 的一个内容嗅探技术漏洞："),n("a",{attrs:{href:"http://www.safebase.cn/article-131906-1.html"}},[t._v("http://www.safebase.cn/article-131906-1.html")])]),n("li",[t._v("浏览器工作原理："),n("a",{attrs:{href:"https://www.infoq.cn/article/CS9-WZQlNR5h05HHDo1b"}},[t._v("https://www.infoq.cn/article/CS9-WZQlNR5h05HHDo1b")])]),n("li",[t._v("给程序员解释 Spectre 和 Meltdown 漏洞："),n("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/32784852"}},[t._v("https://zhuanlan.zhihu.com/p/32784852")])]),n("li",[t._v("旁道攻击："),n("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E6%97%81%E8%B7%AF%E6%94%BB%E5%87%BB"}},[t._v("https://zh.wikipedia.org/wiki/%E6%97%81%E8%B7%AF%E6%94%BB%E5%87%BB")])]),n("li",[t._v("V8 引擎："),n("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/27628685"}},[t._v("https://zhuanlan.zhihu.com/p/27628685")])]),n("li",[t._v("一些还在讨论中的 CORB 行为："),n("a",{attrs:{href:"https://github.com/whatwg/fetch/issues?utf8=%E2%9C%93&q=is%3Aissue+CORB+"}},[t._v("https://github.com/whatwg/fetch/issues?utf8=✓&q=is%3Aissue+CORB+")])]),n("li",[t._v("fetch API："),n("a",{attrs:{href:"https://developers.google.com/web/updates/2015/03/introduction-to-fetch"}},[t._v("https://developers.google.com/web/updates/2015/03/introduction-to-fetch")])])])])}],nt={},at=Object(c["a"])(nt,tt,st,!1,null,null,null),et=at.exports,ot=function(){var t=this,s=t.$createElement;t._self._c;return t._m(0)},pt=[function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"markdown-to-vue-loader"},[n("h1",{attrs:{id:"vue-项目中使用-jsx-出现的语法冲突，导致-props-传入失效"}},[t._v("Vue 项目中使用 JSX 出现的语法冲突，导致 props 传入失效")]),n("p",[n("em",[t._v("posted by yaoyanhuo on 2019-03-22")])]),n("blockquote",[n("p",[t._v("有这样一个场景，switch 组件需要两个 props 参数：onText 和 offText，用于表述开关状态。在 JSX 使用 switch 组件时，在控制台发现 offText 传入 props 很正常，但 onText 却怎么也没有数据，无论传值是什么。这是为何呢？一起来看看吧。")])]),n("p",[t._v("从 2016 年写 Vue 到现在，总觉得该遇到的问题都差不多了，结果这就来了个意料之外的问题，如上引文描述。")]),n("h2",{attrs:{id:"vue-和-jsx-的关系"}},[t._v("Vue 和 JSX 的关系")]),n("p",[t._v("官网地址描述: "),n("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/render-function.html"}},[t._v("https://cn.vuejs.org/v2/guide/render-function.html")]),t._v(" 。内容比较多，此处简述一下，Vue 有两种书写 html 的方式，一种是在 "),n("code",[t._v(".vue")]),t._v(" 文件中使用 "),n("code",[t._v("template")]),t._v("，很方便，跟写直接写 html 一样，该方式也是官方建议的方式；另一种是在 "),n("code",[t._v(".js")]),t._v(" 文件中使用 "),n("code",[t._v("render")]),t._v(" 函数书写，该方式书写比较复杂，可读性也不好，但有时候确实需要使用这种方式 那怎么办呢？"),n("code",[t._v("JSX")]),t._v(" 就出来了。可以说，"),n("code",[t._v("JSX")]),t._v(" 是 "),n("code",[t._v("createElement")]),t._v(" 方法的一种语法糖。")]),n("h2",{attrs:{id:"问题复现-demo"}},[t._v("问题复现 Demo")]),n("p",[t._v("父组件：test.js")]),n("pre",[n("code",[n("span",{staticClass:"token keyword"},[t._v("import")]),t._v(" DSwitch "),n("span",{staticClass:"token keyword"},[t._v("from")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("'./switch.js'")]),t._v("\n\n"),n("span",{staticClass:"token keyword"},[t._v("export")]),t._v(" "),n("span",{staticClass:"token keyword"},[t._v("default")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n  name"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("'Test'")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n  components"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v(" DSwitch "),n("span",{staticClass:"token punctuation"},[t._v("}")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n  "),n("span",{staticClass:"token function"},[t._v("render")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    "),n("span",{staticClass:"token keyword"},[t._v("return")]),t._v(" "),n("span",{staticClass:"token operator"},[t._v("<")]),t._v("div"),n("span",{staticClass:"token operator"},[t._v(">")]),t._v("\n      "),n("span",{staticClass:"token operator"},[t._v("<")]),t._v("d"),n("span",{staticClass:"token operator"},[t._v("-")]),n("span",{staticClass:"token keyword"},[t._v("switch")]),t._v(" offText"),n("span",{staticClass:"token operator"},[t._v("=")]),n("span",{staticClass:"token string"},[t._v('"已关闭"')]),t._v(" onText"),n("span",{staticClass:"token operator"},[t._v("=")]),n("span",{staticClass:"token string"},[t._v('"已打开"')]),n("span",{staticClass:"token operator"},[t._v(">")]),n("span",{staticClass:"token operator"},[t._v("<")]),n("span",{staticClass:"token operator"},[t._v("/")]),t._v("d"),n("span",{staticClass:"token operator"},[t._v("-")]),n("span",{staticClass:"token keyword"},[t._v("switch")]),n("span",{staticClass:"token operator"},[t._v(">")]),t._v("\n    "),n("span",{staticClass:"token operator"},[t._v("<")]),n("span",{staticClass:"token operator"},[t._v("/")]),t._v("div"),n("span",{staticClass:"token operator"},[t._v(">")]),t._v("\n  "),n("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n"),n("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n")])]),n("p",[t._v("子组件：switch.js")]),n("pre",[n("code",[n("span",{staticClass:"token keyword"},[t._v("export")]),t._v(" "),n("span",{staticClass:"token keyword"},[t._v("default")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n  name"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("'DSwitch'")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n\n  props"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    onText"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n      "),n("span",{staticClass:"token keyword"},[t._v("default")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("'open'")]),t._v("\n    "),n("span",{staticClass:"token punctuation"},[t._v("}")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n    offText"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n      "),n("span",{staticClass:"token keyword"},[t._v("default")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("'closed'")]),t._v("\n    "),n("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n  "),n("span",{staticClass:"token punctuation"},[t._v("}")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n\n  "),n("span",{staticClass:"token function"},[t._v("render")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    "),n("span",{staticClass:"token keyword"},[t._v("return")]),t._v(" "),n("span",{staticClass:"token operator"},[t._v("<")]),t._v("div"),n("span",{staticClass:"token operator"},[t._v(">")]),t._v("\n      "),n("span",{staticClass:"token operator"},[t._v("<")]),t._v("p"),n("span",{staticClass:"token operator"},[t._v(">")]),t._v("onText"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("{")]),n("span",{staticClass:"token keyword"},[t._v("this")]),n("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("onText"),n("span",{staticClass:"token punctuation"},[t._v("}")]),n("span",{staticClass:"token operator"},[t._v("<")]),n("span",{staticClass:"token operator"},[t._v("/")]),t._v("p"),n("span",{staticClass:"token operator"},[t._v(">")]),t._v("\n      "),n("span",{staticClass:"token operator"},[t._v("<")]),t._v("p"),n("span",{staticClass:"token operator"},[t._v(">")]),t._v("offText"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("{")]),n("span",{staticClass:"token keyword"},[t._v("this")]),n("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("offText"),n("span",{staticClass:"token punctuation"},[t._v("}")]),n("span",{staticClass:"token operator"},[t._v("<")]),n("span",{staticClass:"token operator"},[t._v("/")]),t._v("p"),n("span",{staticClass:"token operator"},[t._v(">")]),t._v("\n    "),n("span",{staticClass:"token operator"},[t._v("<")]),n("span",{staticClass:"token operator"},[t._v("/")]),t._v("div"),n("span",{staticClass:"token operator"},[t._v(">")]),t._v("\n  "),n("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n"),n("span",{staticClass:"token punctuation"},[t._v("}")])])]),n("p",[t._v("运行结果如图，")]),n("p",[n("img",{attrs:{src:"http://img.yaoyanhuo.com/jsx_on_syntax.png",alt:"运行结果"}})]),n("p",[t._v("是不是很奇怪，传入的 "),n("code",[t._v("offText")]),t._v(" 正常显示了， 而 "),n("code",[t._v("onText")]),t._v(" 却没有。")]),n("h2",{attrs:{id:"问题排查过程"}},[t._v("问题排查过程")]),n("p",[n("code",[t._v("onText")]),t._v(" 和 "),n("code",[t._v("offText")]),t._v(" 是相对参数，一模一样的代码逻辑。按理说，要么都可以正常传入，要么都不可以。为何偏偏 "),n("code",[t._v("onText")]),t._v(" 不可以？")]),n("ul",[n("li",[t._v("第一步，新增一个 props 测试：以同样的方式添加一个新的 props "),n("code",[t._v("testText")]),t._v("，运行结果和 "),n("code",[t._v("offText")]),t._v(" 一样正常。这就奇了怪了，咋 "),n("code",[t._v("onText")]),t._v(" 就不行了呢？")]),n("li",[t._v("第二步，再来试试看，把 "),n("code",[t._v("onText")]),t._v(" 改成 "),n("code",[t._v("osText")]),t._v("，我去，竟然可以了 ！可以正常显示出来了！惊呆了宝宝。")]),n("li",[t._v("这下再看 "),n("code",[t._v("onText")]),t._v(" 和 "),n("code",[t._v("osText")]),t._v(" 的区别，唯一的点就是 "),n("code",[t._v("on")]),t._v(" 和  "),n("code",[t._v("os")]),t._v(" 了，"),n("code",[t._v("on")]),t._v(" 越看越眼熟，"),n("code",[t._v("JSX")]),t._v(" 语法有 "),n("code",[t._v("onChange")]),n("code",[t._v("onInput")]),t._v(" 什么的，由此，应该是语法冲突，"),n("code",[t._v("onText")]),t._v(" 被 "),n("code",[t._v("JSX")]),t._v(" 识别成了 "),n("code",[t._v("on")]),t._v(" 类语法。")])]),n("h2",{attrs:{id:"解决方案"}},[t._v("解决方案")]),n("p",[t._v("找到问题原因了，那怎么解决呢？")]),n("ul",[n("li",[t._v("最容易想到的一个方法就是改 props 名称，"),n("code",[t._v("onText")]),t._v(" 改成 "),n("code",[t._v("openText")]),t._v(" 一类的，可是如此一来，不仅组件 "),n("code",[t._v("switch")]),t._v(" 要改，连使用到的项目也都要改。于组件库而言，特别是使用者众多的组件库而言，没有比突然的 API 接口变更 更让人心塞的了。那咋办呢？")]),n("li",[t._v("加一个 "),n("code",[t._v("onText")]),t._v(" 同类参数？使用 "),n("code",[t._v("onText || openText")]),t._v(" 这种法子。当 "),n("code",[t._v("onText")]),t._v(" 不存在时，取 "),n("code",[t._v("openText")]),t._v("。这样虽然能解决旧项目不用改变 API 使用的问题，但是增加了 API  复杂度，一个功能却使用两个参数实现，怎么都觉得不高级。")]),n("li",[t._v("继续想，既然我能遇到这个问题，那肯定还有其他人也遇到吧？JSX 怎么处理的呢？Google 和 github 搜了一波，没结果。好吧，只能看看 JSX 的 Example 了（ "),n("a",{attrs:{href:"https://github.com/vuejs/babel-plugin-transform-vue-jsx/blob/master/example/example.js"}},[t._v("https://github.com/vuejs/babel-plugin-transform-vue-jsx/blob/master/example/example.js")]),t._v(" ）。这一看关键了，JSX 有两种书写方式，既然当前书写方式不行，不能被正常识别。那就试试另一个看起来 80% 可行的方式，毕竟不用单独识别语法，直接一个参数囊括各种 API。一试，果然，"),n("code",[t._v("{...params}")]),t._v(" 这种方式运行正常了！！！！")])]),n("p",[t._v("由此，终极解决方案如下，换种 JSX 书写方式。")]),n("p",[t._v("父组件：test.js")]),n("pre",[n("code",[n("span",{staticClass:"token keyword"},[t._v("import")]),t._v(" DSwitch "),n("span",{staticClass:"token keyword"},[t._v("from")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("'./switch.js'")]),t._v("\n\n"),n("span",{staticClass:"token keyword"},[t._v("export")]),t._v(" "),n("span",{staticClass:"token keyword"},[t._v("default")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n  name"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("'Test'")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n  components"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v(" DSwitch "),n("span",{staticClass:"token punctuation"},[t._v("}")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n  "),n("span",{staticClass:"token function"},[t._v("render")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    "),n("span",{staticClass:"token keyword"},[t._v("const")]),t._v(" params "),n("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n      props"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n        offText"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token string"},[t._v('"已关闭"')]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n        onText"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token string"},[t._v('"已打开"')]),t._v("\n      "),n("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n    "),n("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n    "),n("span",{staticClass:"token keyword"},[t._v("return")]),t._v(" "),n("span",{staticClass:"token operator"},[t._v("<")]),t._v("div"),n("span",{staticClass:"token operator"},[t._v(">")]),t._v("\n      "),n("span",{staticClass:"token operator"},[t._v("<")]),t._v("d"),n("span",{staticClass:"token operator"},[t._v("-")]),n("span",{staticClass:"token keyword"},[t._v("switch")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("{")]),n("span",{staticClass:"token operator"},[t._v("...")]),t._v("params"),n("span",{staticClass:"token punctuation"},[t._v("}")]),n("span",{staticClass:"token operator"},[t._v(">")]),n("span",{staticClass:"token operator"},[t._v("<")]),n("span",{staticClass:"token operator"},[t._v("/")]),t._v("d"),n("span",{staticClass:"token operator"},[t._v("-")]),n("span",{staticClass:"token keyword"},[t._v("switch")]),n("span",{staticClass:"token operator"},[t._v(">")]),t._v("\n    "),n("span",{staticClass:"token operator"},[t._v("<")]),n("span",{staticClass:"token operator"},[t._v("/")]),t._v("div"),n("span",{staticClass:"token operator"},[t._v(">")]),t._v("\n  "),n("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n"),n("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n")])]),n("p",[t._v("运行结果如下图，")]),n("p",[n("img",{attrs:{src:"http://img.yaoyanhuo.com/jsx_on_syntax_right.png",alt:"运行结果"}})]),n("p",[t._v("完美解决！无需改动任何组件库代码！")])])}],it={},vt=Object(c["a"])(it,ot,pt,!1,null,null,null),_t=vt.exports,ct=function(){var t=this,s=t.$createElement;t._self._c;return t._m(0)},rt=[function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"markdown-to-vue-loader"},[n("h1",{attrs:{id:"pm2-高级的进程管理工具（node）"}},[t._v("PM2 高级的进程管理工具（Node）")]),n("p",[n("em",[t._v("posted by yaoyanhuo on 2019-03-04, last updated on 2019-03-06")])]),n("blockquote",[n("p",[t._v("管理 Node 服务的一把手，支持代码变化监听，进程集群，负载平衡，日志管理，统一管理进程服务等功能。本文除开 pm2 基本描述，主要会对常用命令进行详细分析，看看各个命令到底是如何工作。还有 pm2 使用过程中经常遇到的问题进行剖析，比如：CPU 只有一个，只能启动的进程集群只能是 1 个，那还能实现 0 秒重载吗？答案是：能。赶紧来领略一下pm2的强大吧。")])]),n("h2",{attrs:{id:"pm2-功能"}},[t._v("PM2 功能")]),n("ul",[n("li",[n("code",[t._v("pm2")]),t._v(" 启动 Node 服务后，可以监听文件变更，并迅速重启")]),n("li",[n("code",[t._v("pm2")]),t._v(" 支持负载平衡，可以根据 CPU 核数启动多个进程，成为一个进程集群")]),n("li",[t._v("启动的集群服务，可实现 0 秒重载，因其重载时集群中至少有一个进程在运行")]),n("li",[n("code",[t._v("pm2")]),t._v(" 有日志管理，可随时查看进程输出结果")]),n("li",[t._v("执行 "),n("code",[t._v("node server")]),t._v(" 这类命令后，一般会一直运行在控制台，"),n("code",[t._v("pm2")]),t._v(" 则是在后台运行，当前控制台可继续执行其它命令")]),n("li",[t._v("除了 "),n("code",[t._v("cli")]),t._v("模式，还有 "),n("code",[t._v("pm2")]),t._v(" 生态系统文件 "),n("code",[t._v("ecosystem.config.js")]),t._v("，文件可同时配置多个应用服务，具体配置参见 附录3")])]),n("h2",{attrs:{id:"pm2-安装"}},[t._v("PM2 安装")]),n("pre",[n("code",[t._v("npm install pm2 -g")])]),n("p",[t._v("如果安装失败，使用 "),n("code",[t._v("npm config list")]),t._v(" 查看 npm 代理和仓库地址，有些公司内部出于安全考虑可能需要设置一些代理才能访问外网，检查代理是否正确；再看仓库，由于 npm 本身的仓库比较慢，建议使用国内镜像："),n("a",{attrs:{href:"https://npm.taobao.org/"}},[t._v("https://npm.taobao.org/")]),t._v(" ，或自己公司搭建的仓库。以淘宝镜像为例，设置仓库地址 "),n("code",[t._v("npm config set registry http://registry.npm.taobao.org/")]),t._v(" 和 使用 "),n("code",[t._v("cnpm")]),t._v(" 本质都是从 "),n("a",{attrs:{href:"http://registry.npm.taobao.org"}},[t._v("http://registry.npm.taobao.org")]),t._v(" 拉包。")]),n("h2",{attrs:{id:"pm2-名词解释"}},[t._v("PM2 名词解释")]),n("table",[n("thead",[n("tr",[n("th",[t._v("名称")]),n("th",[t._v("描述")])])]),n("tbody",[n("tr",[n("td",[t._v("App name")]),n("td",[t._v("node 进程服务名称，pm2 启动服务会有一个名称，有默认值，可自定义，在服务启动后的一系列操作都通过该名称进行")])]),n("tr",[n("td",[t._v("id")]),n("td",[t._v("pm2 进程 id，唯一标识 pm2 进程，即使同一集群，名称相同，id 也不会相同，在进程被 delete 之前，无论 "),n("code",[t._v("pm2 start")]),t._v(" 或 "),n("code",[t._v("pm2 stop")]),t._v("，id 都不变")])]),n("tr",[n("td",[t._v("pid")]),n("td",[t._v("每次启动 pid 都会发生变化，是进程执行时 id。进程被 stop 后，其值为 0")])]),n("tr",[n("td",[t._v("watch")]),n("td",[t._v("是否监听文件变化自动重启，一般建议开发时使用，节约资源")])]),n("tr",[n("td",[t._v("status")]),n("td",[t._v("进程运行状态，值为 online/stopped 等")])]),n("tr",[n("td",[t._v("mode")]),n("td",[t._v("进程模式，可能值 "),n("code",[t._v("cluster")]),t._v("/"),n("code",[t._v("fork")]),t._v("。前者表示进程集群，即在不同的 CPU 线程里开启相同的进程；后者表示单个进程")])]),n("tr",[n("td",[t._v("ecosystem.config.js")]),n("td",[t._v("生态系统配置文件，pm2 可以直接在"),n("code",[t._v("cli")]),t._v("中添加参数，也可以在该文件中进行配置。该文件可一次性配置多个应用，使用 "),n("code",[t._v("pm2 start ecosystem.config.js")]),t._v(" 统一启动，关系类似于 webpack-dev-server 和 devServer 配置项。配置示例参看 附录3")])]),n("tr",[n("td",[t._v("进程集群")]),n("td",[t._v("相同代码运行在同一端口的多个进程归为一个集群，使用集群模式 pm2 可以实现 0 秒重载")])])])]),n("h2",{attrs:{id:"pm2-常用命令合集"}},[t._v("PM2 常用命令合集")]),n("p",[t._v("先看看整体命令集合，了解各自大概是干什么的，后文会有各个命令的功能详述。以下内容，"),n("code",[t._v("app")]),t._v(" 为应用名称。")]),n("table",[n("thead",[n("tr",[n("th",[t._v("命令示例")]),n("th",[t._v("描述")])])]),n("tbody",[n("tr",[n("td",[t._v("pm2 start app")]),n("td",[t._v("启动单个应用，其中 app 是指脚本路径，即 "),n("code",[t._v("app/index.js")]),t._v("，应用启动可以通过 "),n("code",[t._v("cli")]),t._v(" 参数配置很多自定义内容，如 自定义名称，是否监听文件变化，日志如何显示等。如果自定内容较多建议使用 "),n("code",[t._v("ecosystem.config.js")]),t._v(" 一起配置")])]),n("tr",[n("td",[t._v("pm2 start app --watch")]),n("td",[t._v("启动单个应用并监听代码变化")])]),n("tr",[n("td",[t._v("pm2 start server --name server_pre")]),n("td",[t._v("启动单个应用并自定义应用名称")])]),n("tr",[n("td",[t._v('pm2 start app --log-date-format="YYYY-MM-DD HH:mm:ss"')]),n("td",[t._v("日志参数打印时带上日期，日期格式参看 "),n("code",[t._v("moment.js")])])]),n("tr",[n("td",[t._v("pm2 restart app --update-env --watch disabled")]),n("td",[t._v("重启单个应用，更新参数")])]),n("tr",[n("td",[t._v("pm2 start app -i max")]),n("td",[t._v("负载平衡，开启 "),n("code",[t._v("max")]),t._v(" 个相同的服务，"),n("code",[t._v("max")]),t._v(" 数量等于 CPU 可执行的线程数，其值可为任意数字， "),n("code",[t._v("pm2 start app -i 3")]),t._v("。该命令启动的进程为进程集群，模式 "),n("code",[t._v("mode")]),t._v(" 值为  "),n("code",[t._v("cluster")])])]),n("tr",[n("td",[t._v("pm2 show app")]),n("td",[t._v("通过名称查看进程详细信息，"),n("code",[t._v("pm2 show <id>")]),t._v("同理，包含：名称、版本、重启次数、脚本路径、端口号、日志路径、环境变量、创建时间、git 相关信息")])]),n("tr",[n("td",[t._v("pm2 delete app")]),n("td",[t._v("根据名称删除应用进程")])]),n("tr",[n("td",[t._v("pm2 delete all")]),n("td",[t._v("删除所有应用进程")])]),n("tr",[n("td",[t._v("pm2 delete 0")]),n("td",[t._v("根据 id 删除应用进程")])]),n("tr",[n("td",[t._v("pm2 list")]),n("td",[t._v("查看进程列表")])]),n("tr",[n("td",[t._v("pm2 reload all")]),n("td",[t._v("0 秒停机重载所有进程，仅对集群进程有用，本质是重载的时候保证至少一个同名进程在正常运行。")])]),n("tr",[n("td",[t._v("pm2 reload app")]),n("td",[t._v("0 秒停机重载某一集群进程，仅对集群进程有用")])]),n("tr",[n("td",[t._v("pm2 stop all")]),n("td",[t._v("停止所有进程")])]),n("tr",[n("td",[t._v("pm2 stop app")]),n("td",[t._v("根据名称停止某一进程")])]),n("tr",[n("td",[t._v("pm2 stop 3")]),n("td",[t._v("根据 id 停止某一进程")])]),n("tr",[n("td",[t._v("pm2 startup")]),n("td",[t._v("检测计算机上可用的 init 系统并生成配置")])]),n("tr",[n("td",[t._v("pm2 monit")]),n("td",[t._v("了解每个进程的 CPU 使用情况，内存使用情况，环路延迟或请求/分钟")])]),n("tr",[n("td",[t._v("pm2 logs")]),n("td",[t._v("查看所有进程日志，日志路径会在命令执行后输出到控制台")])]),n("tr",[n("td",[t._v("pm2 logs app")]),n("td",[t._v("查看具体应用进程 app 的日志， "),n("code",[t._v("pm2 logs app --lines 1000")]),t._v(" 可以看执行数日志")])]),n("tr",[n("td",[t._v("pm2 flush")]),n("td",[t._v("清除进程列表中的所有进程应用日志，无论其状态为 "),n("code",[t._v("online")]),t._v(" 还是 "),n("code",[t._v("stopped")]),t._v("。但不在进程列表中的死进程，其日志不会被清除，如：执行了 "),n("code",[t._v("pm2 delete app")]),t._v(" 的 app 进程。清除操作仅仅是清空文件，不会删除文件。")])]),n("tr",[n("td",[t._v("pm2 env 0")]),n("td",[t._v("显示当前环境变量信息")])])])]),n("p",[t._v("更多 "),n("code",[t._v("cli")]),t._v(" 参考： "),n("a",{attrs:{href:"https://pm2.io/doc/zh/runtime/reference/pm2-cli/"}},[t._v("https://pm2.io/doc/zh/runtime/reference/pm2-cli/")])]),n("h2",{attrs:{id:"生态系统文件-ecosystemconfigjs"}},[t._v("生态系统文件 ecosystem.config.js")]),n("p",[t._v("为满足需求，以上命令执行过程中可能会添加多个参数，如果需要的参数较多，直接书写命令就不是很方便，别担心，咱们还有生态系统文件，可以把所需的任何参数都配置在里面，启动的时候，运行这个文件就可以啦。如，使用 "),n("code",[t._v("pm2 start ecosystem.config.js")]),t._v(" 启动所有服务，使用 "),n("code",[t._v("pm2 start ecosystem.config.js --only app")]),t._v(" 仅启动名为 "),n("code",[t._v("app")]),t._v(" 的 服务。")]),n("p",[t._v("使用配置项和命令行的参数命名规则一般是："),n("code",[t._v("cli")]),t._v(" 命令参数为中划线，配置项为下划线。如 "),n("code",[t._v("--log-date-format")]),t._v(" 对应配置项为 "),n("code",[t._v("log_date_format")]),t._v("。")]),n("p",[t._v("配置示例：")]),n("pre",[n("code",[t._v("module"),n("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("exports "),n("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n  apps "),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("[")]),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    "),n("span",{staticClass:"token comment"},[t._v("// 基本配置")]),t._v("\n    name"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("'app'")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("  "),n("span",{staticClass:"token comment"},[t._v("// 应用名称，默认是 脚本名称")]),t._v("\n    cwd"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("'./'")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token comment"},[t._v("// 启动进程所在的当前目录")]),t._v("\n    script"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("'app/index.js'")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token comment"},[t._v("// 执行的 node 脚本地址")]),t._v("\n    args"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("'3306'")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token comment"},[t._v("// 参数，放在 process.argv 里面，多个参数空格隔开，或使用数组")]),t._v("\n    instances"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token number"},[t._v("5")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token comment"},[t._v("// 启动的进程实例数，如果值 5 ，则会启动一个进程数为 5 的进程集群，等效 `pm2 start app -i 5`")]),t._v("\n    autorestart"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token boolean"},[t._v("true")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token comment"},[t._v("// 是否自动启动")]),t._v("\n    watch"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token boolean"},[t._v("false")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token comment"},[t._v("// 是否监听代码变化，等效 `pm2 start app --watch`")]),t._v("\n    max_memory_restart"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("'1G'")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token comment"},[t._v("// 存储超过 1G 就重启")]),t._v("\n    interpreter"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("'/usr/web/path/*.exe'")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token comment"},[t._v("// 解析器，用于解析执行 script 脚本")]),t._v("\n    pid_file"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("'~/.pm2/pids/app_name-id.pid'")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token operator"},[t._v("/")]),n("span",{staticClass:"token operator"},[t._v("/")]),t._v(" 存储 pid 的文件路径\n\n    "),n("span",{staticClass:"token operator"},[t._v("/")]),n("span",{staticClass:"token operator"},[t._v("/")]),t._v(" 日志相关配置\n    output"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("''")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token operator"},[t._v("/")]),n("span",{staticClass:"token regex"},[t._v("/ 正常日志输出路径，默认 ~/")]),n("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("pm2"),n("span",{staticClass:"token operator"},[t._v("/")]),t._v("logs"),n("span",{staticClass:"token operator"},[t._v("/")]),n("span",{staticClass:"token operator"},[t._v("-")]),t._v("out"),n("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("log，如： "),n("span",{staticClass:"token operator"},[t._v("/")]),t._v("data"),n("span",{staticClass:"token operator"},[t._v("/")]),t._v("logs"),n("span",{staticClass:"token operator"},[t._v("/")]),t._v("pm2"),n("span",{staticClass:"token operator"},[t._v("/")]),t._v("app"),n("span",{staticClass:"token operator"},[t._v("-")]),t._v("out"),n("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("log\n    error"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("''")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token operator"},[t._v("/")]),n("span",{staticClass:"token regex"},[t._v("/ 错误日志输出路径，默认 ~/")]),n("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("pm2"),n("span",{staticClass:"token operator"},[t._v("/")]),t._v("logs"),n("span",{staticClass:"token operator"},[t._v("/")]),n("span",{staticClass:"token operator"},[t._v("-")]),t._v("error"),n("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("err，如："),n("span",{staticClass:"token operator"},[t._v("/")]),t._v("data"),n("span",{staticClass:"token operator"},[t._v("/")]),t._v("logs"),n("span",{staticClass:"token operator"},[t._v("/")]),t._v("pm2"),n("span",{staticClass:"token operator"},[t._v("/")]),t._v("app"),n("span",{staticClass:"token operator"},[t._v("-")]),t._v("erro"),n("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("log\n    log"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("''")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token operator"},[t._v("/")]),n("span",{staticClass:"token operator"},[t._v("/")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("[")]),t._v("Boolean"),n("span",{staticClass:"token operator"},[t._v("|")]),t._v("String"),n("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" 默认值 dev"),n("span",{staticClass:"token operator"},[t._v("/")]),n("span",{staticClass:"token keyword"},[t._v("null")]),t._v("\n    disable_logs"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token boolean"},[t._v("false")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token operator"},[t._v("/")]),n("span",{staticClass:"token operator"},[t._v("/")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("[")]),t._v("Boolean"),n("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" 是否禁用日志\n    log_type"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("'json'")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token operator"},[t._v("/")]),n("span",{staticClass:"token operator"},[t._v("/")]),t._v(" 日志输出格式\n    log_date_format"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("''")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token operator"},[t._v("/")]),n("span",{staticClass:"token operator"},[t._v("/")]),t._v("自定义日志中的日期格式，遵循 moment"),n("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("js\n    merge_logs"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token boolean"},[t._v("false")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token operator"},[t._v("/")]),n("span",{staticClass:"token operator"},[t._v("/")]),t._v(" 集群模式，是否合并一个集群的进程日志\n\n    min_uptime"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token number"},[t._v("1000")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token operator"},[t._v("/")]),n("span",{staticClass:"token operator"},[t._v("/")]),t._v(" 服务启动的最小时间，默认 "),n("span",{staticClass:"token number"},[t._v("1000")]),t._v("\n    max_restarts"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token number"},[t._v("16")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token operator"},[t._v("/")]),n("span",{staticClass:"token operator"},[t._v("/")]),t._v(" 服务重启的最大次数，默认 "),n("span",{staticClass:"token number"},[t._v("16")]),t._v(" \n    exec_mode"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("'cluster'")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token operator"},[t._v("/")]),n("span",{staticClass:"token operator"},[t._v("/")]),t._v(" 进程模式，可选值：cluster"),n("span",{staticClass:"token operator"},[t._v("/")]),t._v("fork\n\n    "),n("span",{staticClass:"token operator"},[t._v("/")]),n("span",{staticClass:"token operator"},[t._v("/")]),t._v(" 环境相关配置\n    env"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("   "),n("span",{staticClass:"token operator"},[t._v("/")]),n("span",{staticClass:"token operator"},[t._v("/")]),t._v(" 使用该环境命令 pm2 start ecosystem"),n("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("config"),n("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("js "),n("span",{staticClass:"token operator"},[t._v("--")]),t._v("env\n      "),n("span",{staticClass:"token constant"},[t._v("NODE_ENV")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("'development'")]),t._v(" "),n("span",{staticClass:"token operator"},[t._v("/")]),n("span",{staticClass:"token operator"},[t._v("/")]),t._v(" node 环境变量\n    "),n("span",{staticClass:"token punctuation"},[t._v("}")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n    env_production"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("  "),n("span",{staticClass:"token operator"},[t._v("/")]),n("span",{staticClass:"token operator"},[t._v("/")]),t._v(" 使用该环境命令 pm2 start ecosystem"),n("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("config"),n("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("js "),n("span",{staticClass:"token operator"},[t._v("--")]),t._v("env production\n      "),n("span",{staticClass:"token constant"},[t._v("NODE_ENV")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("'production'")]),t._v("  "),n("span",{staticClass:"token operator"},[t._v("/")]),n("span",{staticClass:"token operator"},[t._v("/")]),t._v(" node 环境变量\n    "),n("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n  "),n("span",{staticClass:"token punctuation"},[t._v("}")]),n("span",{staticClass:"token punctuation"},[t._v("]")]),t._v("\n"),n("span",{staticClass:"token punctuation"},[t._v("}")])])]),n("p",[t._v("更多配置项参数参考："),n("a",{attrs:{href:"https://pm2.io/doc/en/runtime/reference/ecosystem-file/"}},[t._v("https://pm2.io/doc/en/runtime/reference/ecosystem-file/")])]),n("h4",{attrs:{id:"applications-bchat-not-running"}},[t._v("Applications 'bchat' not running")]),n("pre",[n("code",[t._v("[9.56.22.152@root /data/web/websites/.../build]# pm2 start ecosystem.config.js \n[PM2][WARN] Applications bchat not running, starting...\n[PM2] App [bchat] launched (1 instances)\n┌──────────┬────┬─────────┬─────────┬───────┬────────┬─────────┬────────┬─────┬───────────┬──────┬──────────┐\n│ App name │ id │ version │ mode    │ pid   │ status │ restart │ uptime │ cpu │ mem       │ user │ watching │\n├──────────┼────┼─────────┼─────────┼───────┼────────┼─────────┼────────┼─────┼───────────┼──────┼──────────┤\n│ bchat │ 0  │ 1.0.0   │ cluster │ 19275 │ online │ 0       │ 0s     │ 0%  │ 16.8 MB   │ root │ disabled │\n└──────────┴────┴─────────┴─────────┴───────┴────────┴─────────┴────────┴─────┴───────────┴──────┴──────────┘\n Use `pm2 show "),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("id|name")]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("` to get more details about an app\n")])]),n("h2",{attrs:{id:"常见问题"}},[t._v("常见问题")]),n("h3",{attrs:{id:"进程相关"}},[t._v("进程相关")]),n("h4",{attrs:{id:"pm2-如何监听代码变化？"}},[t._v("pm2 如何监听代码变化？")]),n("pre",[n("code",[t._v("pm2 start app --watch")])]),n("h4",{attrs:{id:"pm2-如何配合-npm-run-start-这类命令使用？"}},[t._v("pm2 如何配合 "),n("code",[t._v("npm run start")]),t._v(" 这类命令使用？")]),n("p",[t._v("直接使用，")]),n("pre",[n("code",[t._v("pm2 start npm -- start")])]),n("p",[t._v("带参数使用，")]),n("pre",[n("code",[t._v("pm2 start --name=app -i max npm -- start")])]),n("h4",{attrs:{id:"如何开启-pm2-进程集群（cluster）模式？"}},[t._v("如何开启 pm2 进程集群（cluster）模式？")]),n("p",[t._v("使用 "),n("code",[t._v("pm2 start -i max")]),t._v(" 相关命令启动的服务，默认模式即为集群模式。其中 max 值为可用 CPU 线程数，"),n("code",[t._v("pm2 start -i -1")]),t._v(" 表示启动可用 CPU 线程数 - 1 个进程服务。即使 "),n("code",[t._v("-i")]),t._v(" 值为 1 ，依旧可以启动集群模式 "),n("code",[t._v("cluster")]),t._v("，进程重载依旧按照集群模式重载。")]),n("h4",{attrs:{id:"pm2-集群模式是如何实现-0-秒重载（pm2-reload-all）的？"}},[t._v("pm2 集群模式是如何实现 0 秒重载（pm2 reload all）的？")]),n("p",[t._v("假设当前集群 M 中运行着 4 个进程服务，id 分别为 0, 1, 2, 3。")]),n("p",[t._v("先解释下集群中的进程重载运行过程，pm2 先会依次创建新的进程服务 0, 1, 2，可能 0 号还没完全启动，1 号已经开始着手创建（"),n("code",[t._v("starting")]),t._v("），输出创建信息到日志，待 0 号进程创建完成后，pm2 会 "),n("code",[t._v("stop")]),t._v(" 旧的 0 号进程（_old_0），最后断掉连接退出 _old_0 号进程，并发出 "),n("code",[t._v("SIGINT")]),t._v(" 信号，其它进程也会以相同的运行流程紧随其后。进程的这样一个周期，暂时称它为一个进程的"),n("strong",[t._v("生命轮回")]),t._v("。")]),n("p",[n("img",{attrs:{src:"http://img.yaoyanhuo.com/reload_processor.png",alt:"pm2 集群中的进程重载"}})]),n("p",[t._v("举个例子，当执行 "),n("code",[t._v("pm2 reload M")]),t._v("进程集群重载时，刚好一个请求来到，这时请求会被随机发送到其中一个进程服务中，假设本次是 3 号进程服务收到任务，有两种情况。第一种，3 号进程还未开始轮回；第二种，3 号进程已经开始轮回。对于第一种，简单，直接接收请求并返回，其它进程的轮回同自己无关。对于第二种情况，3 号正在轮回过程中，这时响应请求的艰巨任务就要交给旧的 3 号进程（_old_3）来处理了，待新 3 号生命轮回完成，便开始接手网络请求。")]),n("p",[t._v("由此可见，即使集群中只有一个进程也能实现 0s 重载。创建新的进程时，使用旧进程接收请求，新进程创建完毕，使用新进程接收。")]),n("h3",{attrs:{id:"日志相关"}},[t._v("日志相关")]),n("h4",{attrs:{id:"哪些方式可以查看进程日志路径？"}},[t._v("哪些方式可以查看进程日志路径？")]),n("ul",[n("li",[n("code",[t._v("pm2 logs")]),t._v(" 可以查看所有进程日志信息及各个进程日志路径， "),n("code",[t._v("pm2 logs app")]),t._v(" 查看"),n("code",[t._v("app")]),t._v("进程日志信息和路径。")]),n("li",[n("code",[t._v("pm2 show app")]),t._v("可以查看进程所有信息，包括进程日常日志路径、错误日志路径、脚本路径、命令运行路径，甚至 git 相关的信息。")]),n("li",[n("code",[t._v("pm2 flush")]),t._v(" 用于清除进程列表中的所有日志，待日志清除后，会输出日志路径到终端。")])]),n("h4",{attrs:{id:"如何添加日期（或日期格式）到日志里面？--log-date-format"}},[t._v("如何添加日期（或日期格式）到日志里面？--log-date-format")]),n("p",[n("code",[t._v("cli")]),t._v("命令模式，一定记得日格式用双引号，单引号日期格式不被识别。")]),n("pre",[n("code",[t._v(' pm2 start server --log-date-format "YYYY-MM-DD HH:mm:ss"')])]),n("p",[n("code",[t._v("ecosystem.config.js")]),t._v(" 配置如下，")]),n("pre",[n("code",[t._v("module.exports = {\n  apps : [{\n    log_date_format: 'YYYY-MM-DD HH:mm:ss'\n  }]\n}")])]),n("h4",{attrs:{id:"如何禁用日志？--disable-logs"}},[t._v("如何禁用日志？--disable-logs")]),n("p",[n("code",[t._v("cli")]),t._v("命令模式，")]),n("pre",[n("code",[t._v(" pm2 start server --disable-logs")])]),n("p",[n("code",[t._v("ecosystem.config.js")]),t._v(" 配置如下，")]),n("pre",[n("code",[t._v("module.exports = {\n  apps : [{\n    disable_logs: true\n  }]\n}")])]),n("h4",{attrs:{id:"对于集群日志，默认是各个进程是分开的日志，是否合并为一个日志文件？---merge-logs"}},[t._v("对于集群日志，默认是各个进程是分开的日志，是否合并为一个日志文件？ --merge-logs")]),n("p",[n("code",[t._v("cli")]),t._v("命令模式，")]),n("pre",[n("code",[t._v(" pm2 start server --merge-logs")])]),n("p",[n("code",[t._v("ecosystem.config.js")]),t._v(" 配置如下，")]),n("pre",[n("code",[t._v("module.exports = {\n  apps : [{\n    merge_logs: true\n  }]\n}")])]),n("h2",{attrs:{id:"pm2-常用命令详述"}},[t._v("PM2 常用命令详述")]),n("p",[t._v("Demo 目录结构如下，")]),n("pre",[n("code",[t._v("│  ecosystem.config.js  // pm2 生态系统文件\n│\n├─app\n│   index.js   // 应用 app\n│\n└─server\n    index.js   // 应用 server")])]),n("p",[t._v("如果想查看各个文件的内容，参看 附录1、附录2、附录3。")]),n("h3",{attrs:{id:"查看进程列表-pm2-list"}},[t._v("查看进程列表 pm2 list")]),n("h4",{attrs:{id:"查看所有进程列表-pm2-list"}},[t._v("查看所有进程列表 pm2 list")]),n("p",[t._v("进程列表基本上会在每一次 pm2 操作后显示。")]),n("pre",[n("code",[t._v("e:\\workplace>pm2 list\n┌────────────┬────┬─────────┬──────┬───────┬────────┬─────────┬────────┬─────┬───────────┬──────────┬──────────┐\n│ App name   │ id │ version │ mode │ pid   │ status │ restart │ uptime │ cpu │ mem       │ user     │ watching │\n├────────────┼────┼─────────┼──────┼───────┼────────┼─────────┼────────┼─────┼───────────┼──────────┼──────────┤\n│ server_pre │ 1  │ 1.0.0   │ fork │ 17504 │ online │ 0       │ 4h     │ 0%  │ 16.5 MB   │ somebody │ disabled │\n└────────────┴────┴─────────┴──────┴───────┴────────┴─────────┴────────┴─────┴───────────┴──────────┴──────────┘\n Use `pm2 show "),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("id|name")]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("` to get more details about an app")])]),n("h3",{attrs:{id:"启动服务-pm2-start"}},[t._v("启动服务 pm2 start")]),n("h4",{attrs:{id:"启动单个应用：pm2-start-app"}},[t._v("启动单个应用：pm2 start app")]),n("p",[t._v("应用名称自动填充为 "),n("code",[t._v("app")]),t._v("， 进程状态 "),n("code",[t._v("online")]),t._v("，默认不监听文件变更， "),n("code",[t._v("watching")]),t._v(" 为 "),n("code",[t._v("disabled")])]),n("pre",[n("code",[t._v("e:\\pm2>pm2 start app\n[PM2] Starting e:\\pm2\\app in fork_mode (1 instance)\n[PM2] Done.\n┌──────────┬────┬─────────┬──────┬───────┬────────┬─────────┬────────┬─────┬───────────┬──────────┬──────────┐\n│ App name │ id │ version │ mode │ pid   │ status │ restart │ uptime │ cpu │ mem       │ user     │ watching │\n├──────────┼────┼─────────┼──────┼───────┼────────┼─────────┼────────┼─────┼───────────┼──────────┼──────────┤\n│ app      │ 0  │ 1.0.0   │ fork │ 23284 │ online │ 0       │ 0s     │ 0%  │ 30.9 MB   │ somebody │ disabled │\n└──────────┴────┴─────────┴──────┴───────┴────────┴─────────┴────────┴─────┴───────────┴──────────┴──────────┘\n Use `pm2 show "),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("id|name")]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("` to get more details about an app")])]),n("h4",{attrs:{id:"启动单个应用并监听代码变化：pm2-start-app---watch"}},[t._v("启动单个应用并监听代码变化：pm2 start app --watch")]),n("p",[t._v("可以看到 "),n("code",[t._v("watching")]),t._v(" 选项值为 "),n("code",[t._v("enabled")]),t._v("，此时，代码文件变化，会触发服务自动重启。")]),n("pre",[n("code",[t._v("e:\\pm2>pm2 start app --watch\n[PM2] Starting e:\\pm2\\app in fork_mode (1 instance)\n[PM2] Done.\n┌──────────┬────┬─────────┬──────┬───────┬────────┬─────────┬────────┬─────┬───────────┬──────────┬──────────┐\n│ App name │ id │ version │ mode │ pid   │ status │ restart │ uptime │ cpu │ mem       │ user     │ watching │\n├──────────┼────┼─────────┼──────┼───────┼────────┼─────────┼────────┼─────┼───────────┼──────────┼──────────┤\n│ app      │ 0  │ 1.0.0   │ fork │ 14288 │ online │ 0       │ 0s     │ 0%  │ 31.1 MB   │ somebody │ enabled  │\n└──────────┴────┴─────────┴──────┴───────┴────────┴─────────┴────────┴─────┴───────────┴──────────┴──────────┘\n Use `pm2 show "),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("id|name")]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("` to get more details about an app")])]),n("h4",{attrs:{id:"启动单个应用并自定义应用名称：pm2-start---name-server_pre"}},[t._v("启动单个应用并自定义应用名称：pm2 start --name server_pre")]),n("p",[t._v("如下运行所示，新增了名为 "),n("code",[t._v("server_pre")]),t._v(" 的进程服务")]),n("pre",[n("code",[t._v("e:\\pm2>pm2 start server --name server_pre\n[PM2] Starting e:\\pm2\\server in fork_mode (1 instance)\n[PM2] Done.\n┌────────────┬────┬─────────┬──────┬───────┬────────┬─────────┬────────┬─────┬───────────┬──────────┬──────────┐\n│ App name   │ id │ version │ mode │ pid   │ status │ restart │ uptime │ cpu │ mem       │ user     │ watching │\n├────────────┼────┼─────────┼──────┼───────┼────────┼─────────┼────────┼─────┼───────────┼──────────┼──────────┤\n│ app        │ 0  │ 1.0.0   │ fork │ 14288 │ online │ 0       │ 74s    │ 0%  │ 27.6 MB   │ somebody │ enabled  │\n│ server_pre │ 1  │ 1.0.0   │ fork │ 17504 │ online │ 0       │ 0s     │ 0%  │ 31.1 MB   │ somebody │ disabled │\n└────────────┴────┴─────────┴──────┴───────┴────────┴─────────┴────────┴─────┴───────────┴──────────┴──────────┘\n Use `pm2 show "),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("id|name")]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("` to get more details about an app")])]),n("h4",{attrs:{id:"重启单个应用，更新参数：-pm2-restart-app---update-env---watch-disabled"}},[t._v("重启单个应用，更新参数： pm2 restart app --update-env --watch disabled")]),n("p",[t._v("重启应用需要更新参数，使用 "),n("code",[t._v("--update-env")]),t._v("， 第一个 app 应用 "),n("code",[t._v("watching")]),t._v(" 参数已经从 "),n("code",[t._v("enabled")]),t._v(" 状态变为 "),n("code",[t._v("disabled")]),t._v(" 状态。参数 "),n("code",[t._v("restart")]),t._v(" 表示自应用启动后，重启的次数")]),n("pre",[n("code",[t._v("e:\\pm2>pm2 restart app --update-env --watch disabled\n[PM2] Applying action restartProcessId on app [app](ids: 0)\n[PM2] [app](0) ✓\n┌────────────┬────┬─────────┬──────┬───────┬────────┬─────────┬────────┬─────┬───────────┬──────────┬──────────┐\n│ App name   │ id │ version │ mode │ pid   │ status │ restart │ uptime │ cpu │ mem       │ user     │ watching │\n├────────────┼────┼─────────┼──────┼───────┼────────┼─────────┼────────┼─────┼───────────┼──────────┼──────────┤\n│ app        │ 0  │ 1.0.0   │ fork │ 24256 │ online │ 4       │ 0s     │ 0%  │ 31.2 MB   │ somebody │ disabled │\n│ server_pre │ 1  │ 1.0.0   │ fork │ 17504 │ online │ 0       │ 8m     │ 0%  │ 27.0 MB   │ somebody │ disabled │\n└────────────┴────┴─────────┴──────┴───────┴────────┴─────────┴────────┴─────┴───────────┴──────────┴──────────┘\n Use `pm2 show "),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("id|name")]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("` to get more details about an app")])]),n("h4",{attrs:{id:"启动应用，负载平衡：-pm2-start-app--i-max"}},[t._v("启动应用，负载平衡： pm2 start app -i max")]),n("p",[t._v("参数 "),n("code",[t._v("-i max")]),t._v(" 表示启动当前系统 CPU 数量的进程数，其中 "),n("code",[t._v("max")]),t._v(" 可替换为具体数字，如 "),n("code",[t._v("3")]),t._v("、 "),n("code",[t._v("-1")]),t._v("，甚至大于 "),n("code",[t._v("max")]),t._v(" 的数字。数字是多少，启动的进程数就是多少。仔细观察 "),n("code",[t._v("mode")]),t._v(" 一栏，通过这种方式启动的进程都是 "),n("code",[t._v("cluster")]),t._v("，集群模式。")]),n("pre",[n("code",[t._v("e:\\pm2>pm2 start app -i max\n[PM2] Starting e:\\pm2\\app in cluster_mode (0 instance)\n[PM2] Done.\n┌────────────┬────┬─────────┬─────────┬───────┬────────┬─────────┬────────┬───────┬───────────┬──────────┬────────\n──┐\n│ App name   │ id │ version │ mode    │ pid   │ status │ restart │ uptime │ cpu   │ mem       │ user     │ watching │\n├────────────┼────┼─────────┼─────────┼───────┼────────┼─────────┼────────┼───────┼───────────┼──────────┼────────\n──┤\n│ app        │ 2  │ 1.0.0   │ cluster │ 25892 │ online │ 0       │ 1s     │ 0%    │ 34.6 MB   │ somebody │ disabled │\n│ app        │ 3  │ 1.0.0   │ cluster │ 19520 │ online │ 0       │ 1s     │ 0%    │ 34.8 MB   │ somebody │ disabled │\n│ app        │ 4  │ 1.0.0   │ cluster │ 26428 │ online │ 0       │ 1s     │ 0%    │ 34.8 MB   │ somebody │ disabled │\n│ app        │ 5  │ 1.0.0   │ cluster │ 9480  │ online │ 0       │ 1s     │ 0%    │ 35.1 MB   │ somebody │ disabled │\n│ app        │ 6  │ 1.0.0   │ cluster │ 4180  │ online │ 0       │ 1s     │ 0%    │ 34.8 MB   │ somebody │ disabled │\n│ app        │ 7  │ 1.0.0   │ cluster │ 16456 │ online │ 0       │ 0s     │ 0%    │ 34.9 MB   │ somebody │ disabled │\n│ app        │ 8  │ 1.0.0   │ cluster │ 21960 │ online │ 0       │ 0s     │ 10.9% │ 34.9 MB   │ somebody │ disabled │\n│ app        │ 9  │ 1.0.0   │ cluster │ 26904 │ online │ 0       │ 0s     │ 25%   │ 34.3 MB   │ somebody │ disabled │\n│ server_pre │ 1  │ 1.0.0   │ fork    │ 17504 │ online │ 0       │ 17m    │ 0%    │ 27.0 MB   │ somebody │ disabled │\n└────────────┴────┴─────────┴─────────┴───────┴────────┴─────────┴────────┴───────┴───────────┴──────────┴────────\n──┘\n Use `pm2 show "),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("id|name")]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("` to get more details about an app")])]),n("p",[n("strong",[t._v("根据自己对电脑的感觉，应该差不多 4 个才对，怎么出现了 8 个相同的进程？这个数字怎么来的？")])]),n("p",[t._v("先看看系统信息，")]),n("pre",[n("code",[t._v("e:\\workplace>systeminfo\n\n主机名:           ******\nOS 名称:          Microsoft Windows 7 专业版\nOS 版本:          6.1.7601 Service Pack 1 Build 7601\nOS 制造商:        Microsoft Corporation\nOS 配置:          ******\nOS 构件类型:      Multiprocessor Free\n注册的所有人:     ******\n注册的组织:       ******\n产品 ID:         ******-******-******-******\n初始安装日期:     ****/2/21, 12:46:21\n系统启动时间:     ****/2/21, 18:29:48\n系统制造商:       LENOVO\n系统型号:         ThinkCentre M8500t-N000\n系统类型:         x64-based PC\n处理器:           安装了 1 个处理器。\n                  [01]: Intel64 Family 6 Model 60 Stepping 3 GenuineIntel ~3601 Mhz\nBIOS 版本:        LENOVO FBKTC1AUS, ****/2/16\n......")])]),n("p",[t._v("只有一个处理器，嗯... 不像，再看 CPU 信息，\n"),n("code",[t._v("numberofcores = 4")]),t._v(" 表示系统 CPU 为四核；"),n("code",[t._v("NumberOfLogicalProcessors = 8")]),t._v("，表示 CPU 线程数为 8，系统使用了超线程技术。由此可推测， "),n("code",[t._v("pm2 start app -i max")]),t._v(" 中， "),n("code",[t._v("max")]),t._v("是指系统 CPU 最终的可执行的线程数决定。")]),n("pre",[n("code",[t._v("e:\\workplace>wmic\nwmic:root\\cli>cpu get numberofcores\nNumberOfCores\n4\n\nwmic:root\\cli>cpu get NumberOfLogicalProcessors\nNumberOfLogicalProcessors\n8")])]),n("h4",{attrs:{id:"0-秒停机重载所有进程-pm2-reload-all"}},[t._v("0 秒停机重载所有进程 pm2 reload all")]),n("p",[t._v("用于集群进程，即 pm2 start -i "),n("code",[t._v("n")]),t._v("，重载所有进程，但过程中始终保持一个进程在正常运行。看运行结果"),n("code",[t._v("[app](0)")]),t._v("，其中 "),n("code",[t._v("app")]),t._v(" 是进程名称， "),n("code",[t._v("0")]),t._v("是进程 id。"),n("code",[t._v("reload")]),t._v(" 也会使用进程列表中的 "),n("code",[t._v("restart")]),t._v(" 数值加1。")]),n("pre",[n("code",[t._v("e:\\pm2>pm2 reload all\nUse --update-env to update environment variables\n[PM2] Applying action reloadProcessId on app [all](ids: 0,2,3)\n[PM2] [app](0) ✓\n[PM2] [app](2) ✓\n[PM2] [server_pre](3) ✓")])]),n("h4",{attrs:{id:"0-秒停机重载某一集群进程-pm2-reload-app"}},[t._v("0 秒停机重载某一集群进程 pm2 reload app")]),n("p",[t._v("系统有两个应用，app 和 server，但只重载了 app 应用的所有进程。")]),n("pre",[n("code",[t._v("e:\\pm2>pm2 reload app\nUse --update-env to update environment variables\n[PM2] Applying action reloadProcessId on app [app](ids: 0,2)\n[PM2] [app](0) ✓\n[PM2] [app](2) ✓")])]),n("h3",{attrs:{id:"删除进程-pm2-delete"}},[t._v("删除进程 pm2 delete")]),n("h4",{attrs:{id:"根据名称删除应用进程-pm2-delete-app"}},[t._v("根据名称删除应用进程 pm2 delete app")]),n("p",[t._v("先使用 "),n("code",[t._v("pm2 start app -i 3")]),t._v(" 创建三个相同的 app 进程，然后使用 "),n("code",[t._v("pm2 delete app")]),t._v("，观察输出结果。会显示删除的 App id。")]),n("pre",[n("code",[t._v("e:\\pm2>pm2 delete app\n[PM2] Applying action deleteProcessId on app [app](ids: 57,58,59)\n[PM2] [app](57) ✓\n[PM2] [app](58) ✓\n[PM2] [app](59) ✓\n┌────────────┬────┬─────────┬──────┬───────┬────────┬─────────┬────────┬─────┬───────────┬──────────┬──────────┐\n│ App name   │ id │ version │ mode │ pid   │ status │ restart │ uptime │ cpu │ mem       │ user     │ watching │\n├────────────┼────┼─────────┼──────┼───────┼────────┼─────────┼────────┼─────┼───────────┼──────────┼──────────┤\n│ server_pre │ 1  │ 1.0.0   │ fork │ 17504 │ online │ 0       │ 4h     │ 0%  │ 17.0 MB   │ somebody │ disabled │\n└────────────┴────┴─────────┴──────┴───────┴────────┴─────────┴────────┴─────┴───────────┴──────────┴──────────┘\n Use `pm2 show "),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("id|name")]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("` to get more details about an app")])]),n("h4",{attrs:{id:"删除所有应用进程-pm2-delete-all"}},[t._v("删除所有应用进程 pm2 delete all")]),n("pre",[n("code",[t._v("e:\\pm2>pm2 delete all\n[PM2] Applying action deleteProcessId on app [all](ids: 1,60,61,62)\n[PM2] [server_pre](1) ✓\n[PM2] [app](61) ✓\n[PM2] [app](60) ✓\n[PM2] [app](62) ✓\n┌──────────┬────┬─────────┬──────┬─────┬────────┬─────────┬────────┬─────┬─────┬──────┬──────────┐\n│ App name │ id │ version │ mode │ pid │ status │ restart │ uptime │ cpu │ mem │ user │ watching │\n└──────────┴────┴─────────┴──────┴─────┴────────┴─────────┴────────┴─────┴─────┴──────┴──────────┘\n Use `pm2 show "),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("id|name")]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("` to get more details about an app")])]),n("h4",{attrs:{id:"根据-id-删除应用进程-pm2-delete-0"}},[t._v("根据 id 删除应用进程 pm2 delete 0")]),n("p",[t._v("重新创建全新的 pm2 进程，然后删除具体某一个 id 进程。 根据名称会删除所有进程，但是根据 id 只会删除其中一个。名称相同， id 不同的进程一般属于一个集群。")]),n("pre",[n("code",[t._v("e:\\pm2>pm2 start app -i 3\n[PM2] Starting e:\\pm2\\app in cluster_mode (3 instances)\n[PM2] Done.\n┌──────────┬────┬─────────┬─────────┬───────┬────────┬─────────┬────────┬─────┬───────────┬──────────┬──────────┐\n│ App name │ id │ version │ mode    │ pid   │ status │ restart │ uptime │ cpu │ mem       │ user     │ watching │\n├──────────┼────┼─────────┼─────────┼───────┼────────┼─────────┼────────┼─────┼───────────┼──────────┼──────────┤\n│ app      │ 0  │ 1.0.0   │ cluster │ 19600 │ online │ 0       │ 0s     │ 0%  │ 34.8 MB   │ somebody │ disabled │\n│ app      │ 1  │ 1.0.0   │ cluster │ 27652 │ online │ 0       │ 0s     │ 0%  │ 34.6 MB   │ somebody │ disabled │\n│ app      │ 2  │ 1.0.0   │ cluster │ 27792 │ online │ 0       │ 0s     │ 0%  │ 34.8 MB   │ somebody │ disabled │\n└──────────┴────┴─────────┴─────────┴───────┴────────┴─────────┴────────┴─────┴───────────┴──────────┴──────────┘\n Use `pm2 show "),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("id|name")]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("` to get more details about an app\n\ne:\\pm2>pm2 delete 1\n[PM2] Applying action deleteProcessId on app [1](ids: 1)\n[PM2] [app](1) ✓\n┌──────────┬────┬─────────┬─────────┬───────┬────────┬─────────┬────────┬─────┬───────────┬──────────┬──────────┐\n│ App name │ id │ version │ mode    │ pid   │ status │ restart │ uptime │ cpu │ mem       │ user     │ watching │\n├──────────┼────┼─────────┼─────────┼───────┼────────┼─────────┼────────┼─────┼───────────┼──────────┼──────────┤\n│ app      │ 0  │ 1.0.0   │ cluster │ 19600 │ online │ 0       │ 15s    │ 0%  │ 34.9 MB   │ somebody │ disabled │\n│ app      │ 2  │ 1.0.0   │ cluster │ 27792 │ online │ 0       │ 14s    │ 0%  │ 34.8 MB   │ somebody │ disabled │\n└──────────┴────┴─────────┴─────────┴───────┴────────┴─────────┴────────┴─────┴───────────┴──────────┴──────────┘\n Use `pm2 show "),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("id|name")]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("` to get more details about an app")])]),n("h3",{attrs:{id:"停止进程-pm2-stop"}},[t._v("停止进程 pm2 stop")]),n("h4",{attrs:{id:"停止所有进程-pm2-stop-all"}},[t._v("停止所有进程 pm2 stop all")]),n("pre",[n("code",[t._v("e:\\workplace>pm2 stop all\n[PM2] Applying action stopProcessId on app [all](ids: 0,2,3)\n[PM2] [app](0) ✓\n[PM2] [app](2) ✓\n[PM2] [server_pre](3) ✓\n┌────────────┬────┬─────────┬─────────┬─────┬─────────┬─────────┬────────┬─────┬────────┬──────────┬──────────┐\n│ App name   │ id │ version │ mode    │ pid │ status  │ restart │ uptime │ cpu │ mem    │ user     │ watching │\n├────────────┼────┼─────────┼─────────┼─────┼─────────┼─────────┼────────┼─────┼────────┼──────────┼──────────┤\n│ app        │ 0  │ 1.0.0   │ cluster │ 0   │ stopped │ 3       │ 0      │ 0%  │ 0 B    │ somebody │ disabled │\n│ app        │ 2  │ 1.0.0   │ cluster │ 0   │ stopped │ 3       │ 0      │ 0%  │ 0 B    │ somebody │ disabled │\n│ server_pre │ 3  │ 1.0.0   │ fork    │ 0   │ stopped │ 1       │ 0      │ 0%  │ 0 B    │ somebody │ disabled │\n└────────────┴────┴─────────┴─────────┴─────┴─────────┴─────────┴────────┴─────┴────────┴──────────┴──────────┘\n Use `pm2 show "),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("id|name")]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("` to get more details about an app")])]),n("h4",{attrs:{id:"根据名称停止某一进程-pm2-stop-app"}},[t._v("根据名称停止某一进程 pm2 stop app")]),n("p",[t._v("名称为 app 的两个进程都被 stopped 了")]),n("pre",[n("code",[t._v("e:\\workplace>pm2 stop app\n[PM2] Applying action stopProcessId on app [app](ids: 0,2)\n[PM2] [app](0) ✓\n[PM2] [app](2) ✓\n┌────────────┬────┬─────────┬─────────┬───────┬─────────┬─────────┬────────┬─────┬───────────┬──────────┬──────────┐\n\n│ App name   │ id │ version │ mode    │ pid   │ status  │ restart │ uptime │ cpu │ mem       │ user     │ watching │\n├────────────┼────┼─────────┼─────────┼───────┼─────────┼─────────┼────────┼─────┼───────────┼──────────┼──────────┤\n\n│ app        │ 0  │ 1.0.0   │ cluster │ 0     │ stopped │ 3       │ 0      │ 0%  │ 0 B       │ somebody │ disabled │\n│ app        │ 2  │ 1.0.0   │ cluster │ 0     │ stopped │ 3       │ 0      │ 0%  │ 0 B       │ somebody │ disabled │\n│ server_pre │ 3  │ 1.0.0   │ fork    │ 11940 │ online  │ 1       │ 12s    │ 0%  │ 31.3 MB   │ somebody │ disabled │\n└────────────┴────┴─────────┴─────────┴───────┴─────────┴─────────┴────────┴─────┴───────────┴──────────┴──────────┘\n\n Use `pm2 show "),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("id|name")]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("` to get more details about an app")])]),n("h4",{attrs:{id:"根据-id-停止某一进程-pm2-stop-3"}},[t._v("根据 id 停止某一进程 pm2 stop 3")]),n("p",[t._v("只有 "),n("code",[t._v("server_pre")]),t._v(" 的状态 status 已变为 "),n("code",[t._v("stopped")])]),n("pre",[n("code",[t._v("e:\\workplace>pm2 stop 3\n[PM2] Applying action stopProcessId on app [3](ids: 3)\n[PM2] [server_pre](3) ✓\n┌────────────┬────┬─────────┬─────────┬───────┬─────────┬─────────┬────────┬─────┬───────────┬──────────┬──────────┐\n\n│ App name   │ id │ version │ mode    │ pid   │ status  │ restart │ uptime │ cpu │ mem       │ user     │ watching │\n├────────────┼────┼─────────┼─────────┼───────┼─────────┼─────────┼────────┼─────┼───────────┼──────────┼──────────┤\n\n│ app        │ 0  │ 1.0.0   │ cluster │ 23856 │ online  │ 3       │ 8m     │ 0%  │ 29.2 MB   │ somebody │ disabled │\n│ app        │ 2  │ 1.0.0   │ cluster │ 28412 │ online  │ 3       │ 8m     │ 0%  │ 28.7 MB   │ somebody │ disabled │\n│ server_pre │ 3  │ 1.0.0   │ fork    │ 0     │ stopped │ 1       │ 0      │ 0%  │ 0 B       │ somebody │ disabled │\n└────────────┴────┴─────────┴─────────┴───────┴─────────┴─────────┴────────┴─────┴───────────┴──────────┴──────────┘\n\n Use `pm2 show "),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("id|name")]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("` to get more details about an app")])]),n("h3",{attrs:{id:"进程信息查看"}},[t._v("进程信息查看")]),n("h4",{attrs:{id:"查看单个进程详细信息"}},[t._v("查看单个进程详细信息")]),n("p",[n("code",[t._v("pm2 show <name|id>")]),t._v("，包含：名称、版本、重启次数、脚本路径、端口号、日志路径、环境变量、创建时间、git 相关信息等。")]),n("pre",[n("code",[t._v("e:\\workplace\\yaoyanhuo>pm2 show 0\n Describing process with id 0 - name bcontent \n┌───────────────────┬───────────────────────────────────────────────────────┐\n│ status            │ online                                                │\n│ name              │ bcontent                                              │\n│ version           │ 1.0.0                                                 │\n│ restarts          │ 1                                                     │\n│ uptime            │ 23h                                                   │\n│ script path       │ e:\\webtorm_workplace\\landing-page\\dev\\server\\index.js │\n│ script args       │ 10001                                                 │\n│ error log path    │ C:\\Users\\somebody\\.pm2\\logs\\bcontent-error-0.log      │\n│ out log path      │ C:\\Users\\somebody\\.pm2\\logs\\bcontent-out-0.log        │\n│ pid path          │ C:\\Users\\somebody\\.pm2\\pids\\bcontent-0.pid            │\n│ interpreter       │ node                                                  │\n│ interpreter args  │ N/A                                                   │\n│ script id         │ 0                                                     │\n│ exec cwd          │ e:\\webtorm_workplace\\landing-page\\dev\\build           │\n│ exec mode         │ cluster_mode                                          │\n│ node.js version   │ 10.15.1                                               │\n│ node env          │ production                                            │\n│ watch & reload    │ ✘                                                     │\n│ unstable restarts │ 0                                                     │\n│ created at        │ 2019-02-28T07:21:26.068Z                              │\n└───────────────────┴───────────────────────────────────────────────────────┘\n Revision control metadata \n┌──────────────────┬──────────────────────────────────────────────────────────┐\n│ revision control │ git                                                      │\n│ remote url       │ http://git.code.oa.com/business_content/landing-page.git │\n│ repository root  │ e:\\webtorm_workplace\\landing-page                        │\n│ last update      │ 2019-02-28T07:21:26.651Z                                 │\n│ revision         │ 61f60121fbca3d7bbd6872caa2f094fa44ed5a33                 │\n│ comment          │ add pre bash                                             │\n│ branch           │ master                                                   │\n└──────────────────┴──────────────────────────────────────────────────────────┘\n Code metrics value \n┌────────────────────┬──────────┐\n│ Event Loop Latency │ 306.55ms │\n│ Active handles     │ 2        │\n└────────────────────┴──────────┘\n Add your own code metrics: http://bit.ly/code-metrics\n Use `pm2 logs bcontent [--lines 1000]` to display logs\n Use `pm2 env 0` to display environement variables\n Use `pm2 monit` to monitor CPU and Memory usage bcontent")])]),n("h4",{attrs:{id:"进程监视-pm2-monit"}},[t._v("进程监视 pm2 monit")]),n("p",[t._v("查看进程 CPU 运行情况")]),n("h3",{attrs:{id:"日志管理"}},[t._v("日志管理")]),n("ul",[n("li",[t._v("日志会打印 node 服务中的所有 "),n("code",[t._v("console")]),t._v("，无论是启动服务中的，还是网络请求中的。")]),n("li",[t._v("日志分类存储，错误日志和普通日志分开存储，不同进程服务不同的日志文件，同一进程集群，也会因进程 id 不同而分开存储日志。")]),n("li",[t._v("日志文件一旦创建，无论执行 "),n("code",[t._v("restart")]),n("code",[t._v("start")]),t._v(" 还是 "),n("code",[t._v("delete")]),t._v(" 命令，过往日志都不会被删除和清空。")])]),n("h4",{attrs:{id:"查看所有进程日志-pm2-logs"}},[t._v("查看所有进程日志 pm2 logs")]),n("p",[t._v("日志路径会在命令执行后输出到控制台，并且可以看到是分文件输出，且仅显示最新的 log。进入具体日志路径 "),n("code",[t._v("C:\\Users\\somebody\\.pm2\\logs\\server-pre-out.log")]),t._v(" 查看完整日志。")]),n("pre",[n("code",[t._v("e:\\pm2>pm2 logs\n[TAILING] Tailing last 15 lines for [all] processes (change the value with --lines option)\nC:\\Users\\somebody\\.pm2\\pm2.log last 15 lines:\nPM2        | 2019-02-27T23:03:59: PM2 log: App name:app id:0 disconnected\nPM2        | 2019-02-27T23:03:59: PM2 log: App [app:0] exited with code [1] via signal [SIGINT]\nPM2        | 2019-02-27T23:03:59: PM2 log: App name:app id:2 disconnected\nPM2        | 2019-02-27T23:03:59: PM2 log: App [app:2] exited with code [1] via signal [SIGINT]\nPM2        | 2019-02-27T23:03:59: PM2 log: pid=17860 msg=process killed\nPM2        | 2019-02-27T23:03:59: PM2 log: App [app:0] starting in -cluster mode-\nPM2        | 2019-02-27T23:03:59: PM2 log: pid=28304 msg=process killed\nPM2        | 2019-02-27T23:03:59: PM2 log: App [app:2] starting in -cluster mode-\nPM2        | 2019-02-27T23:03:59: PM2 log: App [app:0] online\nPM2        | 2019-02-27T23:03:59: PM2 log: Stopping app:server_pre id:3\nPM2        | 2019-02-27T23:03:59: PM2 log: App [app:2] online\nPM2        | 2019-02-27T23:03:59: PM2 log: App [server_pre:3] exited with code [1] via signal [SIGINT]\nPM2        | 2019-02-27T23:03:59: PM2 log: pid=14312 msg=process killed\nPM2        | 2019-02-27T23:03:59: PM2 log: App [server_pre:3] starting in -fork mode-\nPM2        | 2019-02-27T23:03:59: PM2 log: App [server_pre:3] online\n\nC:\\Users\\somebody\\.pm2\\logs\\server-pre-error.log last 15 lines:\nC:\\Users\\somebody\\.pm2\\logs\\app-error-0.log last 15 lines:\nC:\\Users\\somebody\\.pm2\\logs\\app-error-2.log last 15 lines:\nC:\\Users\\somebody\\.pm2\\logs\\app-out-2.log last 15 lines:\n2|app      | hello app...\n2|app      | undefined\n2|app      | app is listening at localhost:3001\n2|app      | hello app...\n2|app      | undefined\n2|app      | app is listening at localhost:3001\n2|app      | hello app...\n2|app      | undefined\n2|app      | app is listening at localhost:3001\n2|app      | hello app...\n2|app      | undefined\n2|app      | app is listening at localhost:3001\n2|app      | hello app...\n2|app      | undefined\n2|app      | app is listening at localhost:3001\n\nC:\\Users\\somebody\\.pm2\\logs\\app-out-0.log last 15 lines:\n0|app      | hello app...\n0|app      | undefined\n0|app      | app is listening at localhost:3001\n0|app      | hello app...\n0|app      | undefined\n0|app      | app is listening at localhost:3001\n0|app      | hello app...\n0|app      | undefined\n0|app      | app is listening at localhost:3001\n0|app      | hello app...\n0|app      | undefined\n0|app      | app is listening at localhost:3001\n0|app      | hello app...\n0|app      | undefined\n0|app      | app is listening at localhost:3001\n\nC:\\Users\\somebody\\.pm2\\logs\\server-pre-out.log last 15 lines:\n3|server_p | hello server...\n3|server_p | undefined\n3|server_p | app is listening at localhost:3002\n3|server_p | hello server...\n3|server_p | undefined\n3|server_p | app is listening at localhost:3002\n3|server_p | request once refresh\n3|server_p | hello server...\n3|server_p | undefined\n3|server_p | app is listening at localhost:3002\n3|server_p | request once refresh\n3|server_p | request once refresh\n3|server_p | hello server...\n3|server_p | undefined\n3|server_p | app is listening at localhost:3002")])]),n("h4",{attrs:{id:"查看具体应用日志-pm2-logs-app"}},[t._v("查看具体应用日志 pm2 logs app")]),n("p",[t._v("如下，"),n("code",[t._v("request once refresh")]),t._v(" 是在网络请求代码请求中输出的。 "),n("code",[t._v("hello server")]),t._v(" 则是应用启动 log，每次应用启动或更新时会打印。")]),n("pre",[n("code",[t._v("e:\\workplace>pm2 logs server_pre\n[TAILING] Tailing last 15 lines for [server_pre] process (change the value with --lines option)\nC:\\Users\\somebody\\.pm2\\logs\\server-pre-error.log last 15 lines:\nC:\\Users\\somebody\\.pm2\\logs\\server-pre-out.log last 15 lines:\n3|server_p | hello server...\n3|server_p | undefined\n3|server_p | app is listening at localhost:3002\n3|server_p | hello server...\n3|server_p | undefined\n3|server_p | app is listening at localhost:3002\n3|server_p | hello server...\n3|server_p | undefined\n3|server_p | app is listening at localhost:3002\n3|server_p | request once refresh")])]),n("h4",{attrs:{id:"清除日志-pm2-flush"}},[t._v("清除日志 pm2 flush")]),n("p",[t._v("清除进程列表"),n("code",[t._v("pm2 list")]),t._v("中的所有进程应用日志，无论其状态为 "),n("code",[t._v("online")]),t._v(" 还是 "),n("code",[t._v("stopped")]),t._v("。但不在进程列表中的死进程，其日志不会被清除，如：执行了 "),n("code",[t._v("pm2 delete app")]),t._v(" 的 app 进程。清除操作仅仅是清空文件，不会删除文件。")]),n("p",[t._v("如下执行结果所示，"),n("code",[t._v("sopped")]),t._v(" 状态的 "),n("code",[t._v("server")]),t._v(" 和 "),n("code",[t._v("online")]),t._v(" 状态的 "),n("code",[t._v("bcontent")]),t._v(" 日志都被清除了。")]),n("pre",[n("code",[t._v("e:\\pm2>pm2 stop server\n[PM2] Applying action stopProcessId on app [server](ids: 1)\n[PM2] [server](1) ✓\n┌──────────┬────┬─────────┬──────┬───────┬─────────┬─────────┬────────┬─────┬───────────┬──────────┬──────────┐\n│ App name │ id │ version │ mode │ pid   │ status  │ restart │ uptime │ cpu │ mem       │ user     │ watching │\n├──────────┼────┼─────────┼──────┼───────┼─────────┼─────────┼────────┼─────┼───────────┼──────────┼──────────┤\n│ bcontent │ 0  │ 1.0.0   │ fork │ 10176 │ online  │ 0       │ 5m     │ 0%  │ 36.6 MB   │ somebody │ enabled  │\n│ server   │ 1  │ 1.0.0   │ fork │ 0     │ stopped │ 0       │ 0      │ 0%  │ 0 B       │ somebody │ disabled │\n└──────────┴────┴─────────┴──────┴───────┴─────────┴─────────┴────────┴─────┴───────────┴──────────┴──────────┘\n Use `pm2 show "),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("id|name")]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("` to get more details about an app\n\ne:\\pm2>pm2 flush\n[PM2] Flushing C:\\Users\\somebody\\.pm2\\pm2.log\n[PM2] Flushing:\n[PM2] C:\\Users\\somebody\\.pm2\\logs\\bcontent-out-0.log\n[PM2] C:\\Users\\somebody\\.pm2\\logs\\bcontent-error-0.log\n[PM2] Flushing:\n[PM2] C:\\Users\\somebody\\.pm2\\logs\\server-out.log\n[PM2] C:\\Users\\somebody\\.pm2\\logs\\server-error.log\n[PM2] Logs flushed")])]),n("h3",{attrs:{id:"启动挂钩"}},[t._v("启动挂钩")]),n("ul",[n("li",[t._v("启动挂钩是为了保存进程列表，在计算机重启或出现意外时将其恢复。")]),n("li",[t._v("每个操作系统都有一个特定的工具来处理启动挂钩：pm2提供了一种简单的方法来生成和配置它们。")])]),n("h4",{attrs:{id:"检测可用的-init-系统并生成配置-pm2-startup"}},[t._v("检测可用的 init 系统并生成配置 pm2 startup")]),n("p",[t._v("这是一台 linux 系统执行结果，")]),n("pre",[n("code",[t._v("ubuntu@VM-16-2-ubuntu:~$ pm2 startup\n[PM2] Init System found: systemd\n[PM2] To setup the Startup Script, copy/paste the following command:\nsudo env PATH=$PATH:/home/ubuntu/.nvm/versions/node/v10.15.1/bin /home/ubuntu/.nvm/versions/node/v10.15.1/lib/node_modules/pm2/bin/pm2 startup systemd -u ubuntu --hp /home/ubuntu")])]),n("p",[t._v("这是本地 windows 执行结果，啥都没有。")]),n("pre",[n("code",[t._v("e:\\workplace\\yaoyanhuo>pm2 startup\n[PM2][ERROR] Init system not found\nD:\\Program Files\\nodejs\\node_modules\\@tencent\\pm2\\lib\\API\\Startup.js:201\n      throw new Error('Init system not found');\n      ^\n\nError: Init system not found\n    at API.CLI.startup (D:\\Program Files\\nodejs\\node_modules\\@tencent\\pm2\\lib\\API\\Startup.js:201:13)\n    at Command."),n("span",{staticClass:"token tag"},[n("span",{staticClass:"token tag"},[n("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("anonymous")]),n("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v(" (D:\\Program Files\\nodejs\\node_modules\\@tencent\\pm2\\bin\\pm2:736:9)\n    at Command.listener (D:\\Program Files\\nodejs\\node_modules\\@tencent\\pm2\\node_modules\\commander\\index.js:315:8)\n    at Command.emit (events.js:189:13)\n    at Command.parseArgs (D:\\Program Files\\nodejs\\node_modules\\@tencent\\pm2\\node_modules\\commander\\index.js:651:12)\n    at Command.parse (D:\\Program Files\\nodejs\\node_modules\\@tencent\\pm2\\node_modules\\commander\\index.js:474:21)\n    at Timeout._onTimeout (D:\\Program Files\\nodejs\\node_modules\\@tencent\\pm2\\bin\\pm2:204:15)\n    at ontimeout (timers.js:436:11)\n    at tryOnTimeout (timers.js:300:5)\n    at listOnTimeout (timers.js:263:5)")])]),n("h2",{attrs:{id:"附录1-appindexjs"}},[t._v("附录1 app/index.js")]),n("pre",[n("code",[t._v("const express = require('express')\nconst app = express()\nconst port = process.argv[2] || 3001\n\nconsole.log('hello app...')\nconsole.log(process.env.NODE_ENV)\n\napp.get('/', function (req, res) {\n  res.json({data: 'hello app'})\n})\napp.listen(port, () => console.log(`app is listening at localhost:${port}`))\n")])]),n("h2",{attrs:{id:"附录2-serverindexjs"}},[t._v("附录2 server/index.js")]),n("pre",[n("code",[t._v("const express = require('express')\nconst app = express()\nconst port = process.argv[2] || 3002\n\nconsole.log('hello server...')\nconsole.log(process.env.NODE_ENV)\n\napp.get('/', function (req, res) {\n  console.log('request once refresh')\n  res.json({greeting: 'hello server'})\n})\napp.listen(port, () => console.log(`app is listening at localhost:${port}`))\n")])]),n("h2",{attrs:{id:"附录3-ecosystemconfigjs"}},[t._v("附录3 ecosystem.config.js")]),n("pre",[n("code",[t._v("module.exports = {\n  apps : [{\n    name: 'app',\n    script: 'app/index.js',\n    args: '3306',\n    instances: 1,\n    autorestart: true,\n    watch: false,\n    max_memory_restart: '1G',\n    env: {\n      NODE_ENV: 'development'\n    },\n    env_production: {\n      NODE_ENV: 'production'\n    }\n  },{\n    name: 'server',\n    script: 'server/index.js',\n    args: '1001',\n    instances: 3,\n    autorestart: true,\n    watch: false,\n    max_memory_restart: '1G',\n    env: {\n      NODE_ENV: 'development'\n    },\n    env_production: {\n      NODE_ENV: 'production'\n    }\n  }]\n}")])]),n("h2",{attrs:{id:"附录4-参考地址"}},[t._v("附录4 参考地址")]),n("ul",[n("li",[t._v("pm2 从入门到精通："),n("a",{attrs:{href:"https://www.kancloud.cn/daiji/pm2/395334"}},[t._v("https://www.kancloud.cn/daiji/pm2/395334")])]),n("li",[t._v("官网："),n("a",{attrs:{href:"https://pm2.io/doc/en/runtime/quick-start/"}},[t._v("https://pm2.io/doc/en/runtime/quick-start/")])]),n("li",[t._v("中文："),n("a",{attrs:{href:"https://pm2.io/doc/zh/runtime/quick-start/"}},[t._v("https://pm2.io/doc/zh/runtime/quick-start/")])])])])}],lt={},ut=Object(c["a"])(lt,ct,rt,!1,null,null,null),dt=ut.exports,mt=function(){var t=this,s=t.$createElement;t._self._c;return t._m(0)},Ct=[function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"markdown-to-vue-loader"},[n("h1",{attrs:{id:"中断和异常（操作系统）"}},[t._v("中断和异常（操作系统）")]),n("p",[n("em",[t._v("posted by yaoyanhuo on 2019-02-20")])]),n("blockquote",[n("p",[t._v("中断（interrupt）指在程序执行过程中遇到急需处理的事件时，暂时中止现行程序在 CPU 上的运行，转而执行响应的事件处理程序，待处理完成后再返回断点或调度其他程序。本文主要对中断和异常的区别、中断优先级、中断处理程序和中断服务例程关系和常见几类中断进行描述。并以 Linux 系统作为中断例子，进一步了解中断机制和中断处理过程。")])]),n("p",[t._v("举个生活中的例子，我爸让我 4:00 跟他一起打球，在这之前我一直在看电视，3:30 的时候我妈突然让我帮她整理衣服。如果在 4:00 之前，衣服整理完了，我就继续干自己的事儿，看电视。4:00 或 4:00 以后才整理完衣服，那就直接跟老爸去打球了。看看类比，")]),n("table",[n("thead",[n("tr",[n("th",[t._v("生活")]),n("th",[t._v("电脑")])])]),n("tbody",[n("tr",[n("td",[t._v("我")]),n("td",[t._v("CPU")])]),n("tr",[n("td",[t._v("看电视")]),n("td",[t._v("正在运行的程序")])]),n("tr",[n("td",[t._v("我妈让我整理衣服")]),n("td",[t._v("中断请求")])]),n("tr",[n("td",[t._v("整理衣服")]),n("td",[t._v("中断事件处理程序")])]),n("tr",[n("td",[t._v("老爸打球")]),n("td",[t._v("其他定时调度程序")])])])]),n("h2",{attrs:{id:"中断"}},[t._v("中断")]),n("p",[t._v("由硬件发出或产生的中断成为硬中断，按硬中断事件的来源和实现手段可将中断划分为外中断和内中断。")]),n("p",[n("strong",[t._v("外中断，也是中断，异步中断")]),t._v("，是指来自"),n("u",[t._v("处理器之外")]),t._v("的中断信号，包括时钟中断、键盘中断、它机中断和外部设备中断。外中断又分可屏蔽中断和不可屏蔽中断，各个中断具有不同的优先级，表示事件的紧急程度，在处理高一级中断时往往会部分或全部屏蔽低级中断。因最开始的中断仅针对外中断，因此外中断也直接称作中断。")]),n("h2",{attrs:{id:"异常"}},[t._v("异常")]),n("p",[n("strong",[t._v("内中断，又称异常，同步中断")]),t._v("，是指来自"),n("u",[t._v("处理器内部")]),t._v("的中断信号，通常是由于在程序执行过程中，发现与当前指令关联的、不正常的或错误的事件。内中断不能被屏蔽，一旦出现必须立即予以响应并进行处理，只是处理程序运行过程中可以选择是否屏蔽其它中断或屏蔽哪些中断。 内中断可细分为：")]),n("ol",[n("li",[t._v("访管中断，由系统程序执行访管指令引起，可以看做机器指令的一种扩充；")]),n("li",[t._v("硬件故障中断，如：电源失效、奇偶校验错误，总线超时；")]),n("li",[t._v("程序性中断，如：非法操作、地址越界、页面故障、调试指令、除数为0和浮点溢出等。")])]),n("h3",{attrs:{id:"中断和异常的区别"}},[t._v("中断和异常的区别")]),n("table",[n("thead",[n("tr",[n("th",[t._v("分类")]),n("th",[t._v("中断")]),n("th",[t._v("异常")])])]),n("tbody",[n("tr",[n("td",[t._v("产生地点")]),n("td",[t._v("处理器外部，由与运行程序无关的中断信号触发，中断时间系统无法得知")]),n("td",[t._v("处理器内部，CPU 控制单元产生")])]),n("tr",[n("td",[t._v("能否被屏蔽")]),n("td",[t._v("高优先级的中断可以屏蔽低优先级的中断")]),n("td",[t._v("不可被屏蔽")])]),n("tr",[n("td",[t._v("处理程序能否被阻塞")]),n("td",[t._v("不能被阻塞，处理器需要及时响应其它中断信号")]),n("td",[t._v("可以被阻塞")])]),n("tr",[n("td",[t._v("CPU")]),n("td",[t._v("中断与 CPU 异步，无论处理器处于什么状态都需处理外部中断请求")]),n("td",[t._v("异常与 CPU 同步，基本上发生在用户态，内核态唯一发生的异常是“缺页异常”")])]),n("tr",[n("td",[t._v("能否嵌套")]),n("td",[t._v("允许嵌套，一般不超过 3 重，重数多了影响系统性能")]),n("td",[t._v("大多为一重")])]),n("tr",[n("td",[t._v("彼此之间的影响")]),n("td",[t._v("中断过程中绝不会产生异常")]),n("td",[t._v("异常处理过程中可能会产生中断")])])])]),n("h4",{attrs:{id:"为什么中断处理过程中不能被阻塞，而异常处理过程却可以？"}},[t._v("为什么中断处理过程中不能被阻塞，而异常处理过程却可以？")]),n("p",[t._v("中断处理程序阻塞（或睡眠）后，不能进行进程调度，相当于免除干扰，也不响应其他中断请求，而“中断”要求被快速处理，以便响应其他中断信号，因此中断处理过程中不能被阻塞（或睡眠）。")]),n("p",[t._v("而对于异常处理，异常所提供的服务本就是当前进程所需要的，故而当进程需要阻塞的时候，便会在异常处理程序中设置阻塞。")]),n("h4",{attrs:{id:"为什么异常处理过程中可能会产生中断，但中断过程中绝不会产生异常-？"}},[t._v("为什么异常处理过程中可能会产生中断，但中断过程中绝不会产生异常 ？")]),n("p",[t._v("中断产生于处理器外部，发生时机不受处理器内部限制，故而在处理器内部执行异常处理器程序的时候，可能产生中断（处理器外部）。异常产生于处理器内部，处理器内部正在进行中断处理时，不会同时在同一个处理器产生异常。")]),n("h2",{attrs:{id:"中断和异常响应过程"}},[t._v("中断和异常响应过程")]),n("p",[t._v("中断向量由硬件或操作系统预先分配和设置，系统调用所对应的向量则在访管指令中给出。用户程序通过访管指令找到对应的系统调用执行。异常向量则在 CPU 的硬件结构中预先预定。")]),n("p",[t._v("一般来说，中断/异常的响应需要 "),n("strong",[t._v("顺序")]),t._v(" 做以下四件事，")]),n("ol",[n("li",[n("strong",[t._v("发现中断源")]),t._v("。在中断未被屏蔽的前提下，硬件发现中断/异常事件，并由CPU响应中断/异常请求。当发现多个中断源时，将根据预定的中断优先级先后响应中断请求。")]),n("li",[n("strong",[t._v("保护现场")]),t._v("。暂停当前程序运行，硬件将中断点的现场信息（PSW）保存至核心栈，使得中断/异常处理程序在运行时不会破坏被中断程序中的有用信息，以便在处理完成后返回原程序继续运行。")]),n("li",[n("strong",[t._v("转向中断/异常事件处理程序执行")]),t._v("。此时处理器状态已由用户态转为内核态，中断/异常处理程序开始工作。")]),n("li",[n("strong",[t._v("恢复现场")]),t._v("。当中断处理结束后，恢复原运行程序的PSW，重新返回中断点以便执行后续指令。当异常处理结束后，返回点会因异常类型而异，大部分应用程序指令执行出错时，异常处理会结束进程，不可能回到原程序；如果执行访管指令，则异常处理完成后返回这条访管的下一条指令；对于页面故障，异常处理结束后会返回发生异常的那条指令重新执行。")])]),n("h4",{attrs:{id:"操作如何转到中断异常处理程序执行的呢？"}},[t._v("操作如何转到中断/异常处理程序执行的呢？")]),n("p",[t._v("对于中断处理程序，中断控制器发现中断源（外部设备、时钟部件或其它计算机发出）并产生中断，当前指令执行结束后， CPU 会检查中断寄存器（中断控制器的一部分）是否有中断事件发生，如果发现中断信号将暂停执行当前程序，转向执行内核的中断处理程序，如果没有发现中断信号，则继续执行当前程序。")]),n("p",[t._v("对于异常处理程序，没有中断源一说，不使用中断控制器，是处理器在执行指令时本身发生的异常，指令控制逻辑和实现线路一旦发现异常变转向内核的异常处理程序。")]),n("h4",{attrs:{id:"页面故障，异常处理结束后会返回发生异常的指令重新执行，那不会陷入死循环吗？"}},[t._v("页面故障，异常处理结束后会返回发生异常的指令重新执行，那不会陷入死循环吗？")]),n("p",[t._v("不会，对于缺页异常，异常处理程序就是为了补页，页面补充好了，再继续执行之前的命令就不会发生缺页异常了。实在是糟糕，在异常处理程序中发现没有页可以补了，就需要阻塞调入，进行页面置换，如果依旧没有可用页面了，那就是页面挂了。")]),n("h4",{attrs:{id:"什么是访管指令？"}},[t._v("什么是访管指令？")]),n("blockquote",[n("p",[t._v("访管指令是可以在"),n("strong",[t._v("目态")]),t._v("下执行的指令。当源程序中有需要操作系统服务的要求时，编译程序就会在由源程序转换成的目标程序中安排一条“访管指令”并设置一些参数。当目标程序执行时，中央处理器若取到了“访管指令”就产生一个中断事件，中断装置就会把中央处理器转换成管态，并让操作系统处理该中断事件。操作系统分析访管指令中的参数，然后让相应的“系统调用”子程序为用户服务。系统调用功能完成后，操作系统把中央处理器的管态改为目态，并返回到用户程序。 —— 百度百科")])]),n("p",[t._v("访管指令不是特权指令。")]),n("p",[t._v("访管指令的意义在于让没有办法在目态下完成的工作，可通过访管指令请求内核系统执行完成并返回到用户程序。访管中断正是因访管指令的执行而产生。")]),n("p",[t._v("按照个人理解，应用程序请求系统调用（操作系统服务）需要访管指令牵线搭桥。访问指令相当于店里管钱的，下面的人需要资金的时候就向管事的申请，批下来后，钱就能到申请人的手里了。好比说，要执行某个任务，虽说自己没钱，但可以通过管钱的人员向店长申请，最终钱依旧能到手。")]),n("h2",{attrs:{id:"中断优先级"}},[t._v("中断优先级")]),n("p",[t._v("此处的中断为外中断，异常没有优先级一说，大多为一重。中断优先级可以按照中断请求的轻重缓急程度和设备运行速度快慢来界定，在中断装置中预设。如果系统正在执行某优先级的中断服务例程，那么只有更高优先级的中断请求才能中断此服务例程。")]),n("p",[n("strong",[t._v("中断屏蔽")]),t._v("是指 禁止 CPU 响应或禁止中断产生。前者是指 CPU 暂时不响应中断，等中断开放了被屏蔽的中断才能被响应，防止同级或高级的中断影响。后者是中断的事件发生时直接不允许提出中断请求也不能通知 CPU。好比， A 想找 B 帮忙，找到 B 之后，由于 B 正在忙很重要的事情，没工夫搭理，答应 A 等他忙完就帮 A 处理，这种情况属于 B 忙的时候禁止处理其它事情。再看， A 想找 C 帮忙，可是 C 提前在朋友圈说，最近出国旅游了根本没法帮忙，由此 A 即使有紧急的问题也不会告诉 C 了。")]),n("p",[t._v("多重中断有几种处理方法，一种是串行处理，CPU 响应中断的时候屏蔽其它部分或所有中断；第二种是即时处理，运行中断的过程中，如果出现程序性中断（异常），一般情况表明此时中断处理程序有异常，应对其进行立即响应；第三种是嵌套处理，对于有些必须处理的高优先级的中断事件，采用屏蔽的方法不妥，因此允许某些中断处理程序时依然能够响应中断。"),n("strong",[t._v("操作系统")]),t._v("必须预先规定每类中断的优先级，中断嵌套一般不会超过 3 重，过多嵌套会增加系统不必要的开销。")]),n("h2",{attrs:{id:"中断处理程序和中断服务例程"}},[t._v("中断处理程序和中断服务例程")]),n("p",[n("img",{attrs:{src:"http://img.yaoyanhuo.com/interrupt_01.png",alt:"中断处理程序"}})]),n("p",[t._v("如图，由于硬件限制，中断控制器的一条中断线会对接多个设备（图中为打印机）。而这一条中断线仅仅对应一个中断处理程序，那一个中断处理程序如何应对多台设备呢？这台打印机可能要打印，那台打印机可能要复印。这不，就出现了 中断服务例程，每台设备（打印机）都有自己的中断服务例程，各自完成自己的任务。")]),n("p",[t._v("中断线上产生中断信号时，中断控制器会把收到的 IRQ 号转成向量号。当中断请求到达时，进入中断处理程序，程序根据 IRQ 号和设备号即可定位到哪台机器产生的中断请求，然后执行相应的中断服务例程。可见，中断处理程序仅仅相当于一个通道，实际上的中断处理在中断服务例程中完成，一个中断处理程序对应了若干个中断服务例程。")]),n("h2",{attrs:{id:"常见中断"}},[t._v("常见中断")]),n("h3",{attrs:{id:"硬件故障中断"}},[t._v("硬件故障中断")]),n("p",[t._v("硬件故障中断属于异常的一种，一般由硬件故障导致，如电源故障、内存故障、设备故障。中断处理程序主要是保护现场，停止设备工作，停止处理器运行，报告故障信息等。")]),n("h3",{attrs:{id:"程序性中断"}},[t._v("程序性中断")]),n("p",[t._v("程序性中断也属于异常的一种，主要有一下几类错误，语法错误、逻辑错误和运行过程中产生的异常。语法错误由编译程序发现并报错，逻辑错误由测试程序发现并报错，定点溢出和除数为 0 会产生运行中异常。异常不同处理程序也会因实际需求而不同，因此，操作系统捕获的这类中断事件是原封不动地交由应用程序自行处理。")]),n("h3",{attrs:{id:"访管中断"}},[t._v("访管中断")]),n("p",[t._v("访管中断是由程序执行访管指令而引起的，访管指令包括操作码和访管参数，前者表示该指令是访管指令，后者表示具体的访管要求，不同的访管参数对应不同的服务要求。")]),n("p",[t._v("系统调用通过访管指令和中断机制来实现，不同的机器有不同的系统调用格式和功能号，但都有如下机器共性处理流程，")]),n("ol",[n("li",[t._v("程序执行访管指令，并通过适当的方式指明系统调用号")]),n("li",[t._v("通过中断机制进入访管中断处理程序，现场信息被保护到核心栈，按功能号跳转")]),n("li",[t._v("通过系统调用入口地址表找到响应中断服务例程的入口地址")]),n("li",[t._v("执行中断服务例程，正常情况下执行结束后返回系统调用的下一条指令继续执行")])]),n("h3",{attrs:{id:"时钟中断"}},[t._v("时钟中断")]),n("p",[t._v("时钟分为绝对时钟和间隔时钟，是操作系统进行调度的重要工具，负责维护系统绝对时间和日期，让分时进程按时间片轮转，让实时进程定时发送或接受控制信号等。陷入死循环的进程最终会因时间片耗尽而被迫让出处理器。")]),n("p",[t._v("对于"),n("strong",[t._v("绝对时钟")]),t._v("，系统会设置一个绝对时钟寄存器，定时的把寄存器的内容加 1，如果寄存器的初始内容是 0，那么就可以根据系统开机时间计算出当前时间。从 Linux V2.5 开始，时钟中断频率已经提高至 1000 Hz，即每 1 ms 产生一次 1 次时钟中断。")]),n("p",[n("strong",[t._v("间隔时钟")]),t._v("寄存器处理则刚好相反，每个时间切换点内容会减 1，内容减到 0 时，就会产生间隔时钟中断。通过程序设置初始寄存器初始值。如果进程需要延迟执行，也可通过系统调用将间隔时钟设为挂起状态，等到时钟中断产生，操作系统就会唤起该进程。")]),n("p",[t._v("有了硬件定时器，系统就可以记录进程的创建时间及进程在生命周期内占用 CPU 的时间。"),n("code",[t._v("ps -o")]),t._v("能查看某 Linux 系统某进程的开始时间、结束时间和运行时间。")]),n("pre",[n("code",[t._v("[~]$ ps -o stime,etime,time 32254\nSTIME     ELAPSED     TIME\nJan10 40-08:11:15 00:26:31")])]),n("p",[t._v("Linux 系统运行了不同的间隔定时器： real、virtual、profile，分别统计不同状态的耗时。在进程中同时设定这三个定时器，就可以了解进程在用户态、内核态和总的执行时间。")]),n("table",[n("thead",[n("tr",[n("th",[t._v("间隔定时器")]),n("th",[t._v("描述")])])]),n("tbody",[n("tr",[n("td",[t._v("real")]),n("td",[t._v("按实际经过的时间计时，无论进程处于何种状态（包括挂起），计时总在进行，当定时到达时发送给进程一个 "),n("code",[t._v("SIGALARM")]),t._v(" 信号")])]),n("tr",[n("td",[t._v("virtual")]),n("td",[t._v("仅在处理器处于用户态执行进程时计时，当定时到达时发送给进程一个 "),n("code",[t._v("SIGVTALARM")]),t._v(" 信号")])]),n("tr",[n("td",[t._v("profile")]),n("td",[t._v("进程执行在用户态和内核态都计时，当定时到达时发送给进程一个 "),n("code",[t._v("SIGROF")]),t._v(" 信号")])])])]),n("h2",{attrs:{id:"linux-系统中断"}},[t._v("Linux 系统中断")]),n("h3",{attrs:{id:"内核处理流程"}},[t._v("内核处理流程")]),n("p",[t._v("Linux 系统中，进程在用户态执行，发出系统调用请求或产生中断/异常时，促使处理器转换为内核态，内核开始工作。下图为 Linux 内核处理流程，可先了解大概运行规律。")]),n("p",[n("img",{attrs:{src:"http://img.yaoyanhuo.com/Linux%20%E5%86%85%E6%A0%B8%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B.png",alt:"Linux 内核处理流程"}})]),n("p",[t._v("异常处理结束后会从 "),n("code",[t._v("ret_from_exception")]),t._v(" 退出，中断处理结束后会从 "),n("code",[t._v("ret_from_intr()")]),t._v(" 退出，系统调用会从系统调用退出。当它们退出后，都会转到一个很重要的过程 "),n("code",[t._v("ret_from_sys_call")]),t._v(" 执行。该方法会处理如图所示的慢中断下半部分调度、积累的信号处理、"),n("code",[t._v("TIF_NEED_RESCHED")]),t._v("置位检查等。")]),n("h3",{attrs:{id:"中断处理机制"}},[t._v("中断处理机制")]),n("p",[t._v("Intel x86 机器共支持 256 种信号，从 0 ~ 255 编号，这 8 位无符号整数称为一个"),n("strong",[t._v("中断向量")]),t._v("。系统会分别为异常、非屏蔽中断、屏蔽中断、软中断、系统调用分配对应的中断向量。异常和非屏蔽中断的向量是固定的，而屏蔽中断的向量可以通过中断控制器编程改变。非屏蔽中断和异常一样，不可被屏蔽。")]),n("table",[n("thead",[n("tr",[n("th",[t._v("编号")]),n("th",[t._v("分配")])])]),n("tbody",[n("tr",[n("td",[t._v("0 ~ 31")]),n("td",[t._v("异常和非屏蔽中断向量")])]),n("tr",[n("td",[t._v("32 ~ 47")]),n("td",[t._v("屏蔽中断")])]),n("tr",[n("td",[t._v("48 ~ 255")]),n("td",[t._v("软中断，其中第 "),n("code",[t._v("128")]),t._v(" 号（0x80）用来实现系统调用")])])])]),n("p",[t._v("在 Linux 系统中，每个能发送中断信号的硬件设备控制器都有一根输出线，与中断控制器 8259A 的输入引脚相连，如下图 设备1 和 设备 3 所示。图中有两个 8259A 芯片共同组成中断控制器，每个芯片有 8 个输入端，一共可以扩展到 15 个中断源，多数情况下，15 个也是不够用的，因此系统会让多个设备共有一条中断线或动态分配中断线。")]),n("h4",{attrs:{id:"为什么各有-8-个输入端，最后只能扩展到-15-个中断源呢？"}},[t._v("为什么各有 8 个输入端，最后只能扩展到 15 个中断源呢？")]),n("p",[t._v("为了保证两个芯片连起来成为一个中断控制器，其中一个芯片的一个输入端要接另一个芯片。")]),n("p",[n("img",{attrs:{src:"http://img.yaoyanhuo.com/%E4%B8%AD%E6%96%AD%E4%BF%A1%E5%8F%B7.png",alt:"中断机制"}})]),n("p",[t._v("上图描述了中断控制器如何在设备和 CPU 之间传递中断请求。通过输入端接收中断信号，随后通过 INT 引脚向 CPU 发送中断信号请求，同时，输入端产生的 IRQ 号，经内部处理后 "),n("u",[t._v("IRQ 号转换成中断向量号")]),t._v("，放入某端口，等待 CPU 响应时来取。")]),n("p",[t._v("知道了中断信号的传输情况，再看看中断发生之前需要做些什么。")]),n("p",[t._v("Linux 内核初始化中断相关的工作有：初始化可编程中断控制器 8259A 、将 IDT 表的起始地址装入 IDTR 寄存器、初始化 IDT 中断门描述符。")]),n("p",[t._v("Linux 中断机制在保护模式下采用"),n("strong",[t._v("中断描述符表（Interrupt Descriptor Table, IDT）")]),t._v("，其表项被成为门描述符（gate descriptor），一个表项对应一个中断/异常。该表保存中断向量号对应的门描述符以及门描述符对应的中断程序入口地址。")]),n("p",[t._v("由于一个中断处理程序（一条中断线）对应多个中断服务例程，因此 Linux 系统为每个中断请求 IRQ 设置了一个中断请求队列，用 "),n("code",[t._v("irq_desc_r")]),t._v(" 描述，成为 IRQ 描述符，若干 irq 再组成一个数组。中断线共享的数据结构是"),n("code",[t._v("irqaction")]),t._v("， 包含中断服务例程 handler、 IRQ 号、设备号以及其它特征位和链接指针。 IDT 表的初始化后，每个中断服务队列依旧是空的，需要初始化设备驱动程序的时候调用 "),n("code",[t._v("request_irq()")]),t._v(" 注册中断服务例程，当卸载设备驱动程序时，调用 "),n("code",[t._v("free_irq()")]),t._v(" 注销中断服务例程，并释放中断线。")]),n("p",[t._v("中断处理程序的执行过程如图所示，")]),n("p",[n("img",{attrs:{src:"http://img.yaoyanhuo.com/Linux%20%E4%B8%AD%E6%96%AD%E5%A4%84%E7%90%86%E8%BF%87%E7%A8%8B.png",alt:"中断处理过程"}})]),n("p",[t._v("中断处理程序要做很多工作，如果整个过程全部屏蔽，容易产生中断请求丢失的情况，由此，Linux 中断处理程序被划分为上半部分和下半部分两个处理函数。中断向量表中登记的中断处理程序入口地址是上半部分，上半部分接收到中断立即开始工作，要决定其相关的下半部分是否执行，期间不可能被中断。为了更快地处理所有到来的其他中断，耗时的工作就需要放到下半部分进行处理，下半部分的执行是可以中断的，如果运行期间出现新的中断，则下半部分先暂停，等到新出现的中断上半部分运行完成后再回来继续执行之前的下半部分。")]),n("p",[t._v("有个类似的生活中的例子，去医院看病，先挂号再看诊。挂号是不可中断的，只有一个人挂完了才能给下一个人挂号，而且速度比较快；挂号后找对应医师开始看诊，看诊过程消耗时间比较长，可以被中断，比如有些反诊病人可以直接进入医务室看诊，医师稍有空就会帮反诊病人看一下，结束后医师继续看诊之前的病人。")]),n("h2",{attrs:{id:"参考文献"}},[t._v("参考文献")]),n("p",[t._v("《操作系统教程》第 5 版 . 费翔林 骆斌 . 编著，在回顾阅读过程中同时咨询操作系统老师（贾小林）")])])}],kt={},ht=Object(c["a"])(kt,mt,Ct,!1,null,null,null),gt=ht.exports,ft=function(){var t=this,s=t.$createElement;t._self._c;return t._m(0)},bt=[function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"markdown-to-vue-loader"},[n("h1",{attrs:{id:"处理器状态（操作系统）"}},[t._v("处理器状态（操作系统）")]),n("p",[n("em",[t._v("posted by yaoyanhuo on 2019-02-12")])]),n("blockquote",[n("p",[t._v("处理器状态至少有两种：内核态（管态）和用户态（目态）。有些操作系统会设置三种或三种以上的状态。内核状态可以执行所有指令，用户态只能执行非特权指令。程序状态字会记录程序运行的各种状态，以便保存和恢复程序现场。")])]),n("h2",{attrs:{id:"机器指令执行过程"}},[t._v("机器指令执行过程")]),n("p",[t._v("计算机的基本功能是执行程序，最终被执行的是存储在内存中的机器指令代码。每台计算机的机器指令集合统称指令系统，反应计算机的功能和处理能力。为了实现指令功能，处理器中设置了一组寄存器用作寻址或存放数据、变量和中间结果。")]),n("p",[n("img",{attrs:{src:"http://img.yaoyanhuo.com/%E5%A4%84%E7%90%86%E5%99%A8%E8%B0%83%E5%BA%A6.png",alt:"处理器调度.png"}})]),n("p",[t._v("程序以"),n("strong",[t._v("进程")]),t._v("的形式来占用处理器和系统资源。处理器调度（进程调度）就是控制和协调进程对处理器的竞争。")]),n("p",[n("img",{attrs:{src:"http://img.yaoyanhuo.com/%E6%8C%87%E4%BB%A4%E6%89%A7%E8%A1%8C%E8%BF%87%E7%A8%8B.png",alt:"指令执行过程.png"}})]),n("p",[t._v("处理器从程序计数器处拿到下一个指令的地址，通过该地址再从内存中的机器指令代码集合中取得具体指令放入指令寄存器，然后译码执行，程序计数器将自动增长或变为转移地址以指明下一条待执行指令的地址。")]),n("h2",{attrs:{id:"特权指令和非特权指令"}},[t._v("特权指令和非特权指令")]),n("p",[n("strong",[t._v("特权指令")]),t._v("是指只能在内核态下使用的指令，这些指令涉及改变机器状态、修改寄存器内容、启动设备I/O等，这些指令的执行不仅影响运行程序自身，而且干扰其他程序。")]),n("p",[n("strong",[t._v("非特权指令")]),t._v("是指在目态和管态下都能使用的指令。")]),n("p",[t._v("操作系统程序能够执行全部机器指令，应用程序只能使用非特权指令。由于应用程序在执行有关资源管理的机器指令时易于导致混乱，造成系统或用户信息被破坏。因此，在多道程序设计环境中，从资源管理和控制程序执行角度出发，必须把指令系统中的指令分成两类：特权指令和非特权指令。")]),n("p",[t._v("试想，如果任何指令都操作修改机器状态，A 打印机要使用机器，B 执行程序要暂停，C 网络监控要求立即执行，这时候，机器应该听谁的呢？执行什么呢？这还只是三个指令，如果更多指令出现，是不是机器该直接蒙圈罢工了？好比一家公司的资金，普通员工只能申请使用，而实际决定如何分配的是更高层的管理者。")]),n("h2",{attrs:{id:"处理器状态"}},[t._v("处理器状态")]),n("p",[t._v("计算机系统处理器中的运行程序分为两大类：系统程序和应用程序。系统程序控制应用程序，且有权管理和分配资源，应用程序只能申请使用资源。根据执行程序对资源和机器指令的使用权限，可将处理器设置成不同的状态，程序状态字中会有一位处理器硬件标志位，也叫处理器状态位，用于标记处理器当前状态。")]),n("p",[t._v("处理器状态至少有两种：内核态（管态）和用户态（目态）。有些操作系统会设置三种或三种以上的状态。处于内核态的处理器可以执行所有指令，访问所有内存单元和系统资源，甚至可以改变处理器状态（加载程序状态字可将处理器状态更为用户态）。用户态的处理器就不能执行特权指令了，也只能访问程序所在的地址空间，这样可以防止操作系统程序收到应用程序的侵害。好比仓库，如果阿猫阿狗都能开仓取货，那还有何安全可言。")]),n("p",[n("strong",[t._v("用户态向内核态转换触发条件")])]),n("ul",[n("li",[t._v("程序请求操作系统服务，执行系统调用")]),n("li",[t._v("程序运行时产生中断事件，运行程序被中断（如 I/O 操作完成），转向中断处理程序处理")]),n("li",[t._v("程序运行时产生异常事件，运行程序被中断（如 程序性中断），转向异常处理程序处理")])]),n("p",[t._v("三种途径都是通过中断机制发生，可说中断和异常是用户态转内核态的仅有途径。")]),n("p",[n("strong",[t._v("内核态转为用户态触发条件")])]),n("ul",[n("li",[t._v("通过执行 加载程序状态字特权指令 将内核态更为用户态")])]),n("h2",{attrs:{id:"用户栈和核心栈"}},[t._v("用户栈和核心栈")]),n("p",[n("strong",[t._v("用户栈")]),t._v("是用户进程空间开辟的一块区域，用于保存应用程序的子程序（函数）间相互调用的参数、返回值、返回点以及子程序的局部变量。")]),n("p",[n("strong",[t._v("核心栈")]),t._v("也叫系统栈或内核栈，是内存中属于操作系统空间的一块区域。用途包括两方面：")]),n("ol",[n("li",[t._v("保护中断现场，对于嵌套中断，被中断程序的现场信息依次压入核心栈，中断返回时逆序弹出；")]),n("li",[t._v("保存操作系统程序（函数）间互相调用的参数、返回值、返回点以及程序局部变量。")])]),n("p",[n("strong",[t._v("每个进程被创建都会被分配一个核心栈和一个用户栈")]),t._v("。核心栈可读可写不可执行，大小一般有限制， Linux 系统中为 8 KB。不可执行是因为核心栈里面存放的是断点、现场、变量等信息，不是可执行代码。可执行代码存放于内存中的代码区。此处只讨论栈，关于栈和堆的具体描述参见 "),n("a",{attrs:{href:"http://www.cnblogs.com/lln7777/archive/2012/03/14/2396164.html"}},[t._v("堆和栈的区别")])]),n("p",[t._v("虽说有两个栈，但硬件栈指针只有一个，随着处理器状态转换。内核态，指向核心栈；用户态，指向用户栈。")]),n("h2",{attrs:{id:"程序状态字"}},[t._v("程序状态字")]),n("p",[t._v("操作系统将程序运行时的一组动态信息汇集在一起，称为"),n("strong",[t._v("程序状态字")]),t._v("（Program Status Word, PSW），并存放在处理器的一组特殊寄存器里，以方便系统控制和管理。动态信息包括处理器状态位、下一条指令地址等。")]),n("p",[t._v("在 Interl x86 机器中，PSW 由标志寄存器 EFLAGS 和 指令寄存器 EIP 组成。前者记录当前处理器状态、程序执行结果和系统模式，后者记录下一条指令相对于当前代码片段起始位置的偏移量。从 PSW 存储的动态信息来看，主要用来指示运行程序状态，控制指令执行顺序，并保留和指示与运行程序有关的各种信息，主要作用是实现程序状态的保护和恢复。")]),n("p",[t._v("每个正在执行的程序都有一个与其当前运行状态相关的PSW，而每个处理器都设置一个硬件PSW寄存器，一个程序占用处理器执行时，PSW占用硬件PSW寄存器。多数计算机处理器现场可能没有具体的 PSW 寄存器，但总会有一组寄存器起到类似的作用。")]),n("h2",{attrs:{id:"参考文献"}},[t._v("参考文献")]),n("p",[t._v("《操作系统教程》第 5 版 . 费翔林 骆斌 . 编著，在回顾阅读过程中同时咨询操作系统老师（贾小林）")])])}],yt={},wt=Object(c["a"])(yt,ft,bt,!1,null,null,null),xt=wt.exports,Mt=function(){var t=this,s=t.$createElement;t._self._c;return t._m(0)},Pt=[function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"markdown-to-vue-loader"},[n("h1",{attrs:{id:"unix-and-linux"}},[t._v("UNIX and Linux")]),n("p",[n("em",[t._v("posted by yaoyanhuo on 2017-11-02")])]),n("blockquote",[n("p",[t._v("UNIX 操作系统是一个通用、交互型分时操作系统。Linux 是 UNIX 和 因特网相结合的产物。UNIX 付费， Linux 免费")])]),n("h2",{attrs:{id:"unix操作系统"}},[t._v("UNIX操作系统")]),n("p",[t._v("UNIX 操作系统是一个通用、交互型分时操作系统，最早由美国 AT&T 公司 Bell 实验室的 Kenneth Lane Thompson和Dennis MacAlistair Ritchie 于 1969 年开发成功，1971 年 UNIX 操作系统被移植到 PDP-11上。")]),n("p",[t._v("1973 年，Ritchie 在 BCPL（Basic Combined Programming Language）语言的基础上开发 C 语言，并用 C 语言重写 UNIX 操作系统，这对其后面的发展产生了重要作用，并为 UNIX 操作系统的迅速推广和普及迈出了决定性的一步。\n后来许多公司和大学都推出自己的 UNIX 系统，到 20 世纪 90 年代，UNIX 版本已多大 100 多个，且互不兼容，局面非常混乱。为解决这个问题，IEEE拟定了一个 UNIX 标准，称作 POSIX。")]),n("p",[t._v("UNIX 取得成功的最重要的原因是系统的开放性，公开的源码可方便地向 UNIX 系统中添加新功能和工具，使系统越来越完善，成为有效的程序开发支撑平台。")]),n("p",[t._v("UNIX 是目前唯一可以安装和运行在从微型计算机、工作站直到大型机和巨型机上的操作系统，一起看看它都有哪些特点。")]),n("ul",[n("li",[t._v("多用户多任务操作系统，用 C 语言编写，具有较好的易读性、易修改性和可移植性；")]),n("li",[t._v("结构可分为核心部分和应用子系统，便于做成开放系统；")]),n("li",[t._v("具有分层可装卸卷的文件系统，提供文件保护功能；")]),n("li",[t._v("提供 I/O 缓冲技术，系统效率高；")]),n("li",[t._v("抢占式动态优先级 CPU 调度，有力地支持分时功能；")]),n("li",[t._v("命令语言丰富弃权，提供功能强大的 Shell 语言作为用户界面；")]),n("li",[t._v("具有强大的网络与通信功能；")]),n("li",[t._v("请求分页续存管理，内存利用率高；")])]),n("h2",{attrs:{id:"自由软件和-linux-操作系统"}},[t._v("自由软件和 Linux 操作系统")]),n("p",[t._v("人类社会的发展已知识的积累为依托，不断地在前任所获知识的基础上发展和创新才逐步提高。软件产业也是如此，如果能把已有的开发成果加以利用，避免重复开发，将大大提高软件的生产率，借鉴他人开发经验，互相利用共同提高。")]),n("p",[t._v("自由软件是指遵循通用公共许可证规则（GPL），保证使用上的自由，获得源程序的自由，可以自行修改的自由，可以复制和推广的自由，也可以有收费自由的一种软件。")]),n("p",[t._v("自由软件之父  Richard Stallnab 于 1984 年组织开发一个软件体系计划 GNU，Gnu is not UNIX。GNU 写出了一套同 UNIX 兼容又是自由软件的UNIX系统，完成了大部分外围工作，目前人们熟知的软件如 gcc/g++ 编译器、 Objective C、E -mail 、Apache 、TCP/IP 、IP 、HTTPServer 都是自由软件的经典之作和知名软件。")]),n("p",[t._v("Linux 是由科学家 Linux Torvalds 于1991年编写完成的一个操作系统内核，当时的他还是赫尔辛基大学计算机系的学士，在学习课程中编写的一个内核原型，他把这个系统按自由软件版权在因特网上发布，由后来的许多人共同开发和改进。")]),n("p",[t._v("可以说，Linux 是 UNIX 和 因特网相结合的产物。")]),n("p",[t._v("Linux 是在 UNIX 的基础上产生的。UNIX 付费， Linux 免费。")]),n("p",[t._v("Linux 操作系统特点如下，")]),n("ul",[n("li",[t._v("多用户多任务 32 位通用操作系统；")]),n("li",[t._v("内置通信联网功能，支持 TCP/IP 协议；")]),n("li",[t._v("符合 POSIX 1003.1 标准；")]),n("li",[t._v("支持一系列UNIX开发工具；")]),n("li",[t._v("提供强大的管理功能和远程管理功能；")]),n("li",[t._v("支持 32 种文件系统；")]),n("li",[t._v("提供多种图形用户界面；")]),n("li",[t._v("系统开放源代码有利于发展各种特色的操作系统")])])])}],Tt={},It=Object(c["a"])(Tt,Mt,Pt,!1,null,null,null),Et=It.exports,jt=function(){var t=this,s=t.$createElement;t._self._c;return t._m(0)},St=[function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"markdown-to-vue-loader"},[n("h1",{attrs:{id:"node-verion-manager-nvm"}},[t._v("Node Verion Manager (NVM)")]),n("p",[n("em",[t._v("posted by yaoyanhuo on 2019-02-02, laste updated on 2019-04-17")])]),n("blockquote",[n("p",[t._v("Different projects have different environment, and we need to use different node version sometimes. but how ? NVM is just for that.\n项目不同，环境不同，有时候不可避免地需要使用不同版本的 Node。那怎么做呢？ NVM 应运而生。")])]),n("p",[t._v("Original document: "),n("a",{attrs:{href:"https://github.com/creationix/nvm"}},[t._v("https://github.com/creationix/nvm")]),t._v("\nwindows document: "),n("a",{attrs:{href:"https://github.com/coreybutler/nvm-windows"}},[t._v("https://github.com/coreybutler/nvm-windows")])]),n("h2",{attrs:{id:"what-is-nvm"}},[t._v("what is nvm")]),n("p",[t._v("Different projects have different environment, and we need to use different node version sometimes. but how ? NVM is just for that.")]),n("h2",{attrs:{id:"how-to-install-or-update-nvm"}},[t._v("how to install or update nvm")]),n("p",[n("strong",[t._v("Restart")]),t._v(" your terminal after excuting the follow script to ensure nvm being installed and configured successfully. and then use "),n("code",[t._v("command -v nvm")]),t._v(" to check if nvm has been installed. ")]),n("pre",[n("code",[t._v("curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash")])]),n("p",[t._v("There are some properties for installing. Using them just like "),n("code",[t._v("curl ... | bash | NVM_DIR='path/to/nvm'")]),t._v(".")]),n("table",[n("thead",[n("tr",[n("th",[t._v("property")]),n("th",[t._v("description")])])]),n("tbody",[n("tr",[n("td",[t._v("NVM_SOURCE")]),n("td",[n("code",[t._v("todo")])])]),n("tr",[n("td",[t._v("NVM_DIR")]),n("td",[t._v("the installed path for nvm")])]),n("tr",[n("td",[t._v("PROFILE")]),n("td",[n("code",[t._v("todo")])])])])]),n("p",[t._v("There is not only one installer, you can use "),n("code",[t._v("git")]),t._v(" or "),n("code",[t._v("wget")]),t._v(" to install nvm also.")]),n("h2",{attrs:{id:"how-to-use-nvm"}},[t._v("how to use nvm")]),n("p",[t._v("to install lastest release of node: "),n("code",[t._v("nvm install node")])]),n("p",[t._v("to install a specific version of node: "),n("code",[t._v("nvm install 10.15.1")])]),n("p",[t._v("to uninstall one version of node: "),n("code",[t._v("nvm uninstall 10.15.1")])]),n("p",[t._v("list all installed versions of node: "),n("code",[t._v("nvm ls")])]),n("p",[t._v("list all remote versions of node: "),n("code",[t._v("nvm ls-remote")])]),n("p",[t._v("switch the installed version of node: "),n("code",[t._v("nvm use node")]),t._v(" or "),n("code",[t._v("nvm use 11.9.0")])]),n("p",[t._v("show where the node of specific version was installed: "),n("code",[t._v("nvm which 5.0")])]),n("h1",{attrs:{id:"node-版本管理工具-nvm"}},[t._v("Node 版本管理工具 (NVM)")]),n("h2",{attrs:{id:"什么是-nvm"}},[t._v("什么是 NVM")]),n("p",[t._v("项目不同，环境不同，有时候不可避免地需要使用不同版本的 Node。那怎么做呢？ NVM 应运而生。")]),n("h2",{attrs:{id:"如何安装和更新-nvm"}},[t._v("如何安装和更新 NVM")]),n("p",[t._v("执行完下面的命令后，如果"),n("code",[t._v("command -v nvm")]),t._v("没有响应内容，记得重启控制台，或打开一个新的控制台再检查是否被成功安装。")]),n("pre",[n("code",[t._v("curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash")])]),n("p",[t._v("使用 "),n("code",[t._v("curl")]),t._v(" 安装 "),n("code",[t._v("nvm")]),t._v(" 时，可以自定义一些参数。像这样 "),n("code",[t._v("curl ... | bash | NVM_DIR='path/to/nvm'")]),t._v("。参数列表如下，")]),n("table",[n("thead",[n("tr",[n("th",[t._v("属性")]),n("th",[t._v("描述")])])]),n("tbody",[n("tr",[n("td",[t._v("NVM_SOURCE")]),n("td",[n("code",[t._v("todo")])])]),n("tr",[n("td",[t._v("NVM_DIR")]),n("td",[t._v("自定义 nvm 安装路径")])]),n("tr",[n("td",[t._v("PROFILE")]),n("td",[n("code",[t._v("todo")])])])])]),n("p",[t._v("安装方式不止一种，除了 "),n("code",[t._v("curl")]),t._v("，还可以使用 "),n("code",[t._v("git")]),t._v(" 和  "),n("code",[t._v("wget")]),t._v("。")]),n("h2",{attrs:{id:"如何使用-nvm"}},[t._v("如何使用 NVM")]),n("p",[t._v("安装最新版本 Node： "),n("code",[t._v("nvm install node")])]),n("p",[t._v("安装指定版本 Node: "),n("code",[t._v("nvm install 10.15.1")])]),n("p",[t._v("卸载某个版本的 Node: "),n("code",[t._v("nvm uninstall 10.15.1")])]),n("p",[t._v("查看已安装 Node 版本： "),n("code",[t._v("nvm ls")])]),n("p",[t._v("查看远程所有 Node 版本: "),n("code",[t._v("nvm ls-remote")])]),n("p",[n("strong",[t._v("切换 Node 版本")]),t._v(": "),n("code",[t._v("nvm use node")]),t._v(" 或者 "),n("code",[t._v("nvm use 11.9.0")])]),n("p",[t._v("查看特定版本 Node 安装路径: "),n("code",[t._v("nvm which 5.0")])])])}],Ot={},Bt=Object(c["a"])(Ot,jt,St,!1,null,null,null),Ut=Bt.exports,At=function(){var t=this,s=t.$createElement;t._self._c;return t._m(0)},Rt=[function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"markdown-to-vue-loader"},[n("h1",{attrs:{id:"http-概述"}},[t._v("HTTP 概述")]),n("p",[n("em",[t._v("posted by yaoyanhuo on 2018-03-06")])]),n("blockquote",[n("p",[t._v("学无止尽，HTTP 相关知识有很多，本文将从资源、事物、报文和连接几个方面进行概述。可以在短时间内对 HTTP 有一个初步的认识")])]),n("p",[t._v("官方解释 “因特网的多媒体信使”，通俗点说，就是个送信的。电话机出来之前，人与人（有一定距离）之间的沟通基本靠写信，然后由快递员送发。如果把 web 服务器和客户端比作当时人类，那么 HTTP 便是快递员。客户端通过 HTTP 发送请求，服务器收到后请求后通过 HTTP 返回响应结果。HTTP 生态中常见的客户端便是大家日常上网用到的浏览器(chrome/360浏览器/QQ浏览器)，服务器便是几乎对大家不可见，被管理员藏在某个暗暗的机房。\n"),n("img",{attrs:{src:"http://upload-images.jianshu.io/upload_images/10785326-bf78dddd5f3097b9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"http请求基本模型.png"}})]),n("h1",{attrs:{id:"资源"}},[t._v("资源")]),n("p",[t._v("Web 资源统一存放在 Web 服务器中，以供客户端请求使用。官方说法，Web 服务器是 Web 资源的宿主，好比人类是细菌的宿主。\nWeb 资源类型多样，几乎囊括操作系统中的所有文件类型，图片，视频，文本，如：html/excel/word/ppt/jpg/avi 等。此处提到的资源并非一定是提前写好的不会再变的静态文件，也可能是动态的，根据需要生成的软件程序，如，帮你进行股票交易/信息检索等。")]),n("p",[t._v("如此多的资源类型，总该有个分类，就像人类分小孩、大人和老人。于是，"),n("strong",[t._v("媒体类型")]),t._v(" 这一词汇便衍生出来，作为标签打在各个资源上。官方叫法为 "),n("strong",[t._v("MIME")]),t._v(" (Multipurpose Internet Mail Extension，多用途因特网邮件扩展），也许你会奇怪，为啥起这么个名字，只因当初该词的出现只是为了解决在不同的电子邮件系统之间搬移报文时存在的问题，效果比较好，HTTP 便采用了它，用来描述并标记多媒体内容。\nWeb 服务器响应请求时会为所有 HTTP 资源对象添加一个 MIME 类型，以供客户端查看（响应头的 content-type 字段）。为了更明显地区分资源类型，MIME 由主要对象类型和特定子类型构成，中间由一条斜杠来分隔。常见的 MIME 类型有数百个，需要的时候再查吧，无需记住每一种。")]),n("table",[n("thead",[n("tr",[n("th",[t._v("文件格式")]),n("th",[t._v("MIME类型")])])]),n("tbody",[n("tr",[n("td",[t._v("HTML")]),n("td",[t._v("text/html")])]),n("tr",[n("td",[t._v("普通 ASCII文本")]),n("td",[t._v("text/plain")])]),n("tr",[n("td",[t._v("JPEG")]),n("td",[t._v("image/jpeg")])]),n("tr",[n("td",[t._v("Apple 的 Quicktime 电影")]),n("td",[t._v("video/quicktime")])])])]),n("p",[n("strong",[t._v("URI/URL傻傻分不清楚？")]),t._v("  上面说的 Web资源都有一个自己的名字，这样，客户端可以根据个人兴趣取到对应的资源内容，这个名字被称为 "),n("strong",[t._v("统一资源标识符（Uniform Resource Identifier, URI）")]),t._v("。就像 A 班的妖艳货去找 B 班的小明，原本俩人不认识，但 A 只要到 B 班一问便可找到哪一位是小明了。“小明”就是这个人的统一资源标识符。明白了 URI，那啥是 URL呢？ 官方解释是 "),n("strong",[t._v("统一资源定位符（Uniform Resource Location）")]),t._v("。URI 和 URL两者的关系就好比 “手机” 和 “小米”，小米是一种手机样式，是手机的子集。同样的， URL 是 URI 的一种形式，是 URI 的子集。URI 的另一种不怎么被使用的形式是 "),n("strong",[t._v("统一资源名 URN (Uniform Resource Name)")]),t._v(" ，URN 作为特定内容的唯一名称使用，与目前资源所在地无关。URL 和 URN 的大区别就是 URL 是客户端根据资源定位符 URL 在某处服务器上寻找资源，资源定位符包含了服务器地址； URN 则是客户端根据资源名寻找资源，并不指定地址，就根据名称寻找，由于此方式难度较高，暂时仍处于实验阶段，未大范围使用。")]),n("pre",[n("code",[t._v("http://www.qq.com/index.html")])]),n("p",[t._v("上述字串为一个 URL ，"),n("code",[t._v("http")]),t._v(" 协议部分， "),n("code",[t._v("www.qq.com")]),t._v(" 域名部分， "),n("code",[t._v("index.html")]),t._v(" 文件路径部分。类比寄快递的话， "),n("code",[t._v("http")]),t._v(" 相当于选择哪家快递公司，"),n("code",[t._v("www.qq.com")]),t._v(" 相当于邮寄地址，如：上海市徐汇区田林路397号， "),n("code",[t._v("index.html")]),t._v(" 相当于收件人所在房屋及其姓名，如：XX小区XX号XX室 张三（收 ）。")]),n("h1",{attrs:{id:"事务"}},[t._v("事务")]),n("p",[t._v("一个 HTTP 事务由一条（从客户端发往服务器的）请求命令和一个（从服务器发回客户端的）响应结果组成。 \nHTTP 事务支持几种不同的请求命令，这些命名被称为 "),n("strong",[t._v("HTTP方法")]),t._v("如下表，")]),n("table",[n("thead",[n("tr",[n("th",[t._v("HTTP 方法")]),n("th",[t._v("描述")])])]),n("tbody",[n("tr",[n("td",[t._v("GET")]),n("td",[t._v("服务器向客户端发送命名资源")])]),n("tr",[n("td",[t._v("PUT")]),n("td",[t._v("将来自客户端的数据"),n("strong",[t._v("存储")]),t._v("到一个命名的服务器资源中去")])]),n("tr",[n("td",[t._v("DELETE")]),n("td",[t._v("从服务器"),n("strong",[t._v("删除")]),t._v("命名资源")])]),n("tr",[n("td",[t._v("POST")]),n("td",[t._v("将客户端数据"),n("strong",[t._v("发送")]),t._v("到一个服务器网关应用程序")])]),n("tr",[n("td",[t._v("HEAD")]),n("td",[t._v("仅发送命名资源响应中的 HTTP 首部")])])])]),n("p",[t._v("每条 HTTP 响应报文返回时都会携带一个"),n("strong",[t._v("状态码")]),t._v("，用以标识当前请求结果状态。如 200 表示请求成功，具体状态码和对应的原语可参看： "),n("a",{attrs:{href:"https://baike.baidu.com/item/HTTP%E7%8A%B6%E6%80%81%E7%A0%81"}},[t._v("https://baike.baidu.com/item/HTTP%E7%8A%B6%E6%80%81%E7%A0%81")]),t._v(" 。常用状态码（如： 200/301/302/403/400/500 等）需要记住，以便问题快速排查。")]),n("h1",{attrs:{id:"报文"}},[t._v("报文")]),n("p",[t._v("HTTP 报文都是纯文本，不是二进制。从 Web 客户端发往 Web 服务器的的 HTTP 报文称为"),n("strong",[t._v("请求报文")]),t._v("，从服务器发往客户端的报文则称为 "),n("strong",[t._v("响应报文")]),t._v("，此外，没有其他类型的 HTTP 报文。HTTP 报文包括以下三个部分：起始行、首部字段和主体。\n"),n("img",{attrs:{src:"http://upload-images.jianshu.io/upload_images/10785326-b542259fe4c31e50.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"HTTP报文基本结构.png"}})]),n("h1",{attrs:{id:"连接"}},[t._v("连接")]),n("p",[t._v("HTTP 是一个应用层协议，不关心网络通信的具体细节，把联网的具体细节交给了通信可靠的因特网传输协议 TCP/IP。 TCP 提供了 无差错的数据传输、排序传输和不分段数据流，保证数据按顺序且完整无误地进行传输。霸气点说，只要建立了 TCP 连接，客户端和服务器之间的报文交换就不会丢失、不会被破坏，也不会在接收时出错。没错，就是这么屌！")]),n("p",[n("img",{attrs:{src:"http://upload-images.jianshu.io/upload_images/10785326-e818158c59a74138.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"HTTP网络协议栈.png"}})]),n("pre",[n("code",[t._v("http://180.163.26.39:80/index.html\nhttp://www.qq.com:80/index.html\nhttp://www.qq.com/index.html")])]),n("p",[t._v("上述三个地址访问的均是同一个资源，只是表述方式不一样。\n第一个 URL 使用了机器的 IP 地址，180.163.26.39 及端口号 80；\n第二个 URL 使用的是域名（主机名）访问，端口号仍为 80，主机名就是 IP 地址比较人性化的名称， IP 全是数字，不方便记忆，使用主机名则非常方便记忆，浏览器访问域名，通过域名服务（Domain Name Service, DNS）机智将主机名转换成 IP，所以，其实质也是访问 IP。\n第三个 URL 没有端口号，因 http 默认端口一般为 80，故可省略不写， https 默认端口号为 443。")]),n("p",[t._v("下面我们一起看看当用户在浏览器中输入 "),n("code",[t._v("http://www.qq.com:80/index.html")]),t._v(" 后都发生了什么。")]),n("p",[n("img",{attrs:{src:"http://upload-images.jianshu.io/upload_images/10785326-8a13b0ca981bfa03.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"http连接处理.png"}})]),n("h1",{attrs:{id:"web的结构组件"}},[t._v("web的结构组件")]),n("p",[n("strong",[t._v("代理")]),t._v(" 位于客户端和服务器之间的 HTTP 中间实体，接受收所有客户端的 HTTP 请求，并将这些请求发送给服务器。 ")]),n("p",[n("strong",[t._v("缓存")]),t._v("  HTTP 的仓库，使用常用页面的副本可以保存在离客户端更近的地方，是一种特殊的 HTTP 代理服务器。 ")]),n("p",[n("strong",[t._v("网关")]),t._v(" 连接其他应用程序的特殊 Web 服务器，可中途改变协议方式，如 HTTP -> FTP。")]),n("p",[n("strong",[t._v("隧道")]),t._v(" 对 HTTP 通信报文进行盲转发的特殊处理，用于通过 HTTP 连接承载加密的安全套接字层（SSL, Secure Sockets Layer）流量，这样 SSL 流量就可以穿过只允许 Web 流量通过的防火墙了。")]),n("p",[n("strong",[t._v("Agent 代理")]),t._v(" 发起自动 HTTP 请求的半智能 Web 客户端，常见的 Agent 代理是 Web 浏览器和“网络蜘蛛”。")]),n("hr"),n("p",[t._v("【参考文献】\n《HTTP 权威指南》David Gourley 等编. 陈涓 赵振平译. 人民邮电出版社")])])}],Nt={},qt=Object(c["a"])(Nt,At,Rt,!1,null,null,null),Ht=qt.exports,Lt={name:"Blog",props:{name:String},components:{NginxError:q,SiteIsolateProcess:$,AxiosCrossOrigin:G,ElementInVision:K,corb:et,vueJsxOnSyntaxConflict:_t,Pm2:dt,Interrupt:gt,Processor_status:xt,Unix_linux:Et,Nvm:Ut,Http:Ht},data:function(){return{map:{nginx_error:q,site_isolate_process:$,axios_cross_origin:G,element_in_vision:K,corb:et,vue_jsx_on_syntax_conflict:_t,pm2:dt,interrupt:gt,processor_status:xt,unix_linux:Et,http20180306:Ht,nvm20190201:Ut}}},computed:{currentTabComponent:function(){return this.map[this.$route.params.name]}},watch:{},created:function(){},mounted:function(){},methods:{}},Xt=Lt,Dt=(n("e739"),Object(c["a"])(Xt,O,B,!1,null,null,null)),$t=Dt.exports;a["a"].use(w["a"]);var Wt=[{path:"/",component:S},{path:"/blog/:name",component:$t,props:!0}],Vt=new w["a"]({mode:"history",routes:Wt}),Ft=Vt;a["a"].config.productionTip=!1,new a["a"]({el:"#app",router:Ft,render:function(t){return t(y)},mounted:function(){document.dispatchEvent(new Event("render-event"))}})},"5e2f":function(t,s,n){"use strict";var a=n("9c3f"),e=n.n(a);e.a},"9c3f":function(t,s,n){},c1f0:function(t,s,n){},d192:function(t,s,n){},de3a:function(t,s,n){},e739:function(t,s,n){"use strict";var a=n("de3a"),e=n.n(a);e.a},ea59:function(t,s,n){"use strict";var a=n("d192"),e=n.n(a);e.a}});
//# sourceMappingURL=app.b91e7a8f.js.map